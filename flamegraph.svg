<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="1323"><g><title>`0x7FFCAE0A1082 (1 samples, 0.08%)</title><rect x="0.0000%" y="773" width="0.0756%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>`0x7FFCAE0BA407 (1 samples, 0.08%)</title><rect x="0.0000%" y="757" width="0.0756%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>`0x7FFCAE0BAC49 (1 samples, 0.08%)</title><rect x="0.0000%" y="741" width="0.0756%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>`0x7FFCAE12FB14 (1 samples, 0.08%)</title><rect x="0.0000%" y="725" width="0.0756%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>`0x7FFCAE0B88D4 (2 samples, 0.15%)</title><rect x="0.0000%" y="805" width="0.1512%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="815.50"></text></g><g><title>`0x7FFCAE0A0EBF (2 samples, 0.15%)</title><rect x="0.0000%" y="789" width="0.1512%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="799.50"></text></g><g><title>`0x7FFCAE0A10F0 (1 samples, 0.08%)</title><rect x="0.0756%" y="773" width="0.0756%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3256%" y="783.50"></text></g><g><title>`0x7FFCAE0A070F (1 samples, 0.08%)</title><rect x="0.0756%" y="757" width="0.0756%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3256%" y="767.50"></text></g><g><title>`0x7FFCAE0BC254 (1 samples, 0.08%)</title><rect x="0.0756%" y="741" width="0.0756%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3256%" y="751.50"></text></g><g><title>`0x7FFCAE0BC0CA (1 samples, 0.08%)</title><rect x="0.0756%" y="725" width="0.0756%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3256%" y="735.50"></text></g><g><title>`0x7FFCAE0BC4CC (1 samples, 0.08%)</title><rect x="0.0756%" y="709" width="0.0756%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3256%" y="719.50"></text></g><g><title>`0x7FFCAE12F874 (1 samples, 0.08%)</title><rect x="0.0756%" y="693" width="0.0756%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3256%" y="703.50"></text></g><g><title>`0x7FFCAE0BD5E1 (1 samples, 0.08%)</title><rect x="0.1512%" y="789" width="0.0756%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.4012%" y="799.50"></text></g><g><title>`0x7FFCAE0BE7EF (1 samples, 0.08%)</title><rect x="0.1512%" y="773" width="0.0756%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.4012%" y="783.50"></text></g><g><title>`0x7FFCAE0BE8CC (1 samples, 0.08%)</title><rect x="0.1512%" y="757" width="0.0756%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.4012%" y="767.50"></text></g><g><title>`0x7FFCAE103C10 (1 samples, 0.08%)</title><rect x="0.1512%" y="741" width="0.0756%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.4012%" y="751.50"></text></g><g><title>`0x7FFCAE12FCF4 (1 samples, 0.08%)</title><rect x="0.1512%" y="725" width="0.0756%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.4012%" y="735.50"></text></g><g><title>`0x2D2D00E00DD (4 samples, 0.30%)</title><rect x="0.0000%" y="853" width="0.3023%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4"/><text x="0.2500%" y="863.50"></text></g><g><title>`0x7FFCAE0BA25A (4 samples, 0.30%)</title><rect x="0.0000%" y="837" width="0.3023%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="847.50"></text></g><g><title>`0x7FFCAE0A8CAC (4 samples, 0.30%)</title><rect x="0.0000%" y="821" width="0.3023%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="4"/><text x="0.2500%" y="831.50"></text></g><g><title>`0x7FFCAE0B8940 (2 samples, 0.15%)</title><rect x="0.1512%" y="805" width="0.1512%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="2"/><text x="0.4012%" y="815.50"></text></g><g><title>`0x7FFCAE0BD62D (1 samples, 0.08%)</title><rect x="0.2268%" y="789" width="0.0756%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.4768%" y="799.50"></text></g><g><title>`0x7FFCAE0FCDFE (1 samples, 0.08%)</title><rect x="0.2268%" y="773" width="0.0756%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="0.4768%" y="783.50"></text></g><g><title>`0x7FFCAE0FD04D (1 samples, 0.08%)</title><rect x="0.2268%" y="757" width="0.0756%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="0.4768%" y="767.50"></text></g><g><title>`0x7FFCAE0B869F (1 samples, 0.08%)</title><rect x="0.2268%" y="741" width="0.0756%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="0.4768%" y="751.50"></text></g><g><title>`0x7FFC77D4A47E (1 samples, 0.08%)</title><rect x="0.2268%" y="725" width="0.0756%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="0.4768%" y="735.50"></text></g><g><title>`0x7FFC77D4810B (1 samples, 0.08%)</title><rect x="0.2268%" y="709" width="0.0756%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.4768%" y="719.50"></text></g><g><title>`0x7FFC77D4B622 (1 samples, 0.08%)</title><rect x="0.2268%" y="693" width="0.0756%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="0.4768%" y="703.50"></text></g><g><title>`0x7FFC77D4AC07 (1 samples, 0.08%)</title><rect x="0.2268%" y="677" width="0.0756%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="0.4768%" y="687.50"></text></g><g><title>`0x7FFC77D4AA41 (1 samples, 0.08%)</title><rect x="0.2268%" y="661" width="0.0756%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="0.4768%" y="671.50"></text></g><g><title>`0x7FFC77D4A99E (1 samples, 0.08%)</title><rect x="0.2268%" y="645" width="0.0756%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="0.4768%" y="655.50"></text></g><g><title>`0x7FFC77D4B9A9 (1 samples, 0.08%)</title><rect x="0.2268%" y="629" width="0.0756%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="0.4768%" y="639.50"></text></g><g><title>`0x7FFCAE12F674 (1 samples, 0.08%)</title><rect x="0.2268%" y="613" width="0.0756%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="1"/><text x="0.4768%" y="623.50"></text></g><g><title>`0x7FFCAE0EAA30 (4 samples, 0.30%)</title><rect x="0.3023%" y="853" width="0.3023%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="4"/><text x="0.5523%" y="863.50"></text></g><g><title>`0x7FFCAE0C5199 (1 samples, 0.08%)</title><rect x="0.6047%" y="821" width="0.0756%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.8547%" y="831.50"></text></g><g><title>`0x7FFCAE12F394 (1 samples, 0.08%)</title><rect x="0.6047%" y="805" width="0.0756%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.8547%" y="815.50"></text></g><g><title>`0x7FFCAE0B3C6C (1 samples, 0.08%)</title><rect x="0.6803%" y="757" width="0.0756%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="1"/><text x="0.9303%" y="767.50"></text></g><g><title>`0x7FFCAE0A0E8B (2 samples, 0.15%)</title><rect x="0.6803%" y="773" width="0.1512%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="2"/><text x="0.9303%" y="783.50"></text></g><g><title>`0x7FFCAE0B4005 (1 samples, 0.08%)</title><rect x="0.7559%" y="757" width="0.0756%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="1.0059%" y="767.50"></text></g><g><title>`0x7FFCAE0A0AFE (2 samples, 0.15%)</title><rect x="0.8314%" y="757" width="0.1512%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="2"/><text x="1.0814%" y="767.50"></text></g><g><title>`0x7FFCAE0BDB51 (2 samples, 0.15%)</title><rect x="0.8314%" y="741" width="0.1512%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="2"/><text x="1.0814%" y="751.50"></text></g><g><title>`0x7FFCAE0BA407 (2 samples, 0.15%)</title><rect x="0.8314%" y="725" width="0.1512%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="2"/><text x="1.0814%" y="735.50"></text></g><g><title>`0x7FFCAE0BAC49 (2 samples, 0.15%)</title><rect x="0.8314%" y="709" width="0.1512%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="2"/><text x="1.0814%" y="719.50"></text></g><g><title>`0x7FFCAE12FB14 (2 samples, 0.15%)</title><rect x="0.8314%" y="693" width="0.1512%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="2"/><text x="1.0814%" y="703.50"></text></g><g><title>`0x7FFCAE0A065C (1 samples, 0.08%)</title><rect x="0.9826%" y="741" width="0.0756%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="1"/><text x="1.2326%" y="751.50"></text></g><g><title>`0x7FFCAE12F9D4 (1 samples, 0.08%)</title><rect x="0.9826%" y="725" width="0.0756%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="1.2326%" y="735.50"></text></g><g><title>`0x7FFCAE0BC254 (1 samples, 0.08%)</title><rect x="1.0582%" y="725" width="0.0756%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="1.3082%" y="735.50"></text></g><g><title>`0x7FFCAE0BC0CA (1 samples, 0.08%)</title><rect x="1.0582%" y="709" width="0.0756%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="1.3082%" y="719.50"></text></g><g><title>`0x7FFCAE0BC4CC (1 samples, 0.08%)</title><rect x="1.0582%" y="693" width="0.0756%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="1"/><text x="1.3082%" y="703.50"></text></g><g><title>`0x7FFCAE12F874 (1 samples, 0.08%)</title><rect x="1.0582%" y="677" width="0.0756%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="1"/><text x="1.3082%" y="687.50"></text></g><g><title>`0x7FFCAE0C5986 (7 samples, 0.53%)</title><rect x="0.6803%" y="821" width="0.5291%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="7"/><text x="0.9303%" y="831.50"></text></g><g><title>`0x7FFCAE0F23CA (7 samples, 0.53%)</title><rect x="0.6803%" y="805" width="0.5291%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="7"/><text x="0.9303%" y="815.50"></text></g><g><title>`0x7FFCAE0A0DCB (7 samples, 0.53%)</title><rect x="0.6803%" y="789" width="0.5291%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="7"/><text x="0.9303%" y="799.50"></text></g><g><title>`0x7FFCAE0A0F90 (5 samples, 0.38%)</title><rect x="0.8314%" y="773" width="0.3779%" height="15" fill="rgb(231,138,38)" fg:x="11" fg:w="5"/><text x="1.0814%" y="783.50"></text></g><g><title>`0x7FFCAE0A0BC8 (3 samples, 0.23%)</title><rect x="0.9826%" y="757" width="0.2268%" height="15" fill="rgb(231,145,46)" fg:x="13" fg:w="3"/><text x="1.2326%" y="767.50"></text></g><g><title>`0x7FFCAE0A070F (2 samples, 0.15%)</title><rect x="1.0582%" y="741" width="0.1512%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="2"/><text x="1.3082%" y="751.50"></text></g><g><title>`0x7FFCAE0BC3F8 (1 samples, 0.08%)</title><rect x="1.1338%" y="725" width="0.0756%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="1.3838%" y="735.50"></text></g><g><title>`0x7FFCAE0B4749 (1 samples, 0.08%)</title><rect x="1.1338%" y="709" width="0.0756%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="1.3838%" y="719.50"></text></g><g><title>`0x7FFCAE102EEF (1 samples, 0.08%)</title><rect x="1.1338%" y="693" width="0.0756%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="1.3838%" y="703.50"></text></g><g><title>`0x7FFCAE0C4D44 (1 samples, 0.08%)</title><rect x="1.1338%" y="677" width="0.0756%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="1.3838%" y="687.50"></text></g><g><title>`0x7FFCAE0C4EE6 (1 samples, 0.08%)</title><rect x="1.1338%" y="661" width="0.0756%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="1.3838%" y="671.50"></text></g><g><title>`0x7FFCAE1322E4 (1 samples, 0.08%)</title><rect x="1.1338%" y="645" width="0.0756%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="1.3838%" y="655.50"></text></g><g><title>`0x7FFCAE0A1082 (2 samples, 0.15%)</title><rect x="1.2094%" y="645" width="0.1512%" height="15" fill="rgb(210,229,1)" fg:x="16" fg:w="2"/><text x="1.4594%" y="655.50"></text></g><g><title>`0x7FFCAE0BA407 (2 samples, 0.15%)</title><rect x="1.2094%" y="629" width="0.1512%" height="15" fill="rgb(222,148,37)" fg:x="16" fg:w="2"/><text x="1.4594%" y="639.50"></text></g><g><title>`0x7FFCAE0BAC49 (2 samples, 0.15%)</title><rect x="1.2094%" y="613" width="0.1512%" height="15" fill="rgb(234,67,33)" fg:x="16" fg:w="2"/><text x="1.4594%" y="623.50"></text></g><g><title>`0x7FFCAE12FB14 (2 samples, 0.15%)</title><rect x="1.2094%" y="597" width="0.1512%" height="15" fill="rgb(247,98,35)" fg:x="16" fg:w="2"/><text x="1.4594%" y="607.50"></text></g><g><title>`0x7FFCAE0A06B6 (1 samples, 0.08%)</title><rect x="1.3605%" y="629" width="0.0756%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="1"/><text x="1.6105%" y="639.50"></text></g><g><title>`0x7FFCAE12FCB4 (1 samples, 0.08%)</title><rect x="1.3605%" y="613" width="0.0756%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="1"/><text x="1.6105%" y="623.50"></text></g><g><title>`0x7FFCAE0BC254 (1 samples, 0.08%)</title><rect x="1.4361%" y="613" width="0.0756%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="1"/><text x="1.6861%" y="623.50"></text></g><g><title>`0x7FFCAE0BC0CA (1 samples, 0.08%)</title><rect x="1.4361%" y="597" width="0.0756%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="1"/><text x="1.6861%" y="607.50"></text></g><g><title>`0x7FFCAE0BC4CC (1 samples, 0.08%)</title><rect x="1.4361%" y="581" width="0.0756%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="1"/><text x="1.6861%" y="591.50"></text></g><g><title>`0x7FFCAE12F874 (1 samples, 0.08%)</title><rect x="1.4361%" y="565" width="0.0756%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="1"/><text x="1.6861%" y="575.50"></text></g><g><title>`0x7FFCAE0B46BB (1 samples, 0.08%)</title><rect x="1.5117%" y="597" width="0.0756%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="1"/><text x="1.7617%" y="607.50"></text></g><g><title>`0x7FFCAE0B4906 (1 samples, 0.08%)</title><rect x="1.5117%" y="581" width="0.0756%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="1"/><text x="1.7617%" y="591.50"></text></g><g><title>`0x7FFCAE0B58C4 (1 samples, 0.08%)</title><rect x="1.5117%" y="565" width="0.0756%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="1"/><text x="1.7617%" y="575.50"></text></g><g><title>`0x7FFCAE0BCE29 (1 samples, 0.08%)</title><rect x="1.5117%" y="549" width="0.0756%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="1"/><text x="1.7617%" y="559.50"></text></g><g><title>`0x7FFCAE0BC254 (1 samples, 0.08%)</title><rect x="1.5117%" y="533" width="0.0756%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="1"/><text x="1.7617%" y="543.50"></text></g><g><title>`0x7FFCAE0BC0CA (1 samples, 0.08%)</title><rect x="1.5117%" y="517" width="0.0756%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="1"/><text x="1.7617%" y="527.50"></text></g><g><title>`0x7FFCAE0BC4CC (1 samples, 0.08%)</title><rect x="1.5117%" y="501" width="0.0756%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="1"/><text x="1.7617%" y="511.50"></text></g><g><title>`0x7FFCAE12F874 (1 samples, 0.08%)</title><rect x="1.5117%" y="485" width="0.0756%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="1"/><text x="1.7617%" y="495.50"></text></g><g><title>`0x7FFCAE0B88D4 (6 samples, 0.45%)</title><rect x="1.2094%" y="677" width="0.4535%" height="15" fill="rgb(211,96,35)" fg:x="16" fg:w="6"/><text x="1.4594%" y="687.50"></text></g><g><title>`0x7FFCAE0A0EBF (6 samples, 0.45%)</title><rect x="1.2094%" y="661" width="0.4535%" height="15" fill="rgb(253,215,40)" fg:x="16" fg:w="6"/><text x="1.4594%" y="671.50"></text></g><g><title>`0x7FFCAE0A10F0 (4 samples, 0.30%)</title><rect x="1.3605%" y="645" width="0.3023%" height="15" fill="rgb(211,81,21)" fg:x="18" fg:w="4"/><text x="1.6105%" y="655.50"></text></g><g><title>`0x7FFCAE0A070F (3 samples, 0.23%)</title><rect x="1.4361%" y="629" width="0.2268%" height="15" fill="rgb(208,190,38)" fg:x="19" fg:w="3"/><text x="1.6861%" y="639.50"></text></g><g><title>`0x7FFCAE0BC3F8 (2 samples, 0.15%)</title><rect x="1.5117%" y="613" width="0.1512%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="2"/><text x="1.7617%" y="623.50"></text></g><g><title>`0x7FFCAE0B4774 (1 samples, 0.08%)</title><rect x="1.5873%" y="597" width="0.0756%" height="15" fill="rgb(237,122,38)" fg:x="21" fg:w="1"/><text x="1.8373%" y="607.50"></text></g><g><title>`0x7FFCAE0B3D65 (1 samples, 0.08%)</title><rect x="1.5873%" y="581" width="0.0756%" height="15" fill="rgb(244,218,35)" fg:x="21" fg:w="1"/><text x="1.8373%" y="591.50"></text></g><g><title>`0x7FFCAE0BE7EF (1 samples, 0.08%)</title><rect x="1.6629%" y="645" width="0.0756%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="1"/><text x="1.9129%" y="655.50"></text></g><g><title>`0x7FFCAE0BE94C (1 samples, 0.08%)</title><rect x="1.6629%" y="629" width="0.0756%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="1"/><text x="1.9129%" y="639.50"></text></g><g><title>`0x7FFCA826DA3D (1 samples, 0.08%)</title><rect x="1.6629%" y="613" width="0.0756%" height="15" fill="rgb(235,124,12)" fg:x="22" fg:w="1"/><text x="1.9129%" y="623.50"></text></g><g><title>`0x7FFCA826DC15 (1 samples, 0.08%)</title><rect x="1.6629%" y="597" width="0.0756%" height="15" fill="rgb(224,169,11)" fg:x="22" fg:w="1"/><text x="1.9129%" y="607.50"></text></g><g><title>`0x7FFCA826D7D4 (1 samples, 0.08%)</title><rect x="1.6629%" y="581" width="0.0756%" height="15" fill="rgb(250,166,2)" fg:x="22" fg:w="1"/><text x="1.9129%" y="591.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="1.6629%" y="565" width="0.0756%" height="15" fill="rgb(242,216,29)" fg:x="22" fg:w="1"/><text x="1.9129%" y="575.50"></text></g><g><title>`0x7FFCAE0BD5E1 (2 samples, 0.15%)</title><rect x="1.6629%" y="661" width="0.1512%" height="15" fill="rgb(230,116,27)" fg:x="22" fg:w="2"/><text x="1.9129%" y="671.50"></text></g><g><title>`0x7FFCAE0BE809 (1 samples, 0.08%)</title><rect x="1.7385%" y="645" width="0.0756%" height="15" fill="rgb(228,99,48)" fg:x="23" fg:w="1"/><text x="1.9885%" y="655.50"></text></g><g><title>`0x7FFCAE0BE7EF (1 samples, 0.08%)</title><rect x="1.7385%" y="629" width="0.0756%" height="15" fill="rgb(253,11,6)" fg:x="23" fg:w="1"/><text x="1.9885%" y="639.50"></text></g><g><title>`0x7FFCAE0BE94C (1 samples, 0.08%)</title><rect x="1.7385%" y="613" width="0.0756%" height="15" fill="rgb(247,143,39)" fg:x="23" fg:w="1"/><text x="1.9885%" y="623.50"></text></g><g><title>`0x7FFCA826DA3D (1 samples, 0.08%)</title><rect x="1.7385%" y="597" width="0.0756%" height="15" fill="rgb(236,97,10)" fg:x="23" fg:w="1"/><text x="1.9885%" y="607.50"></text></g><g><title>`0x7FFCA826DC15 (1 samples, 0.08%)</title><rect x="1.7385%" y="581" width="0.0756%" height="15" fill="rgb(233,208,19)" fg:x="23" fg:w="1"/><text x="1.9885%" y="591.50"></text></g><g><title>`0x7FFCA826D6DE (1 samples, 0.08%)</title><rect x="1.7385%" y="565" width="0.0756%" height="15" fill="rgb(216,164,2)" fg:x="23" fg:w="1"/><text x="1.9885%" y="575.50"></text></g><g><title>`0x7FFCAE12F9D4 (1 samples, 0.08%)</title><rect x="1.7385%" y="549" width="0.0756%" height="15" fill="rgb(220,129,5)" fg:x="23" fg:w="1"/><text x="1.9885%" y="559.50"></text></g><g><title>`0x7FFCADC57C0A (1 samples, 0.08%)</title><rect x="1.8141%" y="581" width="0.0756%" height="15" fill="rgb(242,17,10)" fg:x="24" fg:w="1"/><text x="2.0641%" y="591.50"></text></g><g><title>`0x7FFCADC83D07 (1 samples, 0.08%)</title><rect x="1.8141%" y="565" width="0.0756%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="1"/><text x="2.0641%" y="575.50"></text></g><g><title>`0x7FFCAB4A5E7D (1 samples, 0.08%)</title><rect x="1.8141%" y="549" width="0.0756%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="1"/><text x="2.0641%" y="559.50"></text></g><g><title>`0x7FFCAB9DBAE8 (10 samples, 0.76%)</title><rect x="1.2094%" y="789" width="0.7559%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="10"/><text x="1.4594%" y="799.50"></text></g><g><title>`0x7FFCAB9E8F91 (10 samples, 0.76%)</title><rect x="1.2094%" y="773" width="0.7559%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="10"/><text x="1.4594%" y="783.50"></text></g><g><title>`0x7FFCAB9E1843 (10 samples, 0.76%)</title><rect x="1.2094%" y="757" width="0.7559%" height="15" fill="rgb(232,23,21)" fg:x="16" fg:w="10"/><text x="1.4594%" y="767.50"></text></g><g><title>`0x7FFCAB466452 (10 samples, 0.76%)</title><rect x="1.2094%" y="741" width="0.7559%" height="15" fill="rgb(244,5,23)" fg:x="16" fg:w="10"/><text x="1.4594%" y="751.50"></text></g><g><title>`0x7FFC77D435EC (10 samples, 0.76%)</title><rect x="1.2094%" y="725" width="0.7559%" height="15" fill="rgb(226,81,46)" fg:x="16" fg:w="10"/><text x="1.4594%" y="735.50"></text></g><g><title>`0x7FFCAE0BA25A (10 samples, 0.76%)</title><rect x="1.2094%" y="709" width="0.7559%" height="15" fill="rgb(247,70,30)" fg:x="16" fg:w="10"/><text x="1.4594%" y="719.50"></text></g><g><title>`0x7FFCAE0A8CAC (10 samples, 0.76%)</title><rect x="1.2094%" y="693" width="0.7559%" height="15" fill="rgb(212,68,19)" fg:x="16" fg:w="10"/><text x="1.4594%" y="703.50"></text></g><g><title>`0x7FFCAE0B8940 (4 samples, 0.30%)</title><rect x="1.6629%" y="677" width="0.3023%" height="15" fill="rgb(240,187,13)" fg:x="22" fg:w="4"/><text x="1.9129%" y="687.50"></text></g><g><title>`0x7FFCAE0BD62D (2 samples, 0.15%)</title><rect x="1.8141%" y="661" width="0.1512%" height="15" fill="rgb(223,113,26)" fg:x="24" fg:w="2"/><text x="2.0641%" y="671.50"></text></g><g><title>`0x7FFCAE0FCE70 (2 samples, 0.15%)</title><rect x="1.8141%" y="645" width="0.1512%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="2"/><text x="2.0641%" y="655.50"></text></g><g><title>`0x7FFCAE0FCDFE (2 samples, 0.15%)</title><rect x="1.8141%" y="629" width="0.1512%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="2"/><text x="2.0641%" y="639.50"></text></g><g><title>`0x7FFCAE0FD04D (2 samples, 0.15%)</title><rect x="1.8141%" y="613" width="0.1512%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="2"/><text x="2.0641%" y="623.50"></text></g><g><title>`0x7FFCAE0B869F (2 samples, 0.15%)</title><rect x="1.8141%" y="597" width="0.1512%" height="15" fill="rgb(224,114,35)" fg:x="24" fg:w="2"/><text x="2.0641%" y="607.50"></text></g><g><title>`0x7FFCADC57C2F (1 samples, 0.08%)</title><rect x="1.8896%" y="581" width="0.0756%" height="15" fill="rgb(245,159,27)" fg:x="25" fg:w="1"/><text x="2.1396%" y="591.50"></text></g><g><title>`0x7FFCADC739A2 (1 samples, 0.08%)</title><rect x="1.8896%" y="565" width="0.0756%" height="15" fill="rgb(245,172,44)" fg:x="25" fg:w="1"/><text x="2.1396%" y="575.50"></text></g><g><title>`0x7FFCADC73BA4 (1 samples, 0.08%)</title><rect x="1.8896%" y="549" width="0.0756%" height="15" fill="rgb(236,23,11)" fg:x="25" fg:w="1"/><text x="2.1396%" y="559.50"></text></g><g><title>`0x7FFCADC73F73 (1 samples, 0.08%)</title><rect x="1.8896%" y="533" width="0.0756%" height="15" fill="rgb(205,117,38)" fg:x="25" fg:w="1"/><text x="2.1396%" y="543.50"></text></g><g><title>`0x7FFCADC738A9 (1 samples, 0.08%)</title><rect x="1.8896%" y="517" width="0.0756%" height="15" fill="rgb(237,72,25)" fg:x="25" fg:w="1"/><text x="2.1396%" y="527.50"></text></g><g><title>`0x7FFCADC7D9B0 (1 samples, 0.08%)</title><rect x="1.8896%" y="501" width="0.0756%" height="15" fill="rgb(244,70,9)" fg:x="25" fg:w="1"/><text x="2.1396%" y="511.50"></text></g><g><title>`0x7FFCAB9DBCD9 (11 samples, 0.83%)</title><rect x="1.2094%" y="805" width="0.8314%" height="15" fill="rgb(217,125,39)" fg:x="16" fg:w="11"/><text x="1.4594%" y="815.50"></text></g><g><title>`0x7FFCAB9DBB18 (1 samples, 0.08%)</title><rect x="1.9652%" y="789" width="0.0756%" height="15" fill="rgb(235,36,10)" fg:x="26" fg:w="1"/><text x="2.2152%" y="799.50"></text></g><g><title>`0x7FFCACFC7FAB (1 samples, 0.08%)</title><rect x="1.9652%" y="773" width="0.0756%" height="15" fill="rgb(251,123,47)" fg:x="26" fg:w="1"/><text x="2.2152%" y="783.50"></text></g><g><title>`0x7FFCAE0E0C44 (1 samples, 0.08%)</title><rect x="1.9652%" y="757" width="0.0756%" height="15" fill="rgb(221,13,13)" fg:x="26" fg:w="1"/><text x="2.2152%" y="767.50"></text></g><g><title>`0x7FFCAE12F8F4 (1 samples, 0.08%)</title><rect x="1.9652%" y="741" width="0.0756%" height="15" fill="rgb(238,131,9)" fg:x="26" fg:w="1"/><text x="2.2152%" y="751.50"></text></g><g><title>`0x7FFCAB9E4EAD (1 samples, 0.08%)</title><rect x="2.0408%" y="805" width="0.0756%" height="15" fill="rgb(211,50,8)" fg:x="27" fg:w="1"/><text x="2.2908%" y="815.50"></text></g><g><title>block.exe`pre_cpp_initialization() (1 samples, 0.08%)</title><rect x="2.0408%" y="789" width="0.0756%" height="15" fill="rgb(245,182,24)" fg:x="27" fg:w="1"/><text x="2.2908%" y="799.50"></text></g><g><title>`0x7FFCAB4B27DB (1 samples, 0.08%)</title><rect x="2.0408%" y="773" width="0.0756%" height="15" fill="rgb(242,14,37)" fg:x="27" fg:w="1"/><text x="2.2908%" y="783.50"></text></g><g><title>`0x7FFCAB4B2A2D (1 samples, 0.08%)</title><rect x="2.0408%" y="757" width="0.0756%" height="15" fill="rgb(246,228,12)" fg:x="27" fg:w="1"/><text x="2.2908%" y="767.50"></text></g><g><title>`0x7FFCAE12F7D4 (1 samples, 0.08%)</title><rect x="2.0408%" y="741" width="0.0756%" height="15" fill="rgb(213,55,15)" fg:x="27" fg:w="1"/><text x="2.2908%" y="751.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;block::blockchain::Block&lt;block::Data&gt;,alloc::alloc::Global&gt;::push(block::blockchain::Block (1 samples, 0.08%)</title><rect x="2.1164%" y="549" width="0.0756%" height="15" fill="rgb(209,9,3)" fg:x="28" fg:w="1"/><text x="2.3664%" y="559.50"></text></g><g><title>block.exe`simple_logger::impl$2::log (1 samples, 0.08%)</title><rect x="2.1164%" y="533" width="0.0756%" height="15" fill="rgb(230,59,30)" fg:x="28" fg:w="1"/><text x="2.3664%" y="543.50"></text></g><g><title>block.exe`alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.1164%" y="517" width="0.0756%" height="15" fill="rgb(209,121,21)" fg:x="28" fg:w="1"/><text x="2.3664%" y="527.50"></text></g><g><title>block.exe`core::result::Result::expect (1 samples, 0.08%)</title><rect x="2.1164%" y="501" width="0.0756%" height="15" fill="rgb(220,109,13)" fg:x="28" fg:w="1"/><text x="2.3664%" y="511.50"></text></g><g><title>block.exe`core::fmt::write (1 samples, 0.08%)</title><rect x="2.1164%" y="485" width="0.0756%" height="15" fill="rgb(232,18,1)" fg:x="28" fg:w="1"/><text x="2.3664%" y="495.50"></text></g><g><title>block.exe`core::fmt::write (1 samples, 0.08%)</title><rect x="2.1164%" y="469" width="0.0756%" height="15" fill="rgb(215,41,42)" fg:x="28" fg:w="1"/><text x="2.3664%" y="479.50"></text></g><g><title>block.exe`core::fmt::float::float_to_decimal_common_shortest&lt;f32&gt; (1 samples, 0.08%)</title><rect x="2.1164%" y="453" width="0.0756%" height="15" fill="rgb(224,123,36)" fg:x="28" fg:w="1"/><text x="2.3664%" y="463.50"></text></g><g><title>block.exe`core::fmt::Formatter::write_formatted_parts (1 samples, 0.08%)</title><rect x="2.1164%" y="437" width="0.0756%" height="15" fill="rgb(240,125,3)" fg:x="28" fg:w="1"/><text x="2.3664%" y="447.50"></text></g><g><title>block.exe`alloc::string::impl$67::write_str (1 samples, 0.08%)</title><rect x="2.1164%" y="421" width="0.0756%" height="15" fill="rgb(205,98,50)" fg:x="28" fg:w="1"/><text x="2.3664%" y="431.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (2 samples, 0.15%)</title><rect x="2.3432%" y="501" width="0.1512%" height="15" fill="rgb(205,185,37)" fg:x="31" fg:w="2"/><text x="2.5932%" y="511.50"></text></g><g><title>block.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (2 samples, 0.15%)</title><rect x="2.3432%" y="485" width="0.1512%" height="15" fill="rgb(238,207,15)" fg:x="31" fg:w="2"/><text x="2.5932%" y="495.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (2 samples, 0.15%)</title><rect x="2.3432%" y="469" width="0.1512%" height="15" fill="rgb(213,199,42)" fg:x="31" fg:w="2"/><text x="2.5932%" y="479.50"></text></g><g><title>`0x7FFC7CFB1606 (1 samples, 0.08%)</title><rect x="2.4187%" y="453" width="0.0756%" height="15" fill="rgb(235,201,11)" fg:x="32" fg:w="1"/><text x="2.6687%" y="463.50"></text></g><g><title>`0x7FFCAE0CC6E7 (1 samples, 0.08%)</title><rect x="2.4943%" y="437" width="0.0756%" height="15" fill="rgb(207,46,11)" fg:x="33" fg:w="1"/><text x="2.7443%" y="447.50"></text></g><g><title>`0x7FFCAE0CC782 (1 samples, 0.08%)</title><rect x="2.5699%" y="437" width="0.0756%" height="15" fill="rgb(241,35,35)" fg:x="34" fg:w="1"/><text x="2.8199%" y="447.50"></text></g><g><title>`0x7FFCAE0CC79D (1 samples, 0.08%)</title><rect x="2.6455%" y="437" width="0.0756%" height="15" fill="rgb(243,32,47)" fg:x="35" fg:w="1"/><text x="2.8955%" y="447.50"></text></g><g><title>`0x7FFCAE0CD005 (1 samples, 0.08%)</title><rect x="2.7211%" y="421" width="0.0756%" height="15" fill="rgb(247,202,23)" fg:x="36" fg:w="1"/><text x="2.9711%" y="431.50"></text></g><g><title>`0x7FFCAE0CD03D (1 samples, 0.08%)</title><rect x="2.7967%" y="421" width="0.0756%" height="15" fill="rgb(219,102,11)" fg:x="37" fg:w="1"/><text x="3.0467%" y="431.50"></text></g><g><title>`0x7FFCAE0CD06D (1 samples, 0.08%)</title><rect x="2.8723%" y="421" width="0.0756%" height="15" fill="rgb(243,110,44)" fg:x="38" fg:w="1"/><text x="3.1223%" y="431.50"></text></g><g><title>`0x7FFCAE0CD0F3 (1 samples, 0.08%)</title><rect x="2.9478%" y="421" width="0.0756%" height="15" fill="rgb(222,74,54)" fg:x="39" fg:w="1"/><text x="3.1978%" y="431.50"></text></g><g><title>`0x7FFCAE0CD102 (3 samples, 0.23%)</title><rect x="3.0234%" y="421" width="0.2268%" height="15" fill="rgb(216,99,12)" fg:x="40" fg:w="3"/><text x="3.2734%" y="431.50"></text></g><g><title>`0x7FFCAE0CD16B (1 samples, 0.08%)</title><rect x="3.2502%" y="421" width="0.0756%" height="15" fill="rgb(226,22,26)" fg:x="43" fg:w="1"/><text x="3.5002%" y="431.50"></text></g><g><title>`0x7FFCAE0CD1AA (1 samples, 0.08%)</title><rect x="3.3258%" y="421" width="0.0756%" height="15" fill="rgb(217,163,10)" fg:x="44" fg:w="1"/><text x="3.5758%" y="431.50"></text></g><g><title>`0x7FFCAE12ED15 (1 samples, 0.08%)</title><rect x="3.3258%" y="405" width="0.0756%" height="15" fill="rgb(213,25,53)" fg:x="44" fg:w="1"/><text x="3.5758%" y="415.50"></text></g><g><title>`0x7FFCAE0CC7BA (10 samples, 0.76%)</title><rect x="2.7211%" y="437" width="0.7559%" height="15" fill="rgb(252,105,26)" fg:x="36" fg:w="10"/><text x="2.9711%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1CF (1 samples, 0.08%)</title><rect x="3.4014%" y="421" width="0.0756%" height="15" fill="rgb(220,39,43)" fg:x="45" fg:w="1"/><text x="3.6514%" y="431.50"></text></g><g><title>`0x7FFCAE0CEDD0 (1 samples, 0.08%)</title><rect x="3.4769%" y="421" width="0.0756%" height="15" fill="rgb(229,68,48)" fg:x="46" fg:w="1"/><text x="3.7269%" y="431.50"></text></g><g><title>`0x7FFCAE0CCD59 (2 samples, 0.15%)</title><rect x="3.4769%" y="437" width="0.1512%" height="15" fill="rgb(252,8,32)" fg:x="46" fg:w="2"/><text x="3.7269%" y="447.50"></text></g><g><title>`0x7FFCAE0CF410 (1 samples, 0.08%)</title><rect x="3.5525%" y="421" width="0.0756%" height="15" fill="rgb(223,20,43)" fg:x="47" fg:w="1"/><text x="3.8025%" y="431.50"></text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::to_bytes&lt;block::Data&gt; (19 samples, 1.44%)</title><rect x="2.2676%" y="517" width="1.4361%" height="15" fill="rgb(229,81,49)" fg:x="30" fg:w="19"/><text x="2.5176%" y="527.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity (16 samples, 1.21%)</title><rect x="2.4943%" y="501" width="1.2094%" height="15" fill="rgb(236,28,36)" fg:x="33" fg:w="16"/><text x="2.7443%" y="511.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (16 samples, 1.21%)</title><rect x="2.4943%" y="485" width="1.2094%" height="15" fill="rgb(249,185,26)" fg:x="33" fg:w="16"/><text x="2.7443%" y="495.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (16 samples, 1.21%)</title><rect x="2.4943%" y="469" width="1.2094%" height="15" fill="rgb(249,174,33)" fg:x="33" fg:w="16"/><text x="2.7443%" y="479.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (16 samples, 1.21%)</title><rect x="2.4943%" y="453" width="1.2094%" height="15" fill="rgb(233,201,37)" fg:x="33" fg:w="16"/><text x="2.7443%" y="463.50"></text></g><g><title>block.exe`alloc::alloc::impl$1::allocate (1 samples, 0.08%)</title><rect x="3.6281%" y="437" width="0.0756%" height="15" fill="rgb(221,78,26)" fg:x="48" fg:w="1"/><text x="3.8781%" y="447.50"></text></g><g><title>block.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.6281%" y="421" width="0.0756%" height="15" fill="rgb(250,127,30)" fg:x="48" fg:w="1"/><text x="3.8781%" y="431.50"></text></g><g><title>block.exe`alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.6281%" y="405" width="0.0756%" height="15" fill="rgb(230,49,44)" fg:x="48" fg:w="1"/><text x="3.8781%" y="415.50"></text></g><g><title>block.exe`core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="3.6281%" y="389" width="0.0756%" height="15" fill="rgb(229,67,23)" fg:x="48" fg:w="1"/><text x="3.8781%" y="399.50"></text></g><g><title>`0x7FFCAE0CAAC0 (1 samples, 0.08%)</title><rect x="4.2328%" y="501" width="0.0756%" height="15" fill="rgb(249,83,47)" fg:x="56" fg:w="1"/><text x="4.4828%" y="511.50"></text></g><g><title>`0x7FFCAE0CAAD4 (1 samples, 0.08%)</title><rect x="4.3084%" y="501" width="0.0756%" height="15" fill="rgb(215,43,3)" fg:x="57" fg:w="1"/><text x="4.5584%" y="511.50"></text></g><g><title>`0x7FFCAE0CAADA (1 samples, 0.08%)</title><rect x="4.3840%" y="501" width="0.0756%" height="15" fill="rgb(238,154,13)" fg:x="58" fg:w="1"/><text x="4.6340%" y="511.50"></text></g><g><title>`0x7FFCAE0CBE16 (1 samples, 0.08%)</title><rect x="4.4596%" y="485" width="0.0756%" height="15" fill="rgb(219,56,2)" fg:x="59" fg:w="1"/><text x="4.7096%" y="495.50"></text></g><g><title>`0x7FFCAE0CBE44 (1 samples, 0.08%)</title><rect x="4.5351%" y="485" width="0.0756%" height="15" fill="rgb(233,0,4)" fg:x="60" fg:w="1"/><text x="4.7851%" y="495.50"></text></g><g><title>`0x7FFCAE0C922F (1 samples, 0.08%)</title><rect x="4.5351%" y="469" width="0.0756%" height="15" fill="rgb(235,30,7)" fg:x="60" fg:w="1"/><text x="4.7851%" y="479.50"></text></g><g><title>`0x7FFCAE13BF6D (1 samples, 0.08%)</title><rect x="4.6107%" y="485" width="0.0756%" height="15" fill="rgb(250,79,13)" fg:x="61" fg:w="1"/><text x="4.8607%" y="495.50"></text></g><g><title>`0x7FFCAE13C06F (2 samples, 0.15%)</title><rect x="4.6863%" y="485" width="0.1512%" height="15" fill="rgb(211,146,34)" fg:x="62" fg:w="2"/><text x="4.9363%" y="495.50"></text></g><g><title>`0x7FFCAE13C07C (1 samples, 0.08%)</title><rect x="4.8375%" y="485" width="0.0756%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="1"/><text x="5.0875%" y="495.50"></text></g><g><title>`0x7FFCAE0CAB11 (7 samples, 0.53%)</title><rect x="4.4596%" y="501" width="0.5291%" height="15" fill="rgb(235,168,5)" fg:x="59" fg:w="7"/><text x="4.7096%" y="511.50"></text></g><g><title>`0x7FFCAE13C458 (1 samples, 0.08%)</title><rect x="4.9131%" y="485" width="0.0756%" height="15" fill="rgb(221,155,16)" fg:x="65" fg:w="1"/><text x="5.1631%" y="495.50"></text></g><g><title>block.exe`digest::core_api::wrapper::impl$17::default (3 samples, 0.23%)</title><rect x="4.9887%" y="501" width="0.2268%" height="15" fill="rgb(215,215,53)" fg:x="66" fg:w="3"/><text x="5.2387%" y="511.50"></text></g><g><title>block.exe`block_buffer::sealed::impl$0::invariant (1 samples, 0.08%)</title><rect x="5.2154%" y="469" width="0.0756%" height="15" fill="rgb(223,4,10)" fg:x="69" fg:w="1"/><text x="5.4654%" y="479.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256rnds2_epu32 (1 samples, 0.08%)</title><rect x="5.2910%" y="421" width="0.0756%" height="15" fill="rgb(234,103,6)" fg:x="70" fg:w="1"/><text x="5.5410%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.15%)</title><rect x="5.3666%" y="421" width="0.1512%" height="15" fill="rgb(227,97,0)" fg:x="71" fg:w="2"/><text x="5.6166%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_shuffle_epi32 (4 samples, 0.30%)</title><rect x="5.5178%" y="421" width="0.3023%" height="15" fill="rgb(234,150,53)" fg:x="73" fg:w="4"/><text x="5.7678%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_shuffle_epi8 (1 samples, 0.08%)</title><rect x="5.8201%" y="421" width="0.0756%" height="15" fill="rgb(228,201,54)" fg:x="77" fg:w="1"/><text x="6.0701%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.08%)</title><rect x="5.8957%" y="405" width="0.0756%" height="15" fill="rgb(222,22,37)" fg:x="78" fg:w="1"/><text x="6.1457%" y="415.50"></text></g><g><title>block.exe`digest::core_api::wrapper::impl$7::update(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;*, ref$&lt;slice2$ (11 samples, 0.83%)</title><rect x="5.2154%" y="501" width="0.8314%" height="15" fill="rgb(237,53,32)" fg:x="69" fg:w="11"/><text x="5.4654%" y="511.50"></text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::digest_blocks(ref$&lt;slice2$&lt;u8&gt; &gt;, digest::core_api::wrapper::impl$7::update::closure_env$0&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (11 samples, 0.83%)</title><rect x="5.2154%" y="485" width="0.8314%" height="15" fill="rgb(233,25,53)" fg:x="69" fg:w="11"/><text x="5.4654%" y="495.50"></text></g><g><title>block.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (10 samples, 0.76%)</title><rect x="5.2910%" y="469" width="0.7559%" height="15" fill="rgb(210,40,34)" fg:x="70" fg:w="10"/><text x="5.5410%" y="479.50"></text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (10 samples, 0.76%)</title><rect x="5.2910%" y="453" width="0.7559%" height="15" fill="rgb(241,220,44)" fg:x="70" fg:w="10"/><text x="5.5410%" y="463.50"></text></g><g><title>block.exe`sha2::sha256::x86::digest_blocks(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (10 samples, 0.76%)</title><rect x="5.2910%" y="437" width="0.7559%" height="15" fill="rgb(235,28,35)" fg:x="70" fg:w="10"/><text x="5.5410%" y="447.50"></text></g><g><title>block.exe`sha2::sha256::x86::schedule (2 samples, 0.15%)</title><rect x="5.8957%" y="421" width="0.1512%" height="15" fill="rgb(210,56,17)" fg:x="78" fg:w="2"/><text x="6.1457%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (1 samples, 0.08%)</title><rect x="5.9713%" y="405" width="0.0756%" height="15" fill="rgb(224,130,29)" fg:x="79" fg:w="1"/><text x="6.2213%" y="415.50"></text></g><g><title>`0x7FFC7CFB19DE (1 samples, 0.08%)</title><rect x="6.1224%" y="405" width="0.0756%" height="15" fill="rgb(235,212,8)" fg:x="81" fg:w="1"/><text x="6.3724%" y="415.50"></text></g><g><title>block.exe`sha2::sha256::compress256(unsigned int[8]*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (3 samples, 0.23%)</title><rect x="6.1980%" y="373" width="0.2268%" height="15" fill="rgb(223,33,50)" fg:x="82" fg:w="3"/><text x="6.4480%" y="383.50"></text></g><g><title>block.exe`sha2::sha256::x86::compress(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (2 samples, 0.15%)</title><rect x="6.2736%" y="357" width="0.1512%" height="15" fill="rgb(219,149,13)" fg:x="83" fg:w="2"/><text x="6.5236%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256rnds2_epu32 (2 samples, 0.15%)</title><rect x="6.5004%" y="357" width="0.1512%" height="15" fill="rgb(250,156,29)" fg:x="86" fg:w="2"/><text x="6.7504%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (3 samples, 0.23%)</title><rect x="6.6515%" y="357" width="0.2268%" height="15" fill="rgb(216,193,19)" fg:x="88" fg:w="3"/><text x="6.9015%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_shuffle_epi32 (5 samples, 0.38%)</title><rect x="6.8783%" y="357" width="0.3779%" height="15" fill="rgb(216,135,14)" fg:x="91" fg:w="5"/><text x="7.1283%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256msg1_epu32 (3 samples, 0.23%)</title><rect x="7.2562%" y="341" width="0.2268%" height="15" fill="rgb(241,47,5)" fg:x="96" fg:w="3"/><text x="7.5062%" y="351.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (5 samples, 0.38%)</title><rect x="7.4830%" y="341" width="0.3779%" height="15" fill="rgb(233,42,35)" fg:x="99" fg:w="5"/><text x="7.7330%" y="351.50"></text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::digest_pad(unsigned char, ref$&lt;slice2$ (25 samples, 1.89%)</title><rect x="6.1980%" y="405" width="1.8896%" height="15" fill="rgb(231,13,6)" fg:x="82" fg:w="25"/><text x="6.4480%" y="415.50">b..</text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::set_pos_unchecked (25 samples, 1.89%)</title><rect x="6.1980%" y="389" width="1.8896%" height="15" fill="rgb(207,181,40)" fg:x="82" fg:w="25"/><text x="6.4480%" y="399.50">b..</text></g><g><title>block.exe`sha2::sha256::x86::digest_blocks(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (22 samples, 1.66%)</title><rect x="6.4248%" y="373" width="1.6629%" height="15" fill="rgb(254,173,49)" fg:x="85" fg:w="22"/><text x="6.6748%" y="383.50"></text></g><g><title>block.exe`sha2::sha256::x86::schedule (11 samples, 0.83%)</title><rect x="7.2562%" y="357" width="0.8314%" height="15" fill="rgb(221,1,38)" fg:x="96" fg:w="11"/><text x="7.5062%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (3 samples, 0.23%)</title><rect x="7.8609%" y="341" width="0.2268%" height="15" fill="rgb(206,124,46)" fg:x="104" fg:w="3"/><text x="8.1109%" y="351.50"></text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::len64_padding_be (27 samples, 2.04%)</title><rect x="6.1224%" y="421" width="2.0408%" height="15" fill="rgb(249,21,11)" fg:x="81" fg:w="27"/><text x="6.3724%" y="431.50">b..</text></g><g><title>block.exe`memset (1 samples, 0.08%)</title><rect x="8.0877%" y="405" width="0.0756%" height="15" fill="rgb(222,201,40)" fg:x="107" fg:w="1"/><text x="8.3377%" y="415.50"></text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::hash (82 samples, 6.20%)</title><rect x="2.1920%" y="533" width="6.1980%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="82"/><text x="2.4420%" y="543.50">block.ex..</text></g><g><title>block.exe`digest::digest::impl$0::digest&lt;digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (62 samples, 4.69%)</title><rect x="3.7037%" y="517" width="4.6863%" height="15" fill="rgb(219,207,3)" fg:x="49" fg:w="62"/><text x="3.9537%" y="527.50">block..</text></g><g><title>block.exe`digest::digest::impl$0::finalize(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (31 samples, 2.34%)</title><rect x="6.0469%" y="501" width="2.3432%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="31"/><text x="6.2969%" y="511.50">b..</text></g><g><title>block.exe`digest::FixedOutput::finalize_fixed(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (31 samples, 2.34%)</title><rect x="6.0469%" y="485" width="2.3432%" height="15" fill="rgb(239,76,54)" fg:x="80" fg:w="31"/><text x="6.2969%" y="495.50">b..</text></g><g><title>block.exe`digest::core_api::wrapper::impl$9::finalize_into(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (31 samples, 2.34%)</title><rect x="6.0469%" y="469" width="2.3432%" height="15" fill="rgb(231,124,27)" fg:x="80" fg:w="31"/><text x="6.2969%" y="479.50">b..</text></g><g><title>block.exe`digest::core_api::ct_variable::impl$5::finalize_fixed_core(digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt;*, block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;*, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (31 samples, 2.34%)</title><rect x="6.0469%" y="453" width="2.3432%" height="15" fill="rgb(249,195,6)" fg:x="80" fg:w="31"/><text x="6.2969%" y="463.50">b..</text></g><g><title>block.exe`sha2::core_api::impl$5::finalize_variable_core(sha2::core_api::Sha256VarCore*, block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;*, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (31 samples, 2.34%)</title><rect x="6.0469%" y="437" width="2.3432%" height="15" fill="rgb(237,174,47)" fg:x="80" fg:w="31"/><text x="6.2969%" y="447.50">b..</text></g><g><title>block.exe`core::num::impl$8::to_be_bytes (3 samples, 0.23%)</title><rect x="8.1633%" y="421" width="0.2268%" height="15" fill="rgb(206,201,31)" fg:x="108" fg:w="3"/><text x="8.4133%" y="431.50"></text></g><g><title>block.exe`core::num::impl$8::to_be (3 samples, 0.23%)</title><rect x="8.1633%" y="405" width="0.2268%" height="15" fill="rgb(231,57,52)" fg:x="108" fg:w="3"/><text x="8.4133%" y="415.50"></text></g><g><title>block.exe`core::num::impl$8::swap_bytes (3 samples, 0.23%)</title><rect x="8.1633%" y="389" width="0.2268%" height="15" fill="rgb(248,177,22)" fg:x="108" fg:w="3"/><text x="8.4133%" y="399.50"></text></g><g><title>block.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;block::blockchain::Block (84 samples, 6.35%)</title><rect x="2.1164%" y="581" width="6.3492%" height="15" fill="rgb(215,211,37)" fg:x="28" fg:w="84"/><text x="2.3664%" y="591.50">block.ex..</text></g><g><title>block.exe`block::blockchain::BlockChain&lt;block::Data&gt;::mine&lt;block::Data&gt; (84 samples, 6.35%)</title><rect x="2.1164%" y="565" width="6.3492%" height="15" fill="rgb(241,128,51)" fg:x="28" fg:w="84"/><text x="2.3664%" y="575.50">block.ex..</text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::is_valid (83 samples, 6.27%)</title><rect x="2.1920%" y="549" width="6.2736%" height="15" fill="rgb(227,165,31)" fg:x="29" fg:w="83"/><text x="2.4420%" y="559.50">block.ex..</text></g><g><title>block.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.08%)</title><rect x="8.3900%" y="533" width="0.0756%" height="15" fill="rgb(228,167,24)" fg:x="111" fg:w="1"/><text x="8.6400%" y="543.50"></text></g><g><title>block.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.08%)</title><rect x="8.3900%" y="517" width="0.0756%" height="15" fill="rgb(228,143,12)" fg:x="111" fg:w="1"/><text x="8.6400%" y="527.50"></text></g><g><title>block.exe`core::cmp::impls::impl$54::lt (1 samples, 0.08%)</title><rect x="8.3900%" y="501" width="0.0756%" height="15" fill="rgb(249,149,8)" fg:x="111" fg:w="1"/><text x="8.6400%" y="511.50"></text></g><g><title>block.exe`alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.6924%" y="533" width="0.0756%" height="15" fill="rgb(243,35,44)" fg:x="115" fg:w="1"/><text x="8.9424%" y="543.50"></text></g><g><title>block.exe`core::result::Result::expect (1 samples, 0.08%)</title><rect x="8.6924%" y="517" width="0.0756%" height="15" fill="rgb(246,89,9)" fg:x="115" fg:w="1"/><text x="8.9424%" y="527.50"></text></g><g><title>block.exe`core::fmt::write (1 samples, 0.08%)</title><rect x="8.6924%" y="501" width="0.0756%" height="15" fill="rgb(233,213,13)" fg:x="115" fg:w="1"/><text x="8.9424%" y="511.50"></text></g><g><title>block.exe`alloc::string::impl$67::write_str (1 samples, 0.08%)</title><rect x="8.6924%" y="485" width="0.0756%" height="15" fill="rgb(233,141,41)" fg:x="115" fg:w="1"/><text x="8.9424%" y="495.50"></text></g><g><title>block.exe`alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="8.6924%" y="469" width="0.0756%" height="15" fill="rgb(239,167,4)" fg:x="115" fg:w="1"/><text x="8.9424%" y="479.50"></text></g><g><title>block.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.08%)</title><rect x="8.6924%" y="453" width="0.0756%" height="15" fill="rgb(209,217,16)" fg:x="115" fg:w="1"/><text x="8.9424%" y="463.50"></text></g><g><title>block.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.08%)</title><rect x="8.6924%" y="437" width="0.0756%" height="15" fill="rgb(219,88,35)" fg:x="115" fg:w="1"/><text x="8.9424%" y="447.50"></text></g><g><title>block.exe`alloc::vec::Vec::append_elements (1 samples, 0.08%)</title><rect x="8.6924%" y="421" width="0.0756%" height="15" fill="rgb(220,193,23)" fg:x="115" fg:w="1"/><text x="8.9424%" y="431.50"></text></g><g><title>block.exe`alloc::vec::Vec::len (1 samples, 0.08%)</title><rect x="8.6924%" y="405" width="0.0756%" height="15" fill="rgb(230,90,52)" fg:x="115" fg:w="1"/><text x="8.9424%" y="415.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.08%)</title><rect x="8.6924%" y="389" width="0.0756%" height="15" fill="rgb(252,106,19)" fg:x="115" fg:w="1"/><text x="8.9424%" y="399.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec::grow_amortized (1 samples, 0.08%)</title><rect x="8.6924%" y="373" width="0.0756%" height="15" fill="rgb(206,74,20)" fg:x="115" fg:w="1"/><text x="8.9424%" y="383.50"></text></g><g><title>block.exe`core::result::impl$26::branch (1 samples, 0.08%)</title><rect x="8.6924%" y="357" width="0.0756%" height="15" fill="rgb(230,138,44)" fg:x="115" fg:w="1"/><text x="8.9424%" y="367.50"></text></g><g><title>block.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.08%)</title><rect x="8.6924%" y="341" width="0.0756%" height="15" fill="rgb(235,182,43)" fg:x="115" fg:w="1"/><text x="8.9424%" y="351.50"></text></g><g><title>block.exe`core::result::Result::map_err (1 samples, 0.08%)</title><rect x="8.6924%" y="325" width="0.0756%" height="15" fill="rgb(242,16,51)" fg:x="115" fg:w="1"/><text x="8.9424%" y="335.50"></text></g><g><title>`0x7FFCAE0D1CAA (1 samples, 0.08%)</title><rect x="8.6924%" y="309" width="0.0756%" height="15" fill="rgb(248,9,4)" fg:x="115" fg:w="1"/><text x="8.9424%" y="319.50"></text></g><g><title>`0x7FFCAE0D1DE7 (1 samples, 0.08%)</title><rect x="8.6924%" y="293" width="0.0756%" height="15" fill="rgb(210,31,22)" fg:x="115" fg:w="1"/><text x="8.9424%" y="303.50"></text></g><g><title>`0x7FFCAE0D3025 (1 samples, 0.08%)</title><rect x="8.6924%" y="277" width="0.0756%" height="15" fill="rgb(239,54,39)" fg:x="115" fg:w="1"/><text x="8.9424%" y="287.50"></text></g><g><title>`0x7FFCAE0CC7BA (1 samples, 0.08%)</title><rect x="8.6924%" y="261" width="0.0756%" height="15" fill="rgb(230,99,41)" fg:x="115" fg:w="1"/><text x="8.9424%" y="271.50"></text></g><g><title>`0x7FFCAE0CD1E7 (1 samples, 0.08%)</title><rect x="8.6924%" y="245" width="0.0756%" height="15" fill="rgb(253,106,12)" fg:x="115" fg:w="1"/><text x="8.9424%" y="255.50"></text></g><g><title>block.exe`alloc::string::impl$41::to_string (1 samples, 0.08%)</title><rect x="8.7680%" y="533" width="0.0756%" height="15" fill="rgb(213,46,41)" fg:x="116" fg:w="1"/><text x="9.0180%" y="543.50"></text></g><g><title>block.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;, ref$ (1 samples, 0.08%)</title><rect x="8.7680%" y="517" width="0.0756%" height="15" fill="rgb(215,133,35)" fg:x="116" fg:w="1"/><text x="9.0180%" y="527.50"></text></g><g><title>block.exe`colored::impl$7::fmt (1 samples, 0.08%)</title><rect x="8.7680%" y="501" width="0.0756%" height="15" fill="rgb(213,28,5)" fg:x="116" fg:w="1"/><text x="9.0180%" y="511.50"></text></g><g><title>block.exe`alloc::string::impl$67::write_str(alloc::string::String*, ref$ (1 samples, 0.08%)</title><rect x="8.7680%" y="485" width="0.0756%" height="15" fill="rgb(215,77,49)" fg:x="116" fg:w="1"/><text x="9.0180%" y="495.50"></text></g><g><title>block.exe`alloc::string::String::push_str(ref$ (1 samples, 0.08%)</title><rect x="8.7680%" y="469" width="0.0756%" height="15" fill="rgb(248,100,22)" fg:x="116" fg:w="1"/><text x="9.0180%" y="479.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="8.7680%" y="453" width="0.0756%" height="15" fill="rgb(208,67,9)" fg:x="116" fg:w="1"/><text x="9.0180%" y="463.50"></text></g><g><title>block.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.08%)</title><rect x="8.7680%" y="437" width="0.0756%" height="15" fill="rgb(219,133,21)" fg:x="116" fg:w="1"/><text x="9.0180%" y="447.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.08%)</title><rect x="8.7680%" y="421" width="0.0756%" height="15" fill="rgb(246,46,29)" fg:x="116" fg:w="1"/><text x="9.0180%" y="431.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::len (1 samples, 0.08%)</title><rect x="8.7680%" y="405" width="0.0756%" height="15" fill="rgb(246,185,52)" fg:x="116" fg:w="1"/><text x="9.0180%" y="415.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="8.7680%" y="389" width="0.0756%" height="15" fill="rgb(252,136,11)" fg:x="116" fg:w="1"/><text x="9.0180%" y="399.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="8.7680%" y="373" width="0.0756%" height="15" fill="rgb(219,138,53)" fg:x="116" fg:w="1"/><text x="9.0180%" y="383.50"></text></g><g><title>block.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.08%)</title><rect x="8.7680%" y="357" width="0.0756%" height="15" fill="rgb(211,51,23)" fg:x="116" fg:w="1"/><text x="9.0180%" y="367.50"></text></g><g><title>block.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.08%)</title><rect x="8.7680%" y="341" width="0.0756%" height="15" fill="rgb(247,221,28)" fg:x="116" fg:w="1"/><text x="9.0180%" y="351.50"></text></g><g><title>block.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.08%)</title><rect x="8.7680%" y="325" width="0.0756%" height="15" fill="rgb(251,222,45)" fg:x="116" fg:w="1"/><text x="9.0180%" y="335.50"></text></g><g><title>`0x7FFCAE0D1CAA (1 samples, 0.08%)</title><rect x="8.7680%" y="309" width="0.0756%" height="15" fill="rgb(217,162,53)" fg:x="116" fg:w="1"/><text x="9.0180%" y="319.50"></text></g><g><title>`0x7FFCAE0D1DE7 (1 samples, 0.08%)</title><rect x="8.7680%" y="293" width="0.0756%" height="15" fill="rgb(229,93,14)" fg:x="116" fg:w="1"/><text x="9.0180%" y="303.50"></text></g><g><title>`0x7FFCAE0D3025 (1 samples, 0.08%)</title><rect x="8.7680%" y="277" width="0.0756%" height="15" fill="rgb(209,67,49)" fg:x="116" fg:w="1"/><text x="9.0180%" y="287.50"></text></g><g><title>`0x7FFCAE0CC7BA (1 samples, 0.08%)</title><rect x="8.7680%" y="261" width="0.0756%" height="15" fill="rgb(213,87,29)" fg:x="116" fg:w="1"/><text x="9.0180%" y="271.50"></text></g><g><title>`0x7FFCAE0CD0A8 (1 samples, 0.08%)</title><rect x="8.7680%" y="245" width="0.0756%" height="15" fill="rgb(205,151,52)" fg:x="116" fg:w="1"/><text x="9.0180%" y="255.50"></text></g><g><title>block.exe`alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.8435%" y="453" width="0.0756%" height="15" fill="rgb(253,215,39)" fg:x="117" fg:w="1"/><text x="9.0935%" y="463.50"></text></g><g><title>block.exe`alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="8.8435%" y="437" width="0.0756%" height="15" fill="rgb(221,220,41)" fg:x="117" fg:w="1"/><text x="9.0935%" y="447.50"></text></g><g><title>block.exe`alloc::vec::Vec::with_capacity (1 samples, 0.08%)</title><rect x="8.8435%" y="421" width="0.0756%" height="15" fill="rgb(218,133,21)" fg:x="117" fg:w="1"/><text x="9.0935%" y="431.50"></text></g><g><title>block.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8435%" y="405" width="0.0756%" height="15" fill="rgb(221,193,43)" fg:x="117" fg:w="1"/><text x="9.0935%" y="415.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8435%" y="389" width="0.0756%" height="15" fill="rgb(240,128,52)" fg:x="117" fg:w="1"/><text x="9.0935%" y="399.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec::allocate_in (1 samples, 0.08%)</title><rect x="8.8435%" y="373" width="0.0756%" height="15" fill="rgb(253,114,12)" fg:x="117" fg:w="1"/><text x="9.0935%" y="383.50"></text></g><g><title>block.exe`std::sys::windows::stdio::is_console (3 samples, 0.23%)</title><rect x="8.9947%" y="213" width="0.2268%" height="15" fill="rgb(215,223,47)" fg:x="119" fg:w="3"/><text x="9.2447%" y="223.50"></text></g><g><title>`0x7FFCAB47D743 (3 samples, 0.23%)</title><rect x="8.9947%" y="197" width="0.2268%" height="15" fill="rgb(248,225,23)" fg:x="119" fg:w="3"/><text x="9.2447%" y="207.50"></text></g><g><title>`0x7FFCAB47D924 (3 samples, 0.23%)</title><rect x="8.9947%" y="181" width="0.2268%" height="15" fill="rgb(250,108,0)" fg:x="119" fg:w="3"/><text x="9.2447%" y="191.50"></text></g><g><title>`0x7FFCAB47DA19 (3 samples, 0.23%)</title><rect x="8.9947%" y="165" width="0.2268%" height="15" fill="rgb(228,208,7)" fg:x="119" fg:w="3"/><text x="9.2447%" y="175.50"></text></g><g><title>`0x7FFCAE12F454 (3 samples, 0.23%)</title><rect x="8.9947%" y="149" width="0.2268%" height="15" fill="rgb(244,45,10)" fg:x="119" fg:w="3"/><text x="9.2447%" y="159.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;block::blockchain::Block&lt;block::Data&gt;,alloc::alloc::Global&gt;::push(block::blockchain::Block (8 samples, 0.60%)</title><rect x="8.6924%" y="565" width="0.6047%" height="15" fill="rgb(207,125,25)" fg:x="115" fg:w="8"/><text x="8.9424%" y="575.50"></text></g><g><title>block.exe`simple_logger::impl$2::log (8 samples, 0.60%)</title><rect x="8.6924%" y="549" width="0.6047%" height="15" fill="rgb(210,195,18)" fg:x="115" fg:w="8"/><text x="8.9424%" y="559.50"></text></g><g><title>block.exe`core::ptr::drop_in_place (6 samples, 0.45%)</title><rect x="8.8435%" y="533" width="0.4535%" height="15" fill="rgb(249,80,12)" fg:x="117" fg:w="6"/><text x="9.0935%" y="543.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (6 samples, 0.45%)</title><rect x="8.8435%" y="517" width="0.4535%" height="15" fill="rgb(221,65,9)" fg:x="117" fg:w="6"/><text x="9.0935%" y="527.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (6 samples, 0.45%)</title><rect x="8.8435%" y="501" width="0.4535%" height="15" fill="rgb(235,49,36)" fg:x="117" fg:w="6"/><text x="9.0935%" y="511.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (6 samples, 0.45%)</title><rect x="8.8435%" y="485" width="0.4535%" height="15" fill="rgb(225,32,20)" fg:x="117" fg:w="6"/><text x="9.0935%" y="495.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (6 samples, 0.45%)</title><rect x="8.8435%" y="469" width="0.4535%" height="15" fill="rgb(215,141,46)" fg:x="117" fg:w="6"/><text x="9.0935%" y="479.50"></text></g><g><title>block.exe`std::io::stdio::_print (5 samples, 0.38%)</title><rect x="8.9191%" y="453" width="0.3779%" height="15" fill="rgb(250,160,47)" fg:x="118" fg:w="5"/><text x="9.1691%" y="463.50"></text></g><g><title>block.exe`std::io::stdio::print_to (5 samples, 0.38%)</title><rect x="8.9191%" y="437" width="0.3779%" height="15" fill="rgb(216,222,40)" fg:x="118" fg:w="5"/><text x="9.1691%" y="447.50"></text></g><g><title>block.exe`std::io::stdio::impl$11::write_fmt (5 samples, 0.38%)</title><rect x="8.9191%" y="421" width="0.3779%" height="15" fill="rgb(234,217,39)" fg:x="118" fg:w="5"/><text x="9.1691%" y="431.50"></text></g><g><title>block.exe`std::io::stdio::impl$12::write_fmt (5 samples, 0.38%)</title><rect x="8.9191%" y="405" width="0.3779%" height="15" fill="rgb(207,178,40)" fg:x="118" fg:w="5"/><text x="9.1691%" y="415.50"></text></g><g><title>block.exe`std::io::Write::write_fmt (5 samples, 0.38%)</title><rect x="8.9191%" y="389" width="0.3779%" height="15" fill="rgb(221,136,13)" fg:x="118" fg:w="5"/><text x="9.1691%" y="399.50"></text></g><g><title>block.exe`core::fmt::write (5 samples, 0.38%)</title><rect x="8.9191%" y="373" width="0.3779%" height="15" fill="rgb(249,199,10)" fg:x="118" fg:w="5"/><text x="9.1691%" y="383.50"></text></g><g><title>block.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (5 samples, 0.38%)</title><rect x="8.9191%" y="357" width="0.3779%" height="15" fill="rgb(249,222,13)" fg:x="118" fg:w="5"/><text x="9.1691%" y="367.50"></text></g><g><title>block.exe`std::io::stdio::impl$13::write_all (5 samples, 0.38%)</title><rect x="8.9191%" y="341" width="0.3779%" height="15" fill="rgb(244,185,38)" fg:x="118" fg:w="5"/><text x="9.1691%" y="351.50"></text></g><g><title>block.exe`core::cell::RefCell::borrow_mut (5 samples, 0.38%)</title><rect x="8.9191%" y="325" width="0.3779%" height="15" fill="rgb(236,202,9)" fg:x="118" fg:w="5"/><text x="9.1691%" y="335.50"></text></g><g><title>block.exe`std::io::buffered::linewritershim::impl$1::write_all (5 samples, 0.38%)</title><rect x="8.9191%" y="309" width="0.3779%" height="15" fill="rgb(250,229,37)" fg:x="118" fg:w="5"/><text x="9.1691%" y="319.50"></text></g><g><title>block.exe`core::result::impl$26::branch (5 samples, 0.38%)</title><rect x="8.9191%" y="293" width="0.3779%" height="15" fill="rgb(206,174,23)" fg:x="118" fg:w="5"/><text x="9.1691%" y="303.50"></text></g><g><title>block.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (5 samples, 0.38%)</title><rect x="8.9191%" y="277" width="0.3779%" height="15" fill="rgb(211,33,43)" fg:x="118" fg:w="5"/><text x="9.1691%" y="287.50"></text></g><g><title>block.exe`std::io::stdio::impl$1::write (4 samples, 0.30%)</title><rect x="8.9947%" y="261" width="0.3023%" height="15" fill="rgb(245,58,50)" fg:x="119" fg:w="4"/><text x="9.2447%" y="271.50"></text></g><g><title>block.exe`std::io::stdio::handle_ebadf (4 samples, 0.30%)</title><rect x="8.9947%" y="245" width="0.3023%" height="15" fill="rgb(244,68,36)" fg:x="119" fg:w="4"/><text x="9.2447%" y="255.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write (4 samples, 0.30%)</title><rect x="8.9947%" y="229" width="0.3023%" height="15" fill="rgb(232,229,15)" fg:x="119" fg:w="4"/><text x="9.2447%" y="239.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.08%)</title><rect x="9.2215%" y="213" width="0.0756%" height="15" fill="rgb(254,30,23)" fg:x="122" fg:w="1"/><text x="9.4715%" y="223.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.08%)</title><rect x="9.2215%" y="197" width="0.0756%" height="15" fill="rgb(235,160,14)" fg:x="122" fg:w="1"/><text x="9.4715%" y="207.50"></text></g><g><title>block.exe`std::sys::windows::cvt (1 samples, 0.08%)</title><rect x="9.2215%" y="181" width="0.0756%" height="15" fill="rgb(212,155,44)" fg:x="122" fg:w="1"/><text x="9.4715%" y="191.50"></text></g><g><title>block.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.08%)</title><rect x="9.2215%" y="165" width="0.0756%" height="15" fill="rgb(226,2,50)" fg:x="122" fg:w="1"/><text x="9.4715%" y="175.50"></text></g><g><title>`0x7FFCAB47D64E (1 samples, 0.08%)</title><rect x="9.2215%" y="149" width="0.0756%" height="15" fill="rgb(234,177,6)" fg:x="122" fg:w="1"/><text x="9.4715%" y="159.50"></text></g><g><title>`0x7FFCAB47D6E3 (1 samples, 0.08%)</title><rect x="9.2215%" y="133" width="0.0756%" height="15" fill="rgb(217,24,9)" fg:x="122" fg:w="1"/><text x="9.4715%" y="143.50"></text></g><g><title>`0x7FFCAB47DA19 (1 samples, 0.08%)</title><rect x="9.2215%" y="117" width="0.0756%" height="15" fill="rgb(220,13,46)" fg:x="122" fg:w="1"/><text x="9.4715%" y="127.50"></text></g><g><title>`0x7FFCAE12F454 (1 samples, 0.08%)</title><rect x="9.2215%" y="101" width="0.0756%" height="15" fill="rgb(239,221,27)" fg:x="122" fg:w="1"/><text x="9.4715%" y="111.50"></text></g><g><title>`0x7FFC7CFB133B (3 samples, 0.23%)</title><rect x="12.0181%" y="469" width="0.2268%" height="15" fill="rgb(222,198,25)" fg:x="159" fg:w="3"/><text x="12.2681%" y="479.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (9 samples, 0.68%)</title><rect x="12.2449%" y="469" width="0.6803%" height="15" fill="rgb(211,99,13)" fg:x="162" fg:w="9"/><text x="12.4949%" y="479.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (17 samples, 1.28%)</title><rect x="11.7914%" y="517" width="1.2850%" height="15" fill="rgb(232,111,31)" fg:x="156" fg:w="17"/><text x="12.0414%" y="527.50"></text></g><g><title>block.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (17 samples, 1.28%)</title><rect x="11.7914%" y="501" width="1.2850%" height="15" fill="rgb(245,82,37)" fg:x="156" fg:w="17"/><text x="12.0414%" y="511.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (17 samples, 1.28%)</title><rect x="11.7914%" y="485" width="1.2850%" height="15" fill="rgb(227,149,46)" fg:x="156" fg:w="17"/><text x="12.0414%" y="495.50"></text></g><g><title>block.exe`core::ptr::mut_ptr::impl$0::add (2 samples, 0.15%)</title><rect x="12.9252%" y="469" width="0.1512%" height="15" fill="rgb(218,36,50)" fg:x="171" fg:w="2"/><text x="13.1752%" y="479.50"></text></g><g><title>`0x7FFCAE0CC610 (3 samples, 0.23%)</title><rect x="13.3787%" y="453" width="0.2268%" height="15" fill="rgb(226,80,48)" fg:x="177" fg:w="3"/><text x="13.6287%" y="463.50"></text></g><g><title>`0x7FFCAE0CC615 (1 samples, 0.08%)</title><rect x="13.6054%" y="453" width="0.0756%" height="15" fill="rgb(238,224,15)" fg:x="180" fg:w="1"/><text x="13.8554%" y="463.50"></text></g><g><title>`0x7FFCAE0CC630 (4 samples, 0.30%)</title><rect x="13.6810%" y="453" width="0.3023%" height="15" fill="rgb(241,136,10)" fg:x="181" fg:w="4"/><text x="13.9310%" y="463.50"></text></g><g><title>`0x7FFCAE0CC63D (1 samples, 0.08%)</title><rect x="13.9834%" y="453" width="0.0756%" height="15" fill="rgb(208,32,45)" fg:x="185" fg:w="1"/><text x="14.2334%" y="463.50"></text></g><g><title>`0x7FFCAE0CC64B (5 samples, 0.38%)</title><rect x="14.0590%" y="453" width="0.3779%" height="15" fill="rgb(207,135,9)" fg:x="186" fg:w="5"/><text x="14.3090%" y="463.50"></text></g><g><title>`0x7FFCAE0CC6B2 (1 samples, 0.08%)</title><rect x="14.4369%" y="453" width="0.0756%" height="15" fill="rgb(206,86,44)" fg:x="191" fg:w="1"/><text x="14.6869%" y="463.50"></text></g><g><title>`0x7FFCAE0CC6CF (2 samples, 0.15%)</title><rect x="14.5125%" y="453" width="0.1512%" height="15" fill="rgb(245,177,15)" fg:x="192" fg:w="2"/><text x="14.7625%" y="463.50"></text></g><g><title>`0x7FFCAE0CC6F7 (1 samples, 0.08%)</title><rect x="14.6636%" y="453" width="0.0756%" height="15" fill="rgb(206,64,50)" fg:x="194" fg:w="1"/><text x="14.9136%" y="463.50"></text></g><g><title>`0x7FFCAE0CC700 (1 samples, 0.08%)</title><rect x="14.7392%" y="453" width="0.0756%" height="15" fill="rgb(234,36,40)" fg:x="195" fg:w="1"/><text x="14.9892%" y="463.50"></text></g><g><title>`0x7FFCAE0CC71C (1 samples, 0.08%)</title><rect x="14.8148%" y="453" width="0.0756%" height="15" fill="rgb(213,64,8)" fg:x="196" fg:w="1"/><text x="15.0648%" y="463.50"></text></g><g><title>`0x7FFCAE0CC732 (1 samples, 0.08%)</title><rect x="14.8904%" y="453" width="0.0756%" height="15" fill="rgb(210,75,36)" fg:x="197" fg:w="1"/><text x="15.1404%" y="463.50"></text></g><g><title>`0x7FFCAE0CC74F (1 samples, 0.08%)</title><rect x="14.9660%" y="453" width="0.0756%" height="15" fill="rgb(229,88,21)" fg:x="198" fg:w="1"/><text x="15.2160%" y="463.50"></text></g><g><title>`0x7FFCAE0CC756 (1 samples, 0.08%)</title><rect x="15.0416%" y="453" width="0.0756%" height="15" fill="rgb(252,204,47)" fg:x="199" fg:w="1"/><text x="15.2916%" y="463.50"></text></g><g><title>`0x7FFCAE0CC76E (1 samples, 0.08%)</title><rect x="15.1172%" y="453" width="0.0756%" height="15" fill="rgb(208,77,27)" fg:x="200" fg:w="1"/><text x="15.3672%" y="463.50"></text></g><g><title>`0x7FFCAE0CC777 (1 samples, 0.08%)</title><rect x="15.1927%" y="453" width="0.0756%" height="15" fill="rgb(221,76,26)" fg:x="201" fg:w="1"/><text x="15.4427%" y="463.50"></text></g><g><title>`0x7FFCAE0CC79D (2 samples, 0.15%)</title><rect x="15.2683%" y="453" width="0.1512%" height="15" fill="rgb(225,139,18)" fg:x="202" fg:w="2"/><text x="15.5183%" y="463.50"></text></g><g><title>`0x7FFCAE0CC7AA (1 samples, 0.08%)</title><rect x="15.4195%" y="453" width="0.0756%" height="15" fill="rgb(230,137,11)" fg:x="204" fg:w="1"/><text x="15.6695%" y="463.50"></text></g><g><title>`0x7FFCAE0CCFF0 (2 samples, 0.15%)</title><rect x="15.4951%" y="437" width="0.1512%" height="15" fill="rgb(212,28,1)" fg:x="205" fg:w="2"/><text x="15.7451%" y="447.50"></text></g><g><title>`0x7FFCAE0CD005 (2 samples, 0.15%)</title><rect x="15.6463%" y="437" width="0.1512%" height="15" fill="rgb(248,164,17)" fg:x="207" fg:w="2"/><text x="15.8963%" y="447.50"></text></g><g><title>`0x7FFCAE0CD03D (1 samples, 0.08%)</title><rect x="15.7974%" y="437" width="0.0756%" height="15" fill="rgb(222,171,42)" fg:x="209" fg:w="1"/><text x="16.0474%" y="447.50"></text></g><g><title>`0x7FFCAE0CD04C (4 samples, 0.30%)</title><rect x="15.8730%" y="437" width="0.3023%" height="15" fill="rgb(243,84,45)" fg:x="210" fg:w="4"/><text x="16.1230%" y="447.50"></text></g><g><title>`0x7FFCAE0CD068 (1 samples, 0.08%)</title><rect x="16.1754%" y="437" width="0.0756%" height="15" fill="rgb(252,49,23)" fg:x="214" fg:w="1"/><text x="16.4254%" y="447.50"></text></g><g><title>`0x7FFCAE0CD06D (1 samples, 0.08%)</title><rect x="16.2509%" y="437" width="0.0756%" height="15" fill="rgb(215,19,7)" fg:x="215" fg:w="1"/><text x="16.5009%" y="447.50"></text></g><g><title>`0x7FFCAE0CD09C (1 samples, 0.08%)</title><rect x="16.3265%" y="437" width="0.0756%" height="15" fill="rgb(238,81,41)" fg:x="216" fg:w="1"/><text x="16.5765%" y="447.50"></text></g><g><title>`0x7FFCAE0CD0A8 (2 samples, 0.15%)</title><rect x="16.4021%" y="437" width="0.1512%" height="15" fill="rgb(210,199,37)" fg:x="217" fg:w="2"/><text x="16.6521%" y="447.50"></text></g><g><title>`0x7FFCAE0CD0C6 (2 samples, 0.15%)</title><rect x="16.5533%" y="437" width="0.1512%" height="15" fill="rgb(244,192,49)" fg:x="219" fg:w="2"/><text x="16.8033%" y="447.50"></text></g><g><title>`0x7FFCAE0CD0E8 (1 samples, 0.08%)</title><rect x="16.7045%" y="437" width="0.0756%" height="15" fill="rgb(226,211,11)" fg:x="221" fg:w="1"/><text x="16.9545%" y="447.50"></text></g><g><title>`0x7FFCAE0CD102 (59 samples, 4.46%)</title><rect x="16.7800%" y="437" width="4.4596%" height="15" fill="rgb(236,162,54)" fg:x="222" fg:w="59"/><text x="17.0300%" y="447.50">`0x7F..</text></g><g><title>`0x7FFCAE0CD110 (1 samples, 0.08%)</title><rect x="21.2396%" y="437" width="0.0756%" height="15" fill="rgb(220,229,9)" fg:x="281" fg:w="1"/><text x="21.4896%" y="447.50"></text></g><g><title>`0x7FFCAE0CD12F (1 samples, 0.08%)</title><rect x="21.3152%" y="437" width="0.0756%" height="15" fill="rgb(250,87,22)" fg:x="282" fg:w="1"/><text x="21.5652%" y="447.50"></text></g><g><title>`0x7FFCAE0CD152 (3 samples, 0.23%)</title><rect x="21.3908%" y="437" width="0.2268%" height="15" fill="rgb(239,43,17)" fg:x="283" fg:w="3"/><text x="21.6408%" y="447.50"></text></g><g><title>`0x7FFCAE0CD177 (1 samples, 0.08%)</title><rect x="21.6175%" y="437" width="0.0756%" height="15" fill="rgb(231,177,25)" fg:x="286" fg:w="1"/><text x="21.8675%" y="447.50"></text></g><g><title>`0x7FFCAE0CD198 (5 samples, 0.38%)</title><rect x="21.6931%" y="437" width="0.3779%" height="15" fill="rgb(219,179,1)" fg:x="287" fg:w="5"/><text x="21.9431%" y="447.50"></text></g><g><title>`0x7FFCAE12EC2C (3 samples, 0.23%)</title><rect x="22.0711%" y="421" width="0.2268%" height="15" fill="rgb(238,219,53)" fg:x="292" fg:w="3"/><text x="22.3211%" y="431.50"></text></g><g><title>`0x7FFCAE12EC44 (1 samples, 0.08%)</title><rect x="22.2978%" y="421" width="0.0756%" height="15" fill="rgb(232,167,36)" fg:x="295" fg:w="1"/><text x="22.5478%" y="431.50"></text></g><g><title>`0x7FFCAE12EC4B (2 samples, 0.15%)</title><rect x="22.3734%" y="421" width="0.1512%" height="15" fill="rgb(244,19,51)" fg:x="296" fg:w="2"/><text x="22.6234%" y="431.50"></text></g><g><title>`0x7FFCAE12ECB2 (2 samples, 0.15%)</title><rect x="22.5246%" y="421" width="0.1512%" height="15" fill="rgb(224,6,22)" fg:x="298" fg:w="2"/><text x="22.7746%" y="431.50"></text></g><g><title>`0x7FFCAE12ECD1 (2 samples, 0.15%)</title><rect x="22.6757%" y="421" width="0.1512%" height="15" fill="rgb(224,145,5)" fg:x="300" fg:w="2"/><text x="22.9257%" y="431.50"></text></g><g><title>`0x7FFCAE12ECE1 (1 samples, 0.08%)</title><rect x="22.8269%" y="421" width="0.0756%" height="15" fill="rgb(234,130,49)" fg:x="302" fg:w="1"/><text x="23.0769%" y="431.50"></text></g><g><title>`0x7FFCAE12ECEE (1 samples, 0.08%)</title><rect x="22.9025%" y="421" width="0.0756%" height="15" fill="rgb(254,6,2)" fg:x="303" fg:w="1"/><text x="23.1525%" y="431.50"></text></g><g><title>`0x7FFCAE12ECF7 (6 samples, 0.45%)</title><rect x="22.9781%" y="421" width="0.4535%" height="15" fill="rgb(208,96,46)" fg:x="304" fg:w="6"/><text x="23.2281%" y="431.50"></text></g><g><title>`0x7FFCAE12ED05 (1 samples, 0.08%)</title><rect x="23.4316%" y="421" width="0.0756%" height="15" fill="rgb(239,3,39)" fg:x="310" fg:w="1"/><text x="23.6816%" y="431.50"></text></g><g><title>`0x7FFCAE0CD1AA (20 samples, 1.51%)</title><rect x="22.0711%" y="437" width="1.5117%" height="15" fill="rgb(233,210,1)" fg:x="292" fg:w="20"/><text x="22.3211%" y="447.50"></text></g><g><title>`0x7FFCAE12ED15 (1 samples, 0.08%)</title><rect x="23.5072%" y="421" width="0.0756%" height="15" fill="rgb(244,137,37)" fg:x="311" fg:w="1"/><text x="23.7572%" y="431.50"></text></g><g><title>`0x7FFCAE0CD1B4 (1 samples, 0.08%)</title><rect x="23.5828%" y="437" width="0.0756%" height="15" fill="rgb(240,136,2)" fg:x="312" fg:w="1"/><text x="23.8328%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1B7 (1 samples, 0.08%)</title><rect x="23.6584%" y="437" width="0.0756%" height="15" fill="rgb(239,18,37)" fg:x="313" fg:w="1"/><text x="23.9084%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1CF (1 samples, 0.08%)</title><rect x="23.7339%" y="437" width="0.0756%" height="15" fill="rgb(218,185,22)" fg:x="314" fg:w="1"/><text x="23.9839%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1D2 (3 samples, 0.23%)</title><rect x="23.8095%" y="437" width="0.2268%" height="15" fill="rgb(225,218,4)" fg:x="315" fg:w="3"/><text x="24.0595%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1ED (1 samples, 0.08%)</title><rect x="24.0363%" y="437" width="0.0756%" height="15" fill="rgb(230,182,32)" fg:x="318" fg:w="1"/><text x="24.2863%" y="447.50"></text></g><g><title>`0x7FFCAE0CD1F2 (2 samples, 0.15%)</title><rect x="24.1119%" y="437" width="0.1512%" height="15" fill="rgb(242,56,43)" fg:x="319" fg:w="2"/><text x="24.3619%" y="447.50"></text></g><g><title>`0x7FFCAE0CD229 (4 samples, 0.30%)</title><rect x="24.2630%" y="437" width="0.3023%" height="15" fill="rgb(233,99,24)" fg:x="321" fg:w="4"/><text x="24.5130%" y="447.50"></text></g><g><title>`0x7FFCAE0CD241 (5 samples, 0.38%)</title><rect x="24.5654%" y="437" width="0.3779%" height="15" fill="rgb(234,209,42)" fg:x="325" fg:w="5"/><text x="24.8154%" y="447.50"></text></g><g><title>`0x7FFCAE0D17A6 (1 samples, 0.08%)</title><rect x="24.9433%" y="421" width="0.0756%" height="15" fill="rgb(227,7,12)" fg:x="330" fg:w="1"/><text x="25.1933%" y="431.50"></text></g><g><title>`0x7FFCAE0CC7BA (136 samples, 10.28%)</title><rect x="15.4951%" y="453" width="10.2797%" height="15" fill="rgb(245,203,43)" fg:x="205" fg:w="136"/><text x="15.7451%" y="463.50">`0x7FFCAE0CC7BA</text></g><g><title>`0x7FFCAE0CD2E3 (11 samples, 0.83%)</title><rect x="24.9433%" y="437" width="0.8314%" height="15" fill="rgb(238,205,33)" fg:x="330" fg:w="11"/><text x="25.1933%" y="447.50"></text></g><g><title>`0x7FFCAE0D17C3 (10 samples, 0.76%)</title><rect x="25.0189%" y="421" width="0.7559%" height="15" fill="rgb(231,56,7)" fg:x="331" fg:w="10"/><text x="25.2689%" y="431.50"></text></g><g><title>`0x7FFCAE0CC7C6 (4 samples, 0.30%)</title><rect x="25.7748%" y="453" width="0.3023%" height="15" fill="rgb(244,186,29)" fg:x="341" fg:w="4"/><text x="26.0248%" y="463.50"></text></g><g><title>`0x7FFCAE0CC7FE (2 samples, 0.15%)</title><rect x="26.0771%" y="453" width="0.1512%" height="15" fill="rgb(234,111,31)" fg:x="345" fg:w="2"/><text x="26.3271%" y="463.50"></text></g><g><title>`0x7FFCAE0CC81E (4 samples, 0.30%)</title><rect x="26.2283%" y="453" width="0.3023%" height="15" fill="rgb(241,149,10)" fg:x="347" fg:w="4"/><text x="26.4783%" y="463.50"></text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::to_bytes&lt;block::Data&gt; (229 samples, 17.31%)</title><rect x="9.2971%" y="533" width="17.3091%" height="15" fill="rgb(249,206,44)" fg:x="123" fg:w="229"/><text x="9.5471%" y="543.50">block.exe`block::blockchain..</text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity (179 samples, 13.53%)</title><rect x="13.0763%" y="517" width="13.5299%" height="15" fill="rgb(251,153,30)" fg:x="173" fg:w="179"/><text x="13.3263%" y="527.50">block.exe`alloc::vec..</text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (179 samples, 13.53%)</title><rect x="13.0763%" y="501" width="13.5299%" height="15" fill="rgb(239,152,38)" fg:x="173" fg:w="179"/><text x="13.3263%" y="511.50">block.exe`alloc::vec..</text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (175 samples, 13.23%)</title><rect x="13.3787%" y="485" width="13.2275%" height="15" fill="rgb(249,139,47)" fg:x="177" fg:w="175"/><text x="13.6287%" y="495.50">block.exe`alloc::raw..</text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (175 samples, 13.23%)</title><rect x="13.3787%" y="469" width="13.2275%" height="15" fill="rgb(244,64,35)" fg:x="177" fg:w="175"/><text x="13.6287%" y="479.50">block.exe`alloc::raw..</text></g><g><title>block.exe`alloc::alloc::impl$1::allocate (1 samples, 0.08%)</title><rect x="26.5306%" y="453" width="0.0756%" height="15" fill="rgb(216,46,15)" fg:x="351" fg:w="1"/><text x="26.7806%" y="463.50"></text></g><g><title>block.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.5306%" y="437" width="0.0756%" height="15" fill="rgb(250,74,19)" fg:x="351" fg:w="1"/><text x="26.7806%" y="447.50"></text></g><g><title>block.exe`alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.5306%" y="421" width="0.0756%" height="15" fill="rgb(249,42,33)" fg:x="351" fg:w="1"/><text x="26.7806%" y="431.50"></text></g><g><title>block.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.08%)</title><rect x="26.5306%" y="405" width="0.0756%" height="15" fill="rgb(242,149,17)" fg:x="351" fg:w="1"/><text x="26.7806%" y="415.50"></text></g><g><title>block.exe`std::sys::windows::alloc::impl$0::alloc (1 samples, 0.08%)</title><rect x="26.5306%" y="389" width="0.0756%" height="15" fill="rgb(244,29,21)" fg:x="351" fg:w="1"/><text x="26.7806%" y="399.50"></text></g><g><title>block.exe`std::sys::windows::alloc::allocate (1 samples, 0.08%)</title><rect x="26.5306%" y="373" width="0.0756%" height="15" fill="rgb(220,130,37)" fg:x="351" fg:w="1"/><text x="26.7806%" y="383.50"></text></g><g><title>block.exe`std::sys::windows::alloc::init_or_get_process_heap (1 samples, 0.08%)</title><rect x="26.5306%" y="357" width="0.0756%" height="15" fill="rgb(211,67,2)" fg:x="351" fg:w="1"/><text x="26.7806%" y="367.50"></text></g><g><title>block.exe`core::sync::atomic::AtomicPtr::load (1 samples, 0.08%)</title><rect x="26.5306%" y="341" width="0.0756%" height="15" fill="rgb(235,68,52)" fg:x="351" fg:w="1"/><text x="26.7806%" y="351.50"></text></g><g><title>block.exe`core::sync::atomic::atomic_load (1 samples, 0.08%)</title><rect x="26.5306%" y="325" width="0.0756%" height="15" fill="rgb(246,142,3)" fg:x="351" fg:w="1"/><text x="26.7806%" y="335.50"></text></g><g><title>`0x7FFCACFC0D10 (2 samples, 0.15%)</title><rect x="28.1179%" y="517" width="0.1512%" height="15" fill="rgb(241,25,7)" fg:x="372" fg:w="2"/><text x="28.3679%" y="527.50"></text></g><g><title>`0x7FFCAE0CAAD4 (2 samples, 0.15%)</title><rect x="28.2691%" y="517" width="0.1512%" height="15" fill="rgb(242,119,39)" fg:x="374" fg:w="2"/><text x="28.5191%" y="527.50"></text></g><g><title>`0x7FFCAE0CAAF7 (3 samples, 0.23%)</title><rect x="28.4203%" y="517" width="0.2268%" height="15" fill="rgb(241,98,45)" fg:x="376" fg:w="3"/><text x="28.6703%" y="527.50"></text></g><g><title>`0x7FFCAE0CAB00 (1 samples, 0.08%)</title><rect x="28.6470%" y="517" width="0.0756%" height="15" fill="rgb(254,28,30)" fg:x="379" fg:w="1"/><text x="28.8970%" y="527.50"></text></g><g><title>`0x7FFCAE0CAB03 (1 samples, 0.08%)</title><rect x="28.7226%" y="517" width="0.0756%" height="15" fill="rgb(241,142,54)" fg:x="380" fg:w="1"/><text x="28.9726%" y="527.50"></text></g><g><title>`0x7FFCAE0CB685 (1 samples, 0.08%)</title><rect x="28.7982%" y="501" width="0.0756%" height="15" fill="rgb(222,85,15)" fg:x="381" fg:w="1"/><text x="29.0482%" y="511.50"></text></g><g><title>`0x7FFCAE0CB698 (2 samples, 0.15%)</title><rect x="28.8738%" y="501" width="0.1512%" height="15" fill="rgb(210,85,47)" fg:x="382" fg:w="2"/><text x="29.1238%" y="511.50"></text></g><g><title>`0x7FFCAE0CB6B6 (2 samples, 0.15%)</title><rect x="29.0249%" y="501" width="0.1512%" height="15" fill="rgb(224,206,25)" fg:x="384" fg:w="2"/><text x="29.2749%" y="511.50"></text></g><g><title>`0x7FFCAE0CBAB1 (3 samples, 0.23%)</title><rect x="29.1761%" y="501" width="0.2268%" height="15" fill="rgb(243,201,19)" fg:x="386" fg:w="3"/><text x="29.4261%" y="511.50"></text></g><g><title>`0x7FFCAE0CBACA (1 samples, 0.08%)</title><rect x="29.4029%" y="501" width="0.0756%" height="15" fill="rgb(236,59,4)" fg:x="389" fg:w="1"/><text x="29.6529%" y="511.50"></text></g><g><title>`0x7FFCAE0CBACE (4 samples, 0.30%)</title><rect x="29.4785%" y="501" width="0.3023%" height="15" fill="rgb(254,179,45)" fg:x="390" fg:w="4"/><text x="29.7285%" y="511.50"></text></g><g><title>`0x7FFCAE0CBAD0 (1 samples, 0.08%)</title><rect x="29.7808%" y="501" width="0.0756%" height="15" fill="rgb(226,14,10)" fg:x="394" fg:w="1"/><text x="30.0308%" y="511.50"></text></g><g><title>`0x7FFCAE0CBE16 (2 samples, 0.15%)</title><rect x="29.8564%" y="501" width="0.1512%" height="15" fill="rgb(244,27,41)" fg:x="395" fg:w="2"/><text x="30.1064%" y="511.50"></text></g><g><title>`0x7FFCAE0CBE21 (1 samples, 0.08%)</title><rect x="30.0076%" y="501" width="0.0756%" height="15" fill="rgb(235,35,32)" fg:x="397" fg:w="1"/><text x="30.2576%" y="511.50"></text></g><g><title>`0x7FFCAE0CBE57 (3 samples, 0.23%)</title><rect x="30.0831%" y="501" width="0.2268%" height="15" fill="rgb(218,68,31)" fg:x="398" fg:w="3"/><text x="30.3331%" y="511.50"></text></g><g><title>`0x7FFCAE0CBE89 (3 samples, 0.23%)</title><rect x="30.3099%" y="501" width="0.2268%" height="15" fill="rgb(207,120,37)" fg:x="401" fg:w="3"/><text x="30.5599%" y="511.50"></text></g><g><title>`0x7FFCAE13BF54 (4 samples, 0.30%)</title><rect x="30.5367%" y="501" width="0.3023%" height="15" fill="rgb(227,98,0)" fg:x="404" fg:w="4"/><text x="30.7867%" y="511.50"></text></g><g><title>`0x7FFCAE13BF96 (4 samples, 0.30%)</title><rect x="30.8390%" y="501" width="0.3023%" height="15" fill="rgb(207,7,3)" fg:x="408" fg:w="4"/><text x="31.0890%" y="511.50"></text></g><g><title>`0x7FFCAE13BFB3 (1 samples, 0.08%)</title><rect x="31.1413%" y="501" width="0.0756%" height="15" fill="rgb(206,98,19)" fg:x="412" fg:w="1"/><text x="31.3913%" y="511.50"></text></g><g><title>`0x7FFCAE13BFB6 (1 samples, 0.08%)</title><rect x="31.2169%" y="501" width="0.0756%" height="15" fill="rgb(217,5,26)" fg:x="413" fg:w="1"/><text x="31.4669%" y="511.50"></text></g><g><title>`0x7FFCAE13BFD2 (2 samples, 0.15%)</title><rect x="31.2925%" y="501" width="0.1512%" height="15" fill="rgb(235,190,38)" fg:x="414" fg:w="2"/><text x="31.5425%" y="511.50"></text></g><g><title>`0x7FFCAE0CABB0 (2 samples, 0.15%)</title><rect x="31.2925%" y="485" width="0.1512%" height="15" fill="rgb(247,86,24)" fg:x="414" fg:w="2"/><text x="31.5425%" y="495.50"></text></g><g><title>`0x7FFCAE13C02F (4 samples, 0.30%)</title><rect x="31.4437%" y="501" width="0.3023%" height="15" fill="rgb(205,101,16)" fg:x="416" fg:w="4"/><text x="31.6937%" y="511.50"></text></g><g><title>`0x7FFCAE13C045 (1 samples, 0.08%)</title><rect x="31.7460%" y="501" width="0.0756%" height="15" fill="rgb(246,168,33)" fg:x="420" fg:w="1"/><text x="31.9960%" y="511.50"></text></g><g><title>`0x7FFCAE13C04F (5 samples, 0.38%)</title><rect x="31.8216%" y="501" width="0.3779%" height="15" fill="rgb(231,114,1)" fg:x="421" fg:w="5"/><text x="32.0716%" y="511.50"></text></g><g><title>`0x7FFCAE13C054 (1 samples, 0.08%)</title><rect x="32.1995%" y="501" width="0.0756%" height="15" fill="rgb(207,184,53)" fg:x="426" fg:w="1"/><text x="32.4495%" y="511.50"></text></g><g><title>`0x7FFCAE13C06F (42 samples, 3.17%)</title><rect x="32.2751%" y="501" width="3.1746%" height="15" fill="rgb(224,95,51)" fg:x="427" fg:w="42"/><text x="32.5251%" y="511.50">`0x..</text></g><g><title>`0x7FFCAE13C0AF (8 samples, 0.60%)</title><rect x="35.4497%" y="501" width="0.6047%" height="15" fill="rgb(212,188,45)" fg:x="469" fg:w="8"/><text x="35.6997%" y="511.50"></text></g><g><title>`0x7FFCAE13C0ED (2 samples, 0.15%)</title><rect x="36.0544%" y="501" width="0.1512%" height="15" fill="rgb(223,154,38)" fg:x="477" fg:w="2"/><text x="36.3044%" y="511.50"></text></g><g><title>`0x7FFCAE13C107 (2 samples, 0.15%)</title><rect x="36.2056%" y="501" width="0.1512%" height="15" fill="rgb(251,22,52)" fg:x="479" fg:w="2"/><text x="36.4556%" y="511.50"></text></g><g><title>`0x7FFCAE0CAB11 (101 samples, 7.63%)</title><rect x="28.7982%" y="517" width="7.6342%" height="15" fill="rgb(229,209,22)" fg:x="381" fg:w="101"/><text x="29.0482%" y="527.50">`0x7FFCAE0..</text></g><g><title>`0x7FFCAE13C35E (1 samples, 0.08%)</title><rect x="36.3568%" y="501" width="0.0756%" height="15" fill="rgb(234,138,34)" fg:x="481" fg:w="1"/><text x="36.6068%" y="511.50"></text></g><g><title>`0x7FFCAE0CAB21 (1 samples, 0.08%)</title><rect x="36.4324%" y="517" width="0.0756%" height="15" fill="rgb(212,95,11)" fg:x="482" fg:w="1"/><text x="36.6824%" y="527.50"></text></g><g><title>`0x7FFCAE0CAB25 (1 samples, 0.08%)</title><rect x="36.5079%" y="517" width="0.0756%" height="15" fill="rgb(240,179,47)" fg:x="483" fg:w="1"/><text x="36.7579%" y="527.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.23%)</title><rect x="36.5835%" y="517" width="0.2268%" height="15" fill="rgb(240,163,11)" fg:x="484" fg:w="3"/><text x="36.8335%" y="527.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.23%)</title><rect x="36.5835%" y="501" width="0.2268%" height="15" fill="rgb(236,37,12)" fg:x="484" fg:w="3"/><text x="36.8335%" y="511.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.23%)</title><rect x="36.5835%" y="485" width="0.2268%" height="15" fill="rgb(232,164,16)" fg:x="484" fg:w="3"/><text x="36.8335%" y="495.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (3 samples, 0.23%)</title><rect x="36.5835%" y="469" width="0.2268%" height="15" fill="rgb(244,205,15)" fg:x="484" fg:w="3"/><text x="36.8335%" y="479.50"></text></g><g><title>block.exe`digest::core_api::wrapper::impl$17::default (5 samples, 0.38%)</title><rect x="36.8103%" y="517" width="0.3779%" height="15" fill="rgb(223,117,47)" fg:x="487" fg:w="5"/><text x="37.0603%" y="527.50"></text></g><g><title>block.exe`block_buffer::impl$3::default (5 samples, 0.38%)</title><rect x="36.8103%" y="501" width="0.3779%" height="15" fill="rgb(244,107,35)" fg:x="487" fg:w="5"/><text x="37.0603%" y="511.50"></text></g><g><title>block.exe`block_buffer::sealed::impl$0::invariant (3 samples, 0.23%)</title><rect x="37.1882%" y="485" width="0.2268%" height="15" fill="rgb(205,140,8)" fg:x="492" fg:w="3"/><text x="37.4382%" y="495.50"></text></g><g><title>`0x7FFC7CFB133B (2 samples, 0.15%)</title><rect x="37.4906%" y="453" width="0.1512%" height="15" fill="rgb(228,84,46)" fg:x="496" fg:w="2"/><text x="37.7406%" y="463.50"></text></g><g><title>block.exe`memcpy (6 samples, 0.45%)</title><rect x="37.6417%" y="453" width="0.4535%" height="15" fill="rgb(254,188,9)" fg:x="498" fg:w="6"/><text x="37.8917%" y="463.50"></text></g><g><title>block.exe`sha2::sha256::compress256(unsigned int[8]*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (10 samples, 0.76%)</title><rect x="38.0952%" y="453" width="0.7559%" height="15" fill="rgb(206,112,54)" fg:x="504" fg:w="10"/><text x="38.3452%" y="463.50"></text></g><g><title>block.exe`sha2::sha256::x86::compress(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (2 samples, 0.15%)</title><rect x="38.6999%" y="437" width="0.1512%" height="15" fill="rgb(216,84,49)" fg:x="512" fg:w="2"/><text x="38.9499%" y="447.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256rnds2_epu32 (39 samples, 2.95%)</title><rect x="39.3046%" y="437" width="2.9478%" height="15" fill="rgb(214,194,35)" fg:x="520" fg:w="39"/><text x="39.5546%" y="447.50">bl..</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (74 samples, 5.59%)</title><rect x="42.2525%" y="437" width="5.5933%" height="15" fill="rgb(249,28,3)" fg:x="559" fg:w="74"/><text x="42.5025%" y="447.50">block.e..</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.15%)</title><rect x="47.8458%" y="437" width="0.1512%" height="15" fill="rgb(222,56,52)" fg:x="633" fg:w="2"/><text x="48.0958%" y="447.50"></text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (2 samples, 0.15%)</title><rect x="47.8458%" y="421" width="0.1512%" height="15" fill="rgb(245,217,50)" fg:x="633" fg:w="2"/><text x="48.0958%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_shuffle_epi32 (49 samples, 3.70%)</title><rect x="47.9970%" y="437" width="3.7037%" height="15" fill="rgb(213,201,24)" fg:x="635" fg:w="49"/><text x="48.2470%" y="447.50">bloc..</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.08%)</title><rect x="51.7007%" y="437" width="0.0756%" height="15" fill="rgb(248,116,28)" fg:x="684" fg:w="1"/><text x="51.9507%" y="447.50"></text></g><g><title>block.exe`core::ptr::mut_ptr::impl$0::write_unaligned (1 samples, 0.08%)</title><rect x="51.7007%" y="421" width="0.0756%" height="15" fill="rgb(219,72,43)" fg:x="684" fg:w="1"/><text x="51.9507%" y="431.50"></text></g><g><title>block.exe`core::ptr::write_unaligned (1 samples, 0.08%)</title><rect x="51.7007%" y="405" width="0.0756%" height="15" fill="rgb(209,138,14)" fg:x="684" fg:w="1"/><text x="51.9507%" y="415.50"></text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7007%" y="389" width="0.0756%" height="15" fill="rgb(222,18,33)" fg:x="684" fg:w="1"/><text x="51.9507%" y="399.50"></text></g><g><title>block.exe`core::core_arch::x86::sse41::_mm_blend_epi16 (1 samples, 0.08%)</title><rect x="51.7763%" y="437" width="0.0756%" height="15" fill="rgb(213,199,7)" fg:x="685" fg:w="1"/><text x="52.0263%" y="447.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (9 samples, 0.68%)</title><rect x="51.8519%" y="437" width="0.6803%" height="15" fill="rgb(250,110,10)" fg:x="686" fg:w="9"/><text x="52.1019%" y="447.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_shuffle_epi8 (3 samples, 0.23%)</title><rect x="52.5321%" y="437" width="0.2268%" height="15" fill="rgb(248,123,6)" fg:x="695" fg:w="3"/><text x="52.7821%" y="447.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256msg1_epu32 (42 samples, 3.17%)</title><rect x="52.7589%" y="421" width="3.1746%" height="15" fill="rgb(206,91,31)" fg:x="698" fg:w="42"/><text x="53.0089%" y="431.50">blo..</text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256msg2_epu32 (6 samples, 0.45%)</title><rect x="55.9335%" y="421" width="0.4535%" height="15" fill="rgb(211,154,13)" fg:x="740" fg:w="6"/><text x="56.1835%" y="431.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (38 samples, 2.87%)</title><rect x="56.3870%" y="421" width="2.8723%" height="15" fill="rgb(225,148,7)" fg:x="746" fg:w="38"/><text x="56.6370%" y="431.50">bl..</text></g><g><title>block.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (325 samples, 24.57%)</title><rect x="37.4150%" y="485" width="24.5654%" height="15" fill="rgb(220,160,43)" fg:x="495" fg:w="325"/><text x="37.6650%" y="495.50">block.exe`core::slice::impl$0::copy_fro..</text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (325 samples, 24.57%)</title><rect x="37.4150%" y="469" width="24.5654%" height="15" fill="rgb(213,52,39)" fg:x="495" fg:w="325"/><text x="37.6650%" y="479.50">block.exe`core::intrinsics::copy_nonove..</text></g><g><title>block.exe`sha2::sha256::x86::digest_blocks(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (306 samples, 23.13%)</title><rect x="38.8511%" y="453" width="23.1293%" height="15" fill="rgb(243,137,7)" fg:x="514" fg:w="306"/><text x="39.1011%" y="463.50">block.exe`sha2::sha256::x86::digest_b..</text></g><g><title>block.exe`sha2::sha256::x86::schedule (122 samples, 9.22%)</title><rect x="52.7589%" y="437" width="9.2215%" height="15" fill="rgb(230,79,13)" fg:x="698" fg:w="122"/><text x="53.0089%" y="447.50">block.exe`sha..</text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (36 samples, 2.72%)</title><rect x="59.2593%" y="421" width="2.7211%" height="15" fill="rgb(247,105,23)" fg:x="784" fg:w="36"/><text x="59.5093%" y="431.50">bl..</text></g><g><title>block.exe`digest::core_api::wrapper::impl$7::update(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;*, ref$&lt;slice2$ (329 samples, 24.87%)</title><rect x="37.1882%" y="517" width="24.8677%" height="15" fill="rgb(223,179,41)" fg:x="492" fg:w="329"/><text x="37.4382%" y="527.50">block.exe`digest::core_api::wrapper::imp..</text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::digest_blocks(ref$&lt;slice2$&lt;u8&gt; &gt;, digest::core_api::wrapper::impl$7::update::closure_env$0&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (329 samples, 24.87%)</title><rect x="37.1882%" y="501" width="24.8677%" height="15" fill="rgb(218,9,34)" fg:x="492" fg:w="329"/><text x="37.4382%" y="511.50">block.exe`block_buffer::BlockBuffer&lt;type..</text></g><g><title>block.exe`digest::core_api::wrapper::impl$7::update::closure$0(digest::core_api::wrapper::impl$7::update::closure_env$0&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (1 samples, 0.08%)</title><rect x="61.9803%" y="485" width="0.0756%" height="15" fill="rgb(222,106,8)" fg:x="820" fg:w="1"/><text x="62.2303%" y="495.50"></text></g><g><title>block.exe`digest::core_api::ct_variable::impl$2::update_blocks(digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt;*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (1 samples, 0.08%)</title><rect x="61.9803%" y="469" width="0.0756%" height="15" fill="rgb(211,220,0)" fg:x="820" fg:w="1"/><text x="62.2303%" y="479.50"></text></g><g><title>block.exe`sha2::core_api::impl$3::update_blocks(sha2::core_api::Sha256VarCore*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (1 samples, 0.08%)</title><rect x="61.9803%" y="453" width="0.0756%" height="15" fill="rgb(229,52,16)" fg:x="820" fg:w="1"/><text x="62.2303%" y="463.50"></text></g><g><title>`0x7FFC7CFB19C0 (1 samples, 0.08%)</title><rect x="62.2827%" y="421" width="0.0756%" height="15" fill="rgb(212,155,18)" fg:x="824" fg:w="1"/><text x="62.5327%" y="431.50"></text></g><g><title>`0x7FFC7CFB19DE (1 samples, 0.08%)</title><rect x="62.3583%" y="421" width="0.0756%" height="15" fill="rgb(242,21,14)" fg:x="825" fg:w="1"/><text x="62.6083%" y="431.50"></text></g><g><title>`0x7FFC7CFB1A9A (2 samples, 0.15%)</title><rect x="62.4339%" y="421" width="0.1512%" height="15" fill="rgb(222,19,48)" fg:x="826" fg:w="2"/><text x="62.6839%" y="431.50"></text></g><g><title>`0x7FFC7CFB1AC9 (4 samples, 0.30%)</title><rect x="62.5850%" y="421" width="0.3023%" height="15" fill="rgb(232,45,27)" fg:x="828" fg:w="4"/><text x="62.8350%" y="431.50"></text></g><g><title>`0x7FFC7CFB1B3A (1 samples, 0.08%)</title><rect x="62.8874%" y="421" width="0.0756%" height="15" fill="rgb(249,103,42)" fg:x="832" fg:w="1"/><text x="63.1374%" y="431.50"></text></g><g><title>`0x7FFC7CFB1B54 (5 samples, 0.38%)</title><rect x="62.9630%" y="421" width="0.3779%" height="15" fill="rgb(246,81,33)" fg:x="833" fg:w="5"/><text x="63.2130%" y="431.50"></text></g><g><title>`0x7FFC7CFB1B8D (1 samples, 0.08%)</title><rect x="63.3409%" y="421" width="0.0756%" height="15" fill="rgb(252,33,42)" fg:x="838" fg:w="1"/><text x="63.5909%" y="431.50"></text></g><g><title>`0x7FFC7CFB1B9B (1 samples, 0.08%)</title><rect x="63.4165%" y="421" width="0.0756%" height="15" fill="rgb(209,212,41)" fg:x="839" fg:w="1"/><text x="63.6665%" y="431.50"></text></g><g><title>`0x7FFC7CFB1BA2 (1 samples, 0.08%)</title><rect x="63.4921%" y="421" width="0.0756%" height="15" fill="rgb(207,154,6)" fg:x="840" fg:w="1"/><text x="63.7421%" y="431.50"></text></g><g><title>block.exe`sha2::sha256::compress256(unsigned int[8]*, ref$&lt;slice2$&lt;generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (16 samples, 1.21%)</title><rect x="64.3991%" y="389" width="1.2094%" height="15" fill="rgb(223,64,47)" fg:x="852" fg:w="16"/><text x="64.6491%" y="399.50"></text></g><g><title>block.exe`sha2::sha256::x86::compress(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (6 samples, 0.45%)</title><rect x="65.1550%" y="373" width="0.4535%" height="15" fill="rgb(211,161,38)" fg:x="862" fg:w="6"/><text x="65.4050%" y="383.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256rnds2_epu32 (38 samples, 2.87%)</title><rect x="66.2132%" y="373" width="2.8723%" height="15" fill="rgb(219,138,40)" fg:x="876" fg:w="38"/><text x="66.4632%" y="383.50">bl..</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (68 samples, 5.14%)</title><rect x="69.0854%" y="373" width="5.1398%" height="15" fill="rgb(241,228,46)" fg:x="914" fg:w="68"/><text x="69.3354%" y="383.50">block...</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (17 samples, 1.28%)</title><rect x="74.2252%" y="373" width="1.2850%" height="15" fill="rgb(223,209,38)" fg:x="982" fg:w="17"/><text x="74.4752%" y="383.50"></text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (17 samples, 1.28%)</title><rect x="74.2252%" y="357" width="1.2850%" height="15" fill="rgb(236,164,45)" fg:x="982" fg:w="17"/><text x="74.4752%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_shuffle_epi32 (55 samples, 4.16%)</title><rect x="75.5102%" y="373" width="4.1572%" height="15" fill="rgb(231,15,5)" fg:x="999" fg:w="55"/><text x="75.7602%" y="383.50">block..</text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_storeu_si128 (4 samples, 0.30%)</title><rect x="79.6674%" y="373" width="0.3023%" height="15" fill="rgb(252,35,15)" fg:x="1054" fg:w="4"/><text x="79.9174%" y="383.50"></text></g><g><title>block.exe`core::ptr::mut_ptr::impl$0::write_unaligned (4 samples, 0.30%)</title><rect x="79.6674%" y="357" width="0.3023%" height="15" fill="rgb(248,181,18)" fg:x="1054" fg:w="4"/><text x="79.9174%" y="367.50"></text></g><g><title>block.exe`core::ptr::write_unaligned (4 samples, 0.30%)</title><rect x="79.6674%" y="341" width="0.3023%" height="15" fill="rgb(233,39,42)" fg:x="1054" fg:w="4"/><text x="79.9174%" y="351.50"></text></g><g><title>block.exe`core::intrinsics::copy_nonoverlapping (4 samples, 0.30%)</title><rect x="79.6674%" y="325" width="0.3023%" height="15" fill="rgb(238,110,33)" fg:x="1054" fg:w="4"/><text x="79.9174%" y="335.50"></text></g><g><title>block.exe`core::core_arch::x86::sse41::_mm_blend_epi16 (2 samples, 0.15%)</title><rect x="79.9698%" y="373" width="0.1512%" height="15" fill="rgb(233,195,10)" fg:x="1058" fg:w="2"/><text x="80.2198%" y="383.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (1 samples, 0.08%)</title><rect x="80.1209%" y="373" width="0.0756%" height="15" fill="rgb(254,105,3)" fg:x="1060" fg:w="1"/><text x="80.3709%" y="383.50"></text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_shuffle_epi8 (1 samples, 0.08%)</title><rect x="80.1965%" y="373" width="0.0756%" height="15" fill="rgb(221,225,9)" fg:x="1061" fg:w="1"/><text x="80.4465%" y="383.50"></text></g><g><title>block.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;array$ (1 samples, 0.08%)</title><rect x="80.2721%" y="373" width="0.0756%" height="15" fill="rgb(224,227,45)" fg:x="1062" fg:w="1"/><text x="80.5221%" y="383.50"></text></g><g><title>block.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;array$ (1 samples, 0.08%)</title><rect x="80.2721%" y="357" width="0.0756%" height="15" fill="rgb(229,198,43)" fg:x="1062" fg:w="1"/><text x="80.5221%" y="367.50"></text></g><g><title>block.exe`core::slice::iter::Iter&lt;array$&lt;u8,64&gt; &gt;::new(ref$&lt;slice2$&lt;array$ (1 samples, 0.08%)</title><rect x="80.2721%" y="341" width="0.0756%" height="15" fill="rgb(206,209,35)" fg:x="1062" fg:w="1"/><text x="80.5221%" y="351.50"></text></g><g><title>block.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.08%)</title><rect x="80.2721%" y="325" width="0.0756%" height="15" fill="rgb(245,195,53)" fg:x="1062" fg:w="1"/><text x="80.5221%" y="335.50"></text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256msg1_epu32 (57 samples, 4.31%)</title><rect x="80.3477%" y="357" width="4.3084%" height="15" fill="rgb(240,92,26)" fg:x="1063" fg:w="57"/><text x="80.5977%" y="367.50">block..</text></g><g><title>block.exe`core::core_arch::x86::sha::_mm_sha256msg2_epu32 (6 samples, 0.45%)</title><rect x="84.6561%" y="357" width="0.4535%" height="15" fill="rgb(207,40,23)" fg:x="1120" fg:w="6"/><text x="84.9061%" y="367.50"></text></g><g><title>block.exe`core::core_arch::x86::sse2::_mm_add_epi32 (30 samples, 2.27%)</title><rect x="85.1096%" y="357" width="2.2676%" height="15" fill="rgb(223,111,35)" fg:x="1126" fg:w="30"/><text x="85.3596%" y="367.50">b..</text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::digest_pad(unsigned char, ref$&lt;slice2$ (355 samples, 26.83%)</title><rect x="63.5676%" y="421" width="26.8330%" height="15" fill="rgb(229,147,28)" fg:x="841" fg:w="355"/><text x="63.8176%" y="431.50">block.exe`block_buffer::BlockBuffer&lt;typenum..</text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::set_pos_unchecked (344 samples, 26.00%)</title><rect x="64.3991%" y="405" width="26.0015%" height="15" fill="rgb(211,29,28)" fg:x="852" fg:w="344"/><text x="64.6491%" y="415.50">block.exe`block_buffer::BlockBuffer&lt;typenu..</text></g><g><title>block.exe`sha2::sha256::x86::digest_blocks(unsigned int[8]*, ref$&lt;slice2$&lt;array$ (328 samples, 24.79%)</title><rect x="65.6085%" y="389" width="24.7921%" height="15" fill="rgb(228,72,33)" fg:x="868" fg:w="328"/><text x="65.8585%" y="399.50">block.exe`sha2::sha256::x86::digest_bloc..</text></g><g><title>block.exe`sha2::sha256::x86::schedule (133 samples, 10.05%)</title><rect x="80.3477%" y="373" width="10.0529%" height="15" fill="rgb(205,214,31)" fg:x="1063" fg:w="133"/><text x="80.5977%" y="383.50">block.exe`sha2:..</text></g><g><title>block.exe`core::core_arch::x86::ssse3::_mm_alignr_epi8 (40 samples, 3.02%)</title><rect x="87.3772%" y="357" width="3.0234%" height="15" fill="rgb(224,111,15)" fg:x="1156" fg:w="40"/><text x="87.6272%" y="367.50">blo..</text></g><g><title>block.exe`block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;::len64_padding_be (378 samples, 28.57%)</title><rect x="62.2827%" y="437" width="28.5714%" height="15" fill="rgb(253,21,26)" fg:x="824" fg:w="378"/><text x="62.5327%" y="447.50">block.exe`block_buffer::BlockBuffer&lt;typenum::u..</text></g><g><title>block.exe`memset (6 samples, 0.45%)</title><rect x="90.4006%" y="421" width="0.4535%" height="15" fill="rgb(245,139,43)" fg:x="1196" fg:w="6"/><text x="90.6506%" y="431.50"></text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::hash (1,118 samples, 84.50%)</title><rect x="9.2971%" y="549" width="84.5049%" height="15" fill="rgb(252,170,7)" fg:x="123" fg:w="1118"/><text x="9.5471%" y="559.50">block.exe`block::blockchain::Block&lt;block::Data&gt;::hash</text></g><g><title>block.exe`digest::digest::impl$0::digest&lt;digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (889 samples, 67.20%)</title><rect x="26.6062%" y="533" width="67.1958%" height="15" fill="rgb(231,118,14)" fg:x="352" fg:w="889"/><text x="26.8562%" y="543.50">block.exe`digest::digest::impl$0::digest&lt;digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::..</text></g><g><title>block.exe`digest::digest::impl$0::finalize(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (420 samples, 31.75%)</title><rect x="62.0559%" y="517" width="31.7460%" height="15" fill="rgb(238,83,0)" fg:x="821" fg:w="420"/><text x="62.3059%" y="527.50">block.exe`digest::digest::impl$0::finalize(digest::..</text></g><g><title>block.exe`digest::FixedOutput::finalize_fixed(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (420 samples, 31.75%)</title><rect x="62.0559%" y="501" width="31.7460%" height="15" fill="rgb(221,39,39)" fg:x="821" fg:w="420"/><text x="62.3059%" y="511.50">block.exe`digest::FixedOutput::finalize_fixed(diges..</text></g><g><title>block.exe`digest::core_api::wrapper::impl$9::finalize_into(digest::core_api::wrapper::CoreWrapper&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt; &gt;, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (418 samples, 31.59%)</title><rect x="62.2071%" y="485" width="31.5949%" height="15" fill="rgb(222,119,46)" fg:x="823" fg:w="418"/><text x="62.4571%" y="495.50">block.exe`digest::core_api::wrapper::impl$9::finali..</text></g><g><title>block.exe`digest::core_api::ct_variable::impl$5::finalize_fixed_core(digest::core_api::ct_variable::CtVariableCoreWrapper&lt;sha2::core_api::Sha256VarCore,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,sha2::OidSha256&gt;*, block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;*, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (418 samples, 31.59%)</title><rect x="62.2071%" y="469" width="31.5949%" height="15" fill="rgb(222,165,49)" fg:x="823" fg:w="418"/><text x="62.4571%" y="479.50">block.exe`digest::core_api::ct_variable::impl$5::fi..</text></g><g><title>block.exe`sha2::core_api::impl$5::finalize_variable_core(sha2::core_api::Sha256VarCore*, block_buffer::BlockBuffer&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,typenum::bit::B0&gt;,block_buffer::Eager&gt;*, generic_array::GenericArray&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt (418 samples, 31.59%)</title><rect x="62.2071%" y="453" width="31.5949%" height="15" fill="rgb(219,113,52)" fg:x="823" fg:w="418"/><text x="62.4571%" y="463.50">block.exe`sha2::core_api::impl$5::finalize_variable..</text></g><g><title>block.exe`core::num::impl$8::to_be_bytes (39 samples, 2.95%)</title><rect x="90.8541%" y="437" width="2.9478%" height="15" fill="rgb(214,7,15)" fg:x="1202" fg:w="39"/><text x="91.1041%" y="447.50">bl..</text></g><g><title>block.exe`core::num::impl$8::to_be (39 samples, 2.95%)</title><rect x="90.8541%" y="421" width="2.9478%" height="15" fill="rgb(235,32,4)" fg:x="1202" fg:w="39"/><text x="91.1041%" y="431.50">bl..</text></g><g><title>block.exe`core::num::impl$8::swap_bytes (39 samples, 2.95%)</title><rect x="90.8541%" y="405" width="2.9478%" height="15" fill="rgb(238,90,54)" fg:x="1202" fg:w="39"/><text x="91.1041%" y="415.50">bl..</text></g><g><title>block.exe`core::cmp::impls::impl$57::cmp (3 samples, 0.23%)</title><rect x="93.8020%" y="549" width="0.2268%" height="15" fill="rgb(213,208,19)" fg:x="1241" fg:w="3"/><text x="94.0520%" y="559.50"></text></g><g><title>block.exe`block::blockchain::Block&lt;block::Data&gt;::is_valid (1,124 samples, 84.96%)</title><rect x="9.2971%" y="565" width="84.9584%" height="15" fill="rgb(233,156,4)" fg:x="123" fg:w="1124"/><text x="9.5471%" y="575.50">block.exe`block::blockchain::Block&lt;block::Data&gt;::is_valid</text></g><g><title>block.exe`core::iter::range::impl$6::next(core::ops::range::Range (3 samples, 0.23%)</title><rect x="94.0287%" y="549" width="0.2268%" height="15" fill="rgb(207,194,5)" fg:x="1244" fg:w="3"/><text x="94.2787%" y="559.50"></text></g><g><title>block.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (3 samples, 0.23%)</title><rect x="94.0287%" y="533" width="0.2268%" height="15" fill="rgb(206,111,30)" fg:x="1244" fg:w="3"/><text x="94.2787%" y="543.50"></text></g><g><title>block.exe`core::cmp::impls::impl$54::lt (3 samples, 0.23%)</title><rect x="94.0287%" y="517" width="0.2268%" height="15" fill="rgb(243,70,54)" fg:x="1244" fg:w="3"/><text x="94.2787%" y="527.50"></text></g><g><title>block.exe`block::blockchain::BlockChain&lt;block::Data&gt;::mine&lt;block::Data&gt; (1,136 samples, 85.87%)</title><rect x="8.4656%" y="581" width="85.8655%" height="15" fill="rgb(242,28,8)" fg:x="112" fg:w="1136"/><text x="8.7156%" y="591.50">block.exe`block::blockchain::BlockChain&lt;block::Data&gt;::mine&lt;block::Data&gt;</text></g><g><title>block.exe`chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt;::timestamp_millis (1 samples, 0.08%)</title><rect x="94.2555%" y="565" width="0.0756%" height="15" fill="rgb(219,106,18)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="575.50"></text></g><g><title>block.exe`chrono::naive::datetime::NaiveDateTime::timestamp_millis (1 samples, 0.08%)</title><rect x="94.2555%" y="549" width="0.0756%" height="15" fill="rgb(244,222,10)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="559.50"></text></g><g><title>block.exe`chrono::naive::datetime::NaiveDateTime::timestamp (1 samples, 0.08%)</title><rect x="94.2555%" y="533" width="0.0756%" height="15" fill="rgb(236,179,52)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="543.50"></text></g><g><title>block.exe`chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="94.2555%" y="517" width="0.0756%" height="15" fill="rgb(213,23,39)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="527.50"></text></g><g><title>block.exe`std::time::SystemTime::duration_since (1 samples, 0.08%)</title><rect x="94.2555%" y="501" width="0.0756%" height="15" fill="rgb(238,48,10)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="511.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::sub_time (1 samples, 0.08%)</title><rect x="94.2555%" y="485" width="0.0756%" height="15" fill="rgb(251,196,23)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="495.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::intervals (1 samples, 0.08%)</title><rect x="94.2555%" y="469" width="0.0756%" height="15" fill="rgb(250,152,24)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="479.50"></text></g><g><title>`0x7FFCAB4A7F40 (1 samples, 0.08%)</title><rect x="94.2555%" y="453" width="0.0756%" height="15" fill="rgb(209,150,17)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="463.50"></text></g><g><title>`0x7FFCAE0A0400 (1 samples, 0.08%)</title><rect x="94.2555%" y="437" width="0.0756%" height="15" fill="rgb(234,202,34)" fg:x="1247" fg:w="1"/><text x="94.5055%" y="447.50"></text></g><g><title>block.exe`alloc::string::impl$41::to_string (1 samples, 0.08%)</title><rect x="94.3311%" y="469" width="0.0756%" height="15" fill="rgb(253,148,53)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="479.50"></text></g><g><title>block.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;, ref$ (1 samples, 0.08%)</title><rect x="94.3311%" y="453" width="0.0756%" height="15" fill="rgb(218,129,16)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="463.50"></text></g><g><title>block.exe`colored::impl$7::fmt (1 samples, 0.08%)</title><rect x="94.3311%" y="437" width="0.0756%" height="15" fill="rgb(216,85,19)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="447.50"></text></g><g><title>block.exe`colored::ColoredString::has_colors (1 samples, 0.08%)</title><rect x="94.3311%" y="421" width="0.0756%" height="15" fill="rgb(235,228,7)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="431.50"></text></g><g><title>block.exe`colored::control::impl$2::deref (1 samples, 0.08%)</title><rect x="94.3311%" y="405" width="0.0756%" height="15" fill="rgb(245,175,0)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="415.50"></text></g><g><title>block.exe`colored::control::impl$2::deref::__stability (1 samples, 0.08%)</title><rect x="94.3311%" y="389" width="0.0756%" height="15" fill="rgb(208,168,36)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="399.50"></text></g><g><title>block.exe`lazy_static::lazy::Lazy&lt;colored::control::ShouldColorize&gt;::get(colored::control::ShouldColorize (*) (1 samples, 0.08%)</title><rect x="94.3311%" y="373" width="0.0756%" height="15" fill="rgb(246,171,24)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="383.50"></text></g><g><title>block.exe`std::sync::once::Once::call_once(lazy_static::lazy::impl$0::get::closure_env$0&lt;colored::control::ShouldColorize,colored::control::ShouldColorize (*) (1 samples, 0.08%)</title><rect x="94.3311%" y="357" width="0.0756%" height="15" fill="rgb(215,142,24)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="367.50"></text></g><g><title>block.exe`std::sys_common::once::queue::Once::call (1 samples, 0.08%)</title><rect x="94.3311%" y="341" width="0.0756%" height="15" fill="rgb(250,187,7)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="351.50"></text></g><g><title>block.exe`core::cell::Cell::get (1 samples, 0.08%)</title><rect x="94.3311%" y="325" width="0.0756%" height="15" fill="rgb(228,66,33)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="335.50"></text></g><g><title>block.exe`std::sync::once::impl$2::call_once::closure$0&lt;lazy_static::lazy::impl$0::get::closure_env$0&lt;colored::control::ShouldColorize,colored::control::ShouldColorize (*)()&gt; &gt;(std::sync::once::impl$2::call_once::closure_env$0&lt;lazy_static::lazy::impl$0::get::closure_env$0&lt;colored::control::ShouldColorize,colored::control::ShouldColorize (*) (1 samples, 0.08%)</title><rect x="94.3311%" y="309" width="0.0756%" height="15" fill="rgb(234,215,21)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="319.50"></text></g><g><title>block.exe`lazy_static::lazy::impl$0::get::closure$0(lazy_static::lazy::impl$0::get::closure_env$0&lt;colored::control::ShouldColorize,colored::control::ShouldColorize (*) (1 samples, 0.08%)</title><rect x="94.3311%" y="293" width="0.0756%" height="15" fill="rgb(222,191,20)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="303.50"></text></g><g><title>block.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;colored::control::ShouldColorize&gt; &gt; &gt;::set(enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="94.3311%" y="277" width="0.0756%" height="15" fill="rgb(245,79,54)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="287.50"></text></g><g><title>block.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;colored::control::ShouldColorize&gt; &gt; &gt;::replace(enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="94.3311%" y="261" width="0.0756%" height="15" fill="rgb(240,10,37)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="271.50"></text></g><g><title>block.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;colored::control::ShouldColorize&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="94.3311%" y="245" width="0.0756%" height="15" fill="rgb(214,192,32)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="255.50"></text></g><g><title>block.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;colored::control::ShouldColorize&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="94.3311%" y="229" width="0.0756%" height="15" fill="rgb(209,36,54)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="239.50"></text></g><g><title>block.exe`colored::control::ShouldColorize::from_env (1 samples, 0.08%)</title><rect x="94.3311%" y="213" width="0.0756%" height="15" fill="rgb(220,10,11)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="223.50"></text></g><g><title>block.exe`std::env::var(ref$ (1 samples, 0.08%)</title><rect x="94.3311%" y="197" width="0.0756%" height="15" fill="rgb(221,106,17)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="207.50"></text></g><g><title>block.exe`std::env::_var (1 samples, 0.08%)</title><rect x="94.3311%" y="181" width="0.0756%" height="15" fill="rgb(251,142,44)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="191.50"></text></g><g><title>block.exe`std::env::_var_os (1 samples, 0.08%)</title><rect x="94.3311%" y="165" width="0.0756%" height="15" fill="rgb(238,13,15)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="175.50"></text></g><g><title>block.exe`std::sys::windows::os::getenv (1 samples, 0.08%)</title><rect x="94.3311%" y="149" width="0.0756%" height="15" fill="rgb(208,107,27)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="159.50"></text></g><g><title>block.exe`std::sys::windows::fill_utf16_buf (1 samples, 0.08%)</title><rect x="94.3311%" y="133" width="0.0756%" height="15" fill="rgb(205,136,37)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="143.50"></text></g><g><title>block.exe`std::sys::windows::os::getenv::closure$0 (1 samples, 0.08%)</title><rect x="94.3311%" y="117" width="0.0756%" height="15" fill="rgb(250,205,27)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="127.50"></text></g><g><title>`0x7FFCAB46650C (1 samples, 0.08%)</title><rect x="94.3311%" y="101" width="0.0756%" height="15" fill="rgb(210,80,43)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="111.50"></text></g><g><title>`0x7FFC77D42D43 (1 samples, 0.08%)</title><rect x="94.3311%" y="85" width="0.0756%" height="15" fill="rgb(247,160,36)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="95.50"></text></g><g><title>`0x7FFC77D474A2 (1 samples, 0.08%)</title><rect x="94.3311%" y="69" width="0.0756%" height="15" fill="rgb(234,13,49)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="79.50"></text></g><g><title>`0x7FFCAE12F454 (1 samples, 0.08%)</title><rect x="94.3311%" y="53" width="0.0756%" height="15" fill="rgb(234,122,0)" fg:x="1248" fg:w="1"/><text x="94.5811%" y="63.50"></text></g><g><title>block.exe`core::ptr::drop_in_place (1 samples, 0.08%)</title><rect x="94.4067%" y="469" width="0.0756%" height="15" fill="rgb(207,146,38)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="479.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.08%)</title><rect x="94.4067%" y="453" width="0.0756%" height="15" fill="rgb(207,177,25)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="463.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="94.4067%" y="437" width="0.0756%" height="15" fill="rgb(211,178,42)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="447.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="94.4067%" y="421" width="0.0756%" height="15" fill="rgb(230,69,54)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="431.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (1 samples, 0.08%)</title><rect x="94.4067%" y="405" width="0.0756%" height="15" fill="rgb(214,135,41)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="415.50"></text></g><g><title>block.exe`std::io::stdio::_print (1 samples, 0.08%)</title><rect x="94.4067%" y="389" width="0.0756%" height="15" fill="rgb(237,67,25)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="399.50"></text></g><g><title>block.exe`std::io::stdio::print_to (1 samples, 0.08%)</title><rect x="94.4067%" y="373" width="0.0756%" height="15" fill="rgb(222,189,50)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="383.50"></text></g><g><title>block.exe`std::io::stdio::impl$11::write_fmt (1 samples, 0.08%)</title><rect x="94.4067%" y="357" width="0.0756%" height="15" fill="rgb(245,148,34)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="367.50"></text></g><g><title>block.exe`std::io::stdio::impl$12::write_fmt (1 samples, 0.08%)</title><rect x="94.4067%" y="341" width="0.0756%" height="15" fill="rgb(222,29,6)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="351.50"></text></g><g><title>block.exe`std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.4067%" y="325" width="0.0756%" height="15" fill="rgb(221,189,43)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="335.50"></text></g><g><title>block.exe`core::fmt::write (1 samples, 0.08%)</title><rect x="94.4067%" y="309" width="0.0756%" height="15" fill="rgb(207,36,27)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="319.50"></text></g><g><title>block.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.08%)</title><rect x="94.4067%" y="293" width="0.0756%" height="15" fill="rgb(217,90,24)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="303.50"></text></g><g><title>block.exe`std::io::stdio::impl$13::write_all (1 samples, 0.08%)</title><rect x="94.4067%" y="277" width="0.0756%" height="15" fill="rgb(224,66,35)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="287.50"></text></g><g><title>block.exe`core::cell::RefCell::borrow_mut (1 samples, 0.08%)</title><rect x="94.4067%" y="261" width="0.0756%" height="15" fill="rgb(221,13,50)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="271.50"></text></g><g><title>block.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.08%)</title><rect x="94.4067%" y="245" width="0.0756%" height="15" fill="rgb(236,68,49)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="255.50"></text></g><g><title>block.exe`core::result::impl$26::branch (1 samples, 0.08%)</title><rect x="94.4067%" y="229" width="0.0756%" height="15" fill="rgb(229,146,28)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="239.50"></text></g><g><title>block.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.08%)</title><rect x="94.4067%" y="213" width="0.0756%" height="15" fill="rgb(225,31,38)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="223.50"></text></g><g><title>block.exe`std::io::stdio::impl$1::write (1 samples, 0.08%)</title><rect x="94.4067%" y="197" width="0.0756%" height="15" fill="rgb(250,208,3)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="207.50"></text></g><g><title>block.exe`std::io::stdio::handle_ebadf (1 samples, 0.08%)</title><rect x="94.4067%" y="181" width="0.0756%" height="15" fill="rgb(246,54,23)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="191.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write (1 samples, 0.08%)</title><rect x="94.4067%" y="165" width="0.0756%" height="15" fill="rgb(243,76,11)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="175.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.08%)</title><rect x="94.4067%" y="149" width="0.0756%" height="15" fill="rgb(245,21,50)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="159.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.08%)</title><rect x="94.4067%" y="133" width="0.0756%" height="15" fill="rgb(228,9,43)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="143.50"></text></g><g><title>block.exe`std::sys::windows::cvt (1 samples, 0.08%)</title><rect x="94.4067%" y="117" width="0.0756%" height="15" fill="rgb(208,100,47)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="127.50"></text></g><g><title>block.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.08%)</title><rect x="94.4067%" y="101" width="0.0756%" height="15" fill="rgb(232,26,8)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="111.50"></text></g><g><title>`0x7FFCAB47D64E (1 samples, 0.08%)</title><rect x="94.4067%" y="85" width="0.0756%" height="15" fill="rgb(216,166,38)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="95.50"></text></g><g><title>`0x7FFCAB47D6E3 (1 samples, 0.08%)</title><rect x="94.4067%" y="69" width="0.0756%" height="15" fill="rgb(251,202,51)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="79.50"></text></g><g><title>`0x7FFCAB47DA19 (1 samples, 0.08%)</title><rect x="94.4067%" y="53" width="0.0756%" height="15" fill="rgb(254,216,34)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="63.50"></text></g><g><title>`0x7FFCAE12F454 (1 samples, 0.08%)</title><rect x="94.4067%" y="37" width="0.0756%" height="15" fill="rgb(251,32,27)" fg:x="1249" fg:w="1"/><text x="94.6567%" y="47.50"></text></g><g><title>block.exe`block::blockchain::BlockChain&lt;block::Data&gt;::new (3 samples, 0.23%)</title><rect x="94.3311%" y="581" width="0.2268%" height="15" fill="rgb(208,127,28)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="591.50"></text></g><g><title>block.exe`alloc::alloc::exchange_malloc (3 samples, 0.23%)</title><rect x="94.3311%" y="565" width="0.2268%" height="15" fill="rgb(224,137,22)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="575.50"></text></g><g><title>block.exe`alloc::alloc::impl$1::allocate (3 samples, 0.23%)</title><rect x="94.3311%" y="549" width="0.2268%" height="15" fill="rgb(254,70,32)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="559.50"></text></g><g><title>block.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="94.3311%" y="533" width="0.2268%" height="15" fill="rgb(229,75,37)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="543.50"></text></g><g><title>block.exe`alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="94.3311%" y="517" width="0.2268%" height="15" fill="rgb(252,64,23)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="527.50"></text></g><g><title>block.exe`core::ptr::read_volatile (3 samples, 0.23%)</title><rect x="94.3311%" y="501" width="0.2268%" height="15" fill="rgb(232,162,48)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="511.50"></text></g><g><title>block.exe`simple_logger::impl$2::log (3 samples, 0.23%)</title><rect x="94.3311%" y="485" width="0.2268%" height="15" fill="rgb(246,160,12)" fg:x="1248" fg:w="3"/><text x="94.5811%" y="495.50"></text></g><g><title>block.exe`time::offset_date_time::OffsetDateTime::now_utc (1 samples, 0.08%)</title><rect x="94.4822%" y="469" width="0.0756%" height="15" fill="rgb(247,166,0)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="479.50"></text></g><g><title>block.exe`time::date_time::DateTime&lt;enum2$&lt;time::date_time::offset_kind::Fixed&gt; &gt;::now_utc (1 samples, 0.08%)</title><rect x="94.4822%" y="453" width="0.0756%" height="15" fill="rgb(249,219,21)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="463.50"></text></g><g><title>block.exe`core::convert::impl$3::into (1 samples, 0.08%)</title><rect x="94.4822%" y="437" width="0.0756%" height="15" fill="rgb(205,209,3)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="447.50"></text></g><g><title>block.exe`time::date_time::impl$32::from (1 samples, 0.08%)</title><rect x="94.4822%" y="421" width="0.0756%" height="15" fill="rgb(243,44,1)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="431.50"></text></g><g><title>block.exe`std::time::SystemTime::duration_since (1 samples, 0.08%)</title><rect x="94.4822%" y="405" width="0.0756%" height="15" fill="rgb(206,159,16)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="415.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::sub_time (1 samples, 0.08%)</title><rect x="94.4822%" y="389" width="0.0756%" height="15" fill="rgb(244,77,30)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="399.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::intervals (1 samples, 0.08%)</title><rect x="94.4822%" y="373" width="0.0756%" height="15" fill="rgb(218,69,12)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="383.50"></text></g><g><title>block.exe`std::sys::windows::c::GetSystemTimePreciseAsFileTime::load (1 samples, 0.08%)</title><rect x="94.4822%" y="357" width="0.0756%" height="15" fill="rgb(212,87,7)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="367.50"></text></g><g><title>block.exe`std::sys::windows::c::GetSystemTimePreciseAsFileTime::load_from_module (1 samples, 0.08%)</title><rect x="94.4822%" y="341" width="0.0756%" height="15" fill="rgb(245,114,25)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="351.50"></text></g><g><title>block.exe`core::option::Option::and_then (1 samples, 0.08%)</title><rect x="94.4822%" y="325" width="0.0756%" height="15" fill="rgb(210,61,42)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="335.50"></text></g><g><title>`0x7FFCAB491C60 (1 samples, 0.08%)</title><rect x="94.4822%" y="309" width="0.0756%" height="15" fill="rgb(211,52,33)" fg:x="1250" fg:w="1"/><text x="94.7322%" y="319.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.08%)</title><rect x="94.5578%" y="581" width="0.0756%" height="15" fill="rgb(234,58,33)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="591.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="94.5578%" y="565" width="0.0756%" height="15" fill="rgb(220,115,36)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="575.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="94.5578%" y="549" width="0.0756%" height="15" fill="rgb(243,153,54)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="559.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (1 samples, 0.08%)</title><rect x="94.5578%" y="533" width="0.0756%" height="15" fill="rgb(251,47,18)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="543.50"></text></g><g><title>block.exe`std::io::stdio::_print (1 samples, 0.08%)</title><rect x="94.5578%" y="517" width="0.0756%" height="15" fill="rgb(242,102,42)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="527.50"></text></g><g><title>block.exe`std::io::stdio::print_to (1 samples, 0.08%)</title><rect x="94.5578%" y="501" width="0.0756%" height="15" fill="rgb(234,31,38)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="511.50"></text></g><g><title>block.exe`std::io::stdio::impl$11::write_fmt (1 samples, 0.08%)</title><rect x="94.5578%" y="485" width="0.0756%" height="15" fill="rgb(221,117,51)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="495.50"></text></g><g><title>block.exe`std::io::stdio::impl$12::write_fmt (1 samples, 0.08%)</title><rect x="94.5578%" y="469" width="0.0756%" height="15" fill="rgb(212,20,18)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="479.50"></text></g><g><title>block.exe`std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.5578%" y="453" width="0.0756%" height="15" fill="rgb(245,133,36)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="463.50"></text></g><g><title>block.exe`core::fmt::write (1 samples, 0.08%)</title><rect x="94.5578%" y="437" width="0.0756%" height="15" fill="rgb(212,6,19)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="447.50"></text></g><g><title>block.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.08%)</title><rect x="94.5578%" y="421" width="0.0756%" height="15" fill="rgb(218,1,36)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="431.50"></text></g><g><title>block.exe`std::io::stdio::impl$13::write_all (1 samples, 0.08%)</title><rect x="94.5578%" y="405" width="0.0756%" height="15" fill="rgb(246,84,54)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="415.50"></text></g><g><title>block.exe`core::cell::RefCell::borrow_mut (1 samples, 0.08%)</title><rect x="94.5578%" y="389" width="0.0756%" height="15" fill="rgb(242,110,6)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="399.50"></text></g><g><title>block.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.08%)</title><rect x="94.5578%" y="373" width="0.0756%" height="15" fill="rgb(214,47,5)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="383.50"></text></g><g><title>block.exe`core::result::impl$26::branch (1 samples, 0.08%)</title><rect x="94.5578%" y="357" width="0.0756%" height="15" fill="rgb(218,159,25)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="367.50"></text></g><g><title>block.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.08%)</title><rect x="94.5578%" y="341" width="0.0756%" height="15" fill="rgb(215,211,28)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="351.50"></text></g><g><title>block.exe`std::io::stdio::impl$1::write (1 samples, 0.08%)</title><rect x="94.5578%" y="325" width="0.0756%" height="15" fill="rgb(238,59,32)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="335.50"></text></g><g><title>block.exe`std::io::stdio::handle_ebadf (1 samples, 0.08%)</title><rect x="94.5578%" y="309" width="0.0756%" height="15" fill="rgb(226,82,3)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="319.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write (1 samples, 0.08%)</title><rect x="94.5578%" y="293" width="0.0756%" height="15" fill="rgb(240,164,32)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="303.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.08%)</title><rect x="94.5578%" y="277" width="0.0756%" height="15" fill="rgb(232,46,7)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="287.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.08%)</title><rect x="94.5578%" y="261" width="0.0756%" height="15" fill="rgb(229,129,53)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="271.50"></text></g><g><title>block.exe`std::sys::windows::cvt (1 samples, 0.08%)</title><rect x="94.5578%" y="245" width="0.0756%" height="15" fill="rgb(234,188,29)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="255.50"></text></g><g><title>block.exe`std::sys::windows::impl$3::is_zero (1 samples, 0.08%)</title><rect x="94.5578%" y="229" width="0.0756%" height="15" fill="rgb(246,141,4)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="239.50"></text></g><g><title>`0x7FFCAB47D64E (1 samples, 0.08%)</title><rect x="94.5578%" y="213" width="0.0756%" height="15" fill="rgb(229,23,39)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="223.50"></text></g><g><title>`0x7FFCAB47D6E3 (1 samples, 0.08%)</title><rect x="94.5578%" y="197" width="0.0756%" height="15" fill="rgb(206,12,3)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="207.50"></text></g><g><title>`0x7FFCAB47DA19 (1 samples, 0.08%)</title><rect x="94.5578%" y="181" width="0.0756%" height="15" fill="rgb(252,226,20)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="191.50"></text></g><g><title>`0x7FFCAE12F454 (1 samples, 0.08%)</title><rect x="94.5578%" y="165" width="0.0756%" height="15" fill="rgb(216,123,35)" fg:x="1251" fg:w="1"/><text x="94.8078%" y="175.50"></text></g><g><title>block.exe`alloc::string::String::push_str(ref$ (1 samples, 0.08%)</title><rect x="94.6334%" y="405" width="0.0756%" height="15" fill="rgb(212,68,40)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="415.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.6334%" y="389" width="0.0756%" height="15" fill="rgb(254,125,32)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="399.50"></text></g><g><title>block.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 0.08%)</title><rect x="94.6334%" y="373" width="0.0756%" height="15" fill="rgb(253,97,22)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="383.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.6334%" y="357" width="0.0756%" height="15" fill="rgb(241,101,14)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="367.50"></text></g><g><title>block.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 0.08%)</title><rect x="94.6334%" y="341" width="0.0756%" height="15" fill="rgb(238,103,29)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="351.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.08%)</title><rect x="94.6334%" y="325" width="0.0756%" height="15" fill="rgb(233,195,47)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="335.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 0.08%)</title><rect x="94.6334%" y="309" width="0.0756%" height="15" fill="rgb(246,218,30)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="319.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="94.6334%" y="293" width="0.0756%" height="15" fill="rgb(219,145,47)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="303.50"></text></g><g><title>block.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.6334%" y="277" width="0.0756%" height="15" fill="rgb(243,12,26)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="287.50"></text></g><g><title>block.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.08%)</title><rect x="94.6334%" y="261" width="0.0756%" height="15" fill="rgb(214,87,16)" fg:x="1252" fg:w="1"/><text x="94.8834%" y="271.50"></text></g><g><title>block.exe`alloc::string::impl$41::to_string (2 samples, 0.15%)</title><rect x="94.6334%" y="549" width="0.1512%" height="15" fill="rgb(208,99,42)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="559.50"></text></g><g><title>block.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;, ref$ (2 samples, 0.15%)</title><rect x="94.6334%" y="533" width="0.1512%" height="15" fill="rgb(253,99,2)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="543.50"></text></g><g><title>block.exe`colored::impl$7::fmt (2 samples, 0.15%)</title><rect x="94.6334%" y="517" width="0.1512%" height="15" fill="rgb(220,168,23)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="527.50"></text></g><g><title>block.exe`colored::ColoredString::escape_inner_reset_sequences (2 samples, 0.15%)</title><rect x="94.6334%" y="501" width="0.1512%" height="15" fill="rgb(242,38,24)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="511.50"></text></g><g><title>block.exe`alloc::string::impl$38::deref (2 samples, 0.15%)</title><rect x="94.6334%" y="485" width="0.1512%" height="15" fill="rgb(225,182,9)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="495.50"></text></g><g><title>block.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.15%)</title><rect x="94.6334%" y="469" width="0.1512%" height="15" fill="rgb(243,178,37)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="479.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.15%)</title><rect x="94.6334%" y="453" width="0.1512%" height="15" fill="rgb(232,139,19)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="463.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.15%)</title><rect x="94.6334%" y="437" width="0.1512%" height="15" fill="rgb(225,201,24)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="447.50"></text></g><g><title>block.exe`colored::ColoredString::compute_style (2 samples, 0.15%)</title><rect x="94.6334%" y="421" width="0.1512%" height="15" fill="rgb(221,47,46)" fg:x="1252" fg:w="2"/><text x="94.8834%" y="431.50"></text></g><g><title>block.exe`alloc::string::impl$54::from(ref$ (1 samples, 0.08%)</title><rect x="94.7090%" y="405" width="0.0756%" height="15" fill="rgb(249,23,13)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="415.50"></text></g><g><title>block.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.08%)</title><rect x="94.7090%" y="389" width="0.0756%" height="15" fill="rgb(219,9,5)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="399.50"></text></g><g><title>block.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.7090%" y="373" width="0.0756%" height="15" fill="rgb(254,171,16)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="383.50"></text></g><g><title>block.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.7090%" y="357" width="0.0756%" height="15" fill="rgb(230,171,20)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="367.50"></text></g><g><title>block.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.7090%" y="341" width="0.0756%" height="15" fill="rgb(210,71,41)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="351.50"></text></g><g><title>block.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.7090%" y="325" width="0.0756%" height="15" fill="rgb(206,173,20)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="335.50"></text></g><g><title>block.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.08%)</title><rect x="94.7090%" y="309" width="0.0756%" height="15" fill="rgb(233,88,34)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="319.50"></text></g><g><title>block.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7090%" y="293" width="0.0756%" height="15" fill="rgb(223,209,46)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="303.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7090%" y="277" width="0.0756%" height="15" fill="rgb(250,43,18)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="287.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.7090%" y="261" width="0.0756%" height="15" fill="rgb(208,13,10)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="271.50"></text></g><g><title>`0x7FFCAE0CC7BA (1 samples, 0.08%)</title><rect x="94.7090%" y="245" width="0.0756%" height="15" fill="rgb(212,200,36)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="255.50"></text></g><g><title>`0x7FFCAE0CD1E7 (1 samples, 0.08%)</title><rect x="94.7090%" y="229" width="0.0756%" height="15" fill="rgb(225,90,30)" fg:x="1253" fg:w="1"/><text x="94.9590%" y="239.50"></text></g><g><title>block.exe`std::sys::windows::stdio::is_console (9 samples, 0.68%)</title><rect x="94.7846%" y="229" width="0.6803%" height="15" fill="rgb(236,182,39)" fg:x="1254" fg:w="9"/><text x="95.0346%" y="239.50"></text></g><g><title>`0x7FFCAB47D743 (9 samples, 0.68%)</title><rect x="94.7846%" y="213" width="0.6803%" height="15" fill="rgb(212,144,35)" fg:x="1254" fg:w="9"/><text x="95.0346%" y="223.50"></text></g><g><title>`0x7FFCAB47D924 (9 samples, 0.68%)</title><rect x="94.7846%" y="197" width="0.6803%" height="15" fill="rgb(228,63,44)" fg:x="1254" fg:w="9"/><text x="95.0346%" y="207.50"></text></g><g><title>`0x7FFCAB47DA19 (9 samples, 0.68%)</title><rect x="94.7846%" y="181" width="0.6803%" height="15" fill="rgb(228,109,6)" fg:x="1254" fg:w="9"/><text x="95.0346%" y="191.50"></text></g><g><title>`0x7FFCAE12F454 (9 samples, 0.68%)</title><rect x="94.7846%" y="165" width="0.6803%" height="15" fill="rgb(238,117,24)" fg:x="1254" fg:w="9"/><text x="95.0346%" y="175.50"></text></g><g><title>block.exe`core::ptr::drop_in_place (12 samples, 0.91%)</title><rect x="94.7846%" y="549" width="0.9070%" height="15" fill="rgb(242,26,26)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="559.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (12 samples, 0.91%)</title><rect x="94.7846%" y="533" width="0.9070%" height="15" fill="rgb(221,92,48)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="543.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (12 samples, 0.91%)</title><rect x="94.7846%" y="517" width="0.9070%" height="15" fill="rgb(209,209,32)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="527.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (12 samples, 0.91%)</title><rect x="94.7846%" y="501" width="0.9070%" height="15" fill="rgb(221,70,22)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="511.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (12 samples, 0.91%)</title><rect x="94.7846%" y="485" width="0.9070%" height="15" fill="rgb(248,145,5)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="495.50"></text></g><g><title>block.exe`std::io::stdio::_print (12 samples, 0.91%)</title><rect x="94.7846%" y="469" width="0.9070%" height="15" fill="rgb(226,116,26)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="479.50"></text></g><g><title>block.exe`std::io::stdio::print_to (12 samples, 0.91%)</title><rect x="94.7846%" y="453" width="0.9070%" height="15" fill="rgb(244,5,17)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="463.50"></text></g><g><title>block.exe`std::io::stdio::impl$11::write_fmt (12 samples, 0.91%)</title><rect x="94.7846%" y="437" width="0.9070%" height="15" fill="rgb(252,159,33)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="447.50"></text></g><g><title>block.exe`std::io::stdio::impl$12::write_fmt (12 samples, 0.91%)</title><rect x="94.7846%" y="421" width="0.9070%" height="15" fill="rgb(206,71,0)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="431.50"></text></g><g><title>block.exe`std::io::Write::write_fmt (12 samples, 0.91%)</title><rect x="94.7846%" y="405" width="0.9070%" height="15" fill="rgb(233,118,54)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="415.50"></text></g><g><title>block.exe`core::fmt::write (12 samples, 0.91%)</title><rect x="94.7846%" y="389" width="0.9070%" height="15" fill="rgb(234,83,48)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="399.50"></text></g><g><title>block.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (12 samples, 0.91%)</title><rect x="94.7846%" y="373" width="0.9070%" height="15" fill="rgb(228,3,54)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="383.50"></text></g><g><title>block.exe`std::io::stdio::impl$13::write_all (12 samples, 0.91%)</title><rect x="94.7846%" y="357" width="0.9070%" height="15" fill="rgb(226,155,13)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="367.50"></text></g><g><title>block.exe`core::cell::RefCell::borrow_mut (12 samples, 0.91%)</title><rect x="94.7846%" y="341" width="0.9070%" height="15" fill="rgb(241,28,37)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="351.50"></text></g><g><title>block.exe`std::io::buffered::linewritershim::impl$1::write_all (12 samples, 0.91%)</title><rect x="94.7846%" y="325" width="0.9070%" height="15" fill="rgb(233,93,10)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="335.50"></text></g><g><title>block.exe`core::result::impl$26::branch (12 samples, 0.91%)</title><rect x="94.7846%" y="309" width="0.9070%" height="15" fill="rgb(225,113,19)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="319.50"></text></g><g><title>block.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (12 samples, 0.91%)</title><rect x="94.7846%" y="293" width="0.9070%" height="15" fill="rgb(241,2,18)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="303.50"></text></g><g><title>block.exe`std::io::stdio::impl$1::write (12 samples, 0.91%)</title><rect x="94.7846%" y="277" width="0.9070%" height="15" fill="rgb(228,207,21)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="287.50"></text></g><g><title>block.exe`std::io::stdio::handle_ebadf (12 samples, 0.91%)</title><rect x="94.7846%" y="261" width="0.9070%" height="15" fill="rgb(213,211,35)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="271.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write (12 samples, 0.91%)</title><rect x="94.7846%" y="245" width="0.9070%" height="15" fill="rgb(209,83,10)" fg:x="1254" fg:w="12"/><text x="95.0346%" y="255.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_valid_utf8_to_console (3 samples, 0.23%)</title><rect x="95.4649%" y="229" width="0.2268%" height="15" fill="rgb(209,164,1)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="239.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_u16s (3 samples, 0.23%)</title><rect x="95.4649%" y="213" width="0.2268%" height="15" fill="rgb(213,184,43)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="223.50"></text></g><g><title>block.exe`std::sys::windows::cvt (3 samples, 0.23%)</title><rect x="95.4649%" y="197" width="0.2268%" height="15" fill="rgb(231,61,34)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="207.50"></text></g><g><title>block.exe`std::sys::windows::impl$3::is_zero (3 samples, 0.23%)</title><rect x="95.4649%" y="181" width="0.2268%" height="15" fill="rgb(235,75,3)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="191.50"></text></g><g><title>`0x7FFCAB47D64E (3 samples, 0.23%)</title><rect x="95.4649%" y="165" width="0.2268%" height="15" fill="rgb(220,106,47)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="175.50"></text></g><g><title>`0x7FFCAB47D6E3 (3 samples, 0.23%)</title><rect x="95.4649%" y="149" width="0.2268%" height="15" fill="rgb(210,196,33)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="159.50"></text></g><g><title>`0x7FFCAB47DA19 (3 samples, 0.23%)</title><rect x="95.4649%" y="133" width="0.2268%" height="15" fill="rgb(229,154,42)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="143.50"></text></g><g><title>`0x7FFCAE12F454 (3 samples, 0.23%)</title><rect x="95.4649%" y="117" width="0.2268%" height="15" fill="rgb(228,114,26)" fg:x="1263" fg:w="3"/><text x="95.7149%" y="127.50"></text></g><g><title>block.exe`log::__private_api::log(core::fmt::Arguments, log::Level, tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;*, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;tuple$&lt;ref$&lt;str$&gt;,ref$ (15 samples, 1.13%)</title><rect x="94.6334%" y="581" width="1.1338%" height="15" fill="rgb(208,144,1)" fg:x="1252" fg:w="15"/><text x="94.8834%" y="591.50"></text></g><g><title>block.exe`simple_logger::impl$2::log (15 samples, 1.13%)</title><rect x="94.6334%" y="565" width="1.1338%" height="15" fill="rgb(239,112,37)" fg:x="1252" fg:w="15"/><text x="94.8834%" y="575.50"></text></g><g><title>block.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$&lt;time::error::format::Format&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;alloc::string::String,enum2$ (1 samples, 0.08%)</title><rect x="95.6916%" y="549" width="0.0756%" height="15" fill="rgb(210,96,50)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="559.50"></text></g><g><title>block.exe`time::date_time::DateTime&lt;enum2$&lt;time::date_time::offset_kind::Fixed&gt; &gt;::format&lt;enum2$&lt;time::date_time::offset_kind::Fixed&gt;,ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt; &gt;(time::date_time::DateTime&lt;enum2$&lt;time::date_time::offset_kind::Fixed&gt; &gt;, ref$&lt;slice2$&lt;enum2$ (1 samples, 0.08%)</title><rect x="95.6916%" y="533" width="0.0756%" height="15" fill="rgb(222,178,2)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="543.50"></text></g><g><title>block.exe`time::formatting::formattable::sealed::Sealed::format(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="95.6916%" y="517" width="0.0756%" height="15" fill="rgb(226,74,18)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="527.50"></text></g><g><title>block.exe`time::formatting::formattable::impl$12::format_into(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="95.6916%" y="501" width="0.0756%" height="15" fill="rgb(225,67,54)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="511.50"></text></g><g><title>block.exe`time::formatting::formattable::impl$9::format_into(ref$&lt;slice2$&lt;enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt; &gt; &gt;, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="95.6916%" y="485" width="0.0756%" height="15" fill="rgb(251,92,32)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="495.50"></text></g><g><title>block.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;usize,enum2$ (1 samples, 0.08%)</title><rect x="95.6916%" y="469" width="0.0756%" height="15" fill="rgb(228,149,22)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="479.50"></text></g><g><title>block.exe`time::formatting::formattable::impl$8::format_into&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(enum2$&lt;time::format_description::borrowed_format_item::BorrowedFormatItem&gt;*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="95.6916%" y="453" width="0.0756%" height="15" fill="rgb(243,54,13)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="463.50"></text></g><g><title>block.exe`time::formatting::format_component(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;time::format_description::component::Component&gt;, enum2$&lt;core::option::Option&lt;time::date::Date&gt; &gt;, enum2$&lt;core::option::Option&lt;time::time::Time&gt; &gt;, enum2$&lt;core::option::Option (1 samples, 0.08%)</title><rect x="95.6916%" y="437" width="0.0756%" height="15" fill="rgb(243,180,28)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="447.50"></text></g><g><title>block.exe`time::formatting::fmt_year(alloc::vec::Vec (1 samples, 0.08%)</title><rect x="95.6916%" y="421" width="0.0756%" height="15" fill="rgb(208,167,24)" fg:x="1266" fg:w="1"/><text x="95.9416%" y="431.50"></text></g><g><title>block.exe`std::sys::windows::stdio::is_console (2 samples, 0.15%)</title><rect x="95.7672%" y="245" width="0.1512%" height="15" fill="rgb(245,73,45)" fg:x="1267" fg:w="2"/><text x="96.0172%" y="255.50"></text></g><g><title>`0x7FFCAB47D743 (2 samples, 0.15%)</title><rect x="95.7672%" y="229" width="0.1512%" height="15" fill="rgb(237,203,48)" fg:x="1267" fg:w="2"/><text x="96.0172%" y="239.50"></text></g><g><title>`0x7FFCAB47D924 (2 samples, 0.15%)</title><rect x="95.7672%" y="213" width="0.1512%" height="15" fill="rgb(211,197,16)" fg:x="1267" fg:w="2"/><text x="96.0172%" y="223.50"></text></g><g><title>`0x7FFCAB47DA19 (2 samples, 0.15%)</title><rect x="95.7672%" y="197" width="0.1512%" height="15" fill="rgb(243,99,51)" fg:x="1267" fg:w="2"/><text x="96.0172%" y="207.50"></text></g><g><title>`0x7FFCAE12F454 (2 samples, 0.15%)</title><rect x="95.7672%" y="181" width="0.1512%" height="15" fill="rgb(215,123,29)" fg:x="1267" fg:w="2"/><text x="96.0172%" y="191.50"></text></g><g><title>`0x7FFCAB46F6C6 (1 samples, 0.08%)</title><rect x="95.9184%" y="229" width="0.0756%" height="15" fill="rgb(239,186,37)" fg:x="1269" fg:w="1"/><text x="96.1684%" y="239.50"></text></g><g><title>`0x7FFCAE0E54BC (1 samples, 0.08%)</title><rect x="95.9184%" y="213" width="0.0756%" height="15" fill="rgb(252,136,39)" fg:x="1269" fg:w="1"/><text x="96.1684%" y="223.50"></text></g><g><title>block.exe`core::ptr::drop_in_place (7 samples, 0.53%)</title><rect x="95.7672%" y="565" width="0.5291%" height="15" fill="rgb(223,213,32)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="575.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::vec::Vec (7 samples, 0.53%)</title><rect x="95.7672%" y="549" width="0.5291%" height="15" fill="rgb(233,115,5)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="559.50"></text></g><g><title>block.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (7 samples, 0.53%)</title><rect x="95.7672%" y="533" width="0.5291%" height="15" fill="rgb(207,226,44)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="543.50"></text></g><g><title>block.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (7 samples, 0.53%)</title><rect x="95.7672%" y="517" width="0.5291%" height="15" fill="rgb(208,126,0)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="527.50"></text></g><g><title>block.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (7 samples, 0.53%)</title><rect x="95.7672%" y="501" width="0.5291%" height="15" fill="rgb(244,66,21)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="511.50"></text></g><g><title>block.exe`std::io::stdio::_print (7 samples, 0.53%)</title><rect x="95.7672%" y="485" width="0.5291%" height="15" fill="rgb(222,97,12)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="495.50"></text></g><g><title>block.exe`std::io::stdio::print_to (7 samples, 0.53%)</title><rect x="95.7672%" y="469" width="0.5291%" height="15" fill="rgb(219,213,19)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="479.50"></text></g><g><title>block.exe`std::io::stdio::impl$11::write_fmt (7 samples, 0.53%)</title><rect x="95.7672%" y="453" width="0.5291%" height="15" fill="rgb(252,169,30)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="463.50"></text></g><g><title>block.exe`std::io::stdio::impl$12::write_fmt (7 samples, 0.53%)</title><rect x="95.7672%" y="437" width="0.5291%" height="15" fill="rgb(206,32,51)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="447.50"></text></g><g><title>block.exe`std::io::Write::write_fmt (7 samples, 0.53%)</title><rect x="95.7672%" y="421" width="0.5291%" height="15" fill="rgb(250,172,42)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="431.50"></text></g><g><title>block.exe`core::fmt::write (7 samples, 0.53%)</title><rect x="95.7672%" y="405" width="0.5291%" height="15" fill="rgb(209,34,43)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="415.50"></text></g><g><title>block.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (7 samples, 0.53%)</title><rect x="95.7672%" y="389" width="0.5291%" height="15" fill="rgb(223,11,35)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="399.50"></text></g><g><title>block.exe`std::io::stdio::impl$13::write_all (7 samples, 0.53%)</title><rect x="95.7672%" y="373" width="0.5291%" height="15" fill="rgb(251,219,26)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="383.50"></text></g><g><title>block.exe`core::cell::RefCell::borrow_mut (7 samples, 0.53%)</title><rect x="95.7672%" y="357" width="0.5291%" height="15" fill="rgb(231,119,3)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="367.50"></text></g><g><title>block.exe`std::io::buffered::linewritershim::impl$1::write_all (7 samples, 0.53%)</title><rect x="95.7672%" y="341" width="0.5291%" height="15" fill="rgb(216,97,11)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="351.50"></text></g><g><title>block.exe`core::result::impl$26::branch (7 samples, 0.53%)</title><rect x="95.7672%" y="325" width="0.5291%" height="15" fill="rgb(223,59,9)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="335.50"></text></g><g><title>block.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (7 samples, 0.53%)</title><rect x="95.7672%" y="309" width="0.5291%" height="15" fill="rgb(233,93,31)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="319.50"></text></g><g><title>block.exe`std::io::stdio::impl$1::write (7 samples, 0.53%)</title><rect x="95.7672%" y="293" width="0.5291%" height="15" fill="rgb(239,81,33)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="303.50"></text></g><g><title>block.exe`std::io::stdio::handle_ebadf (7 samples, 0.53%)</title><rect x="95.7672%" y="277" width="0.5291%" height="15" fill="rgb(213,120,34)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="287.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write (7 samples, 0.53%)</title><rect x="95.7672%" y="261" width="0.5291%" height="15" fill="rgb(243,49,53)" fg:x="1267" fg:w="7"/><text x="96.0172%" y="271.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_valid_utf8_to_console (5 samples, 0.38%)</title><rect x="95.9184%" y="245" width="0.3779%" height="15" fill="rgb(247,216,33)" fg:x="1269" fg:w="5"/><text x="96.1684%" y="255.50"></text></g><g><title>block.exe`std::sys::windows::stdio::write_u16s (4 samples, 0.30%)</title><rect x="95.9940%" y="229" width="0.3023%" height="15" fill="rgb(226,26,14)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="239.50"></text></g><g><title>block.exe`std::sys::windows::cvt (4 samples, 0.30%)</title><rect x="95.9940%" y="213" width="0.3023%" height="15" fill="rgb(215,49,53)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="223.50"></text></g><g><title>block.exe`std::sys::windows::impl$3::is_zero (4 samples, 0.30%)</title><rect x="95.9940%" y="197" width="0.3023%" height="15" fill="rgb(245,162,40)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="207.50"></text></g><g><title>`0x7FFCAB47D64E (4 samples, 0.30%)</title><rect x="95.9940%" y="181" width="0.3023%" height="15" fill="rgb(229,68,17)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="191.50"></text></g><g><title>`0x7FFCAB47D6E3 (4 samples, 0.30%)</title><rect x="95.9940%" y="165" width="0.3023%" height="15" fill="rgb(213,182,10)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="175.50"></text></g><g><title>`0x7FFCAB47DA19 (4 samples, 0.30%)</title><rect x="95.9940%" y="149" width="0.3023%" height="15" fill="rgb(245,125,30)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="159.50"></text></g><g><title>`0x7FFCAE12F454 (4 samples, 0.30%)</title><rect x="95.9940%" y="133" width="0.3023%" height="15" fill="rgb(232,202,2)" fg:x="1270" fg:w="4"/><text x="96.2440%" y="143.50"></text></g><g><title>`0x7FFCAB4A7F30 (1 samples, 0.08%)</title><rect x="96.2963%" y="453" width="0.0756%" height="15" fill="rgb(237,140,51)" fg:x="1274" fg:w="1"/><text x="96.5463%" y="463.50"></text></g><g><title>`0x7FFCAE0EAA58 (1,268 samples, 95.84%)</title><rect x="0.6047%" y="853" width="95.8428%" height="15" fill="rgb(236,157,25)" fg:x="8" fg:w="1268"/><text x="0.8547%" y="863.50">`0x7FFCAE0EAA58</text></g><g><title>`0x7FFCACFC257D (1,268 samples, 95.84%)</title><rect x="0.6047%" y="837" width="95.8428%" height="15" fill="rgb(219,209,0)" fg:x="8" fg:w="1268"/><text x="0.8547%" y="847.50">`0x7FFCACFC257D</text></g><g><title>block.exe`__scrt_common_main_seh() (1,260 samples, 95.24%)</title><rect x="1.2094%" y="821" width="95.2381%" height="15" fill="rgb(240,116,54)" fg:x="16" fg:w="1260"/><text x="1.4594%" y="831.50">block.exe`__scrt_common_main_seh()</text></g><g><title>block.exe`invoke_main() (1,248 samples, 94.33%)</title><rect x="2.1164%" y="805" width="94.3311%" height="15" fill="rgb(216,10,36)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="815.50">block.exe`invoke_main()</text></g><g><title>block.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*) (1,248 samples, 94.33%)</title><rect x="2.1164%" y="789" width="94.3311%" height="15" fill="rgb(222,72,44)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="799.50">block.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>block.exe`std::rt::lang_start_internal (1,248 samples, 94.33%)</title><rect x="2.1164%" y="773" width="94.3311%" height="15" fill="rgb(232,159,9)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="783.50">block.exe`std::rt::lang_start_internal</text></g><g><title>block.exe`std::panic::catch_unwind (1,248 samples, 94.33%)</title><rect x="2.1164%" y="757" width="94.3311%" height="15" fill="rgb(210,39,32)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="767.50">block.exe`std::panic::catch_unwind</text></g><g><title>block.exe`std::panicking::try (1,248 samples, 94.33%)</title><rect x="2.1164%" y="741" width="94.3311%" height="15" fill="rgb(216,194,45)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="751.50">block.exe`std::panicking::try</text></g><g><title>block.exe`std::panicking::try::do_call (1,248 samples, 94.33%)</title><rect x="2.1164%" y="725" width="94.3311%" height="15" fill="rgb(218,18,35)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="735.50">block.exe`std::panicking::try::do_call</text></g><g><title>block.exe`core::ops::function::FnOnce::call_once (1,248 samples, 94.33%)</title><rect x="2.1164%" y="709" width="94.3311%" height="15" fill="rgb(207,83,51)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="719.50">block.exe`core::ops::function::FnOnce::call_once</text></g><g><title>block.exe`std::rt::cleanup (1,248 samples, 94.33%)</title><rect x="2.1164%" y="693" width="94.3311%" height="15" fill="rgb(225,63,43)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="703.50">block.exe`std::rt::cleanup</text></g><g><title>block.exe`std::sync::once::Once::call_once (1,248 samples, 94.33%)</title><rect x="2.1164%" y="677" width="94.3311%" height="15" fill="rgb(207,57,36)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="687.50">block.exe`std::sync::once::Once::call_once</text></g><g><title>block.exe`std::sys_common::once::queue::Once::is_completed (1,248 samples, 94.33%)</title><rect x="2.1164%" y="661" width="94.3311%" height="15" fill="rgb(216,99,33)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="671.50">block.exe`std::sys_common::once::queue::Once::is_completed</text></g><g><title>block.exe`core::sync::atomic::AtomicPtr::load (1,248 samples, 94.33%)</title><rect x="2.1164%" y="645" width="94.3311%" height="15" fill="rgb(225,42,16)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="655.50">block.exe`core::sync::atomic::AtomicPtr::load</text></g><g><title>block.exe`core::sync::atomic::atomic_load (1,248 samples, 94.33%)</title><rect x="2.1164%" y="629" width="94.3311%" height="15" fill="rgb(220,201,45)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="639.50">block.exe`core::sync::atomic::atomic_load</text></g><g><title>block.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,248 samples, 94.33%)</title><rect x="2.1164%" y="613" width="94.3311%" height="15" fill="rgb(225,33,4)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="623.50">block.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>block.exe`block::main (1,248 samples, 94.33%)</title><rect x="2.1164%" y="597" width="94.3311%" height="15" fill="rgb(224,33,50)" fg:x="28" fg:w="1248"/><text x="2.3664%" y="607.50">block.exe`block::main</text></g><g><title>block.exe`simple_logger::impl$2::log (9 samples, 0.68%)</title><rect x="95.7672%" y="581" width="0.6803%" height="15" fill="rgb(246,198,51)" fg:x="1267" fg:w="9"/><text x="96.0172%" y="591.50"></text></g><g><title>block.exe`time::offset_date_time::OffsetDateTime::now_utc (2 samples, 0.15%)</title><rect x="96.2963%" y="565" width="0.1512%" height="15" fill="rgb(205,22,4)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="575.50"></text></g><g><title>block.exe`time::date_time::DateTime&lt;enum2$&lt;time::date_time::offset_kind::Fixed&gt; &gt;::now_utc (2 samples, 0.15%)</title><rect x="96.2963%" y="549" width="0.1512%" height="15" fill="rgb(206,3,8)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="559.50"></text></g><g><title>block.exe`core::convert::impl$3::into (2 samples, 0.15%)</title><rect x="96.2963%" y="533" width="0.1512%" height="15" fill="rgb(251,23,15)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="543.50"></text></g><g><title>block.exe`time::date_time::impl$32::from (2 samples, 0.15%)</title><rect x="96.2963%" y="517" width="0.1512%" height="15" fill="rgb(252,88,28)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="527.50"></text></g><g><title>block.exe`std::time::SystemTime::duration_since (2 samples, 0.15%)</title><rect x="96.2963%" y="501" width="0.1512%" height="15" fill="rgb(212,127,14)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="511.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::sub_time (2 samples, 0.15%)</title><rect x="96.2963%" y="485" width="0.1512%" height="15" fill="rgb(247,145,37)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="495.50"></text></g><g><title>block.exe`std::sys::windows::time::SystemTime::intervals (2 samples, 0.15%)</title><rect x="96.2963%" y="469" width="0.1512%" height="15" fill="rgb(209,117,53)" fg:x="1274" fg:w="2"/><text x="96.5463%" y="479.50"></text></g><g><title>`0x7FFCAB4A7F40 (1 samples, 0.08%)</title><rect x="96.3719%" y="453" width="0.0756%" height="15" fill="rgb(212,90,42)" fg:x="1275" fg:w="1"/><text x="96.6219%" y="463.50"></text></g><g><title>`0x7FFCAE0A0400 (1 samples, 0.08%)</title><rect x="96.3719%" y="437" width="0.0756%" height="15" fill="rgb(218,164,37)" fg:x="1275" fg:w="1"/><text x="96.6219%" y="447.50"></text></g><g><title>`0x7FFCAE103DD0 (1 samples, 0.08%)</title><rect x="96.4475%" y="853" width="0.0756%" height="15" fill="rgb(246,65,34)" fg:x="1276" fg:w="1"/><text x="96.6975%" y="863.50"></text></g><g><title>`0x7FFCAE103E3D (1 samples, 0.08%)</title><rect x="96.5231%" y="837" width="0.0756%" height="15" fill="rgb(231,100,33)" fg:x="1277" fg:w="1"/><text x="96.7731%" y="847.50"></text></g><g><title>`0x7FFCAE13DBFC (1 samples, 0.08%)</title><rect x="96.5231%" y="821" width="0.0756%" height="15" fill="rgb(228,126,14)" fg:x="1277" fg:w="1"/><text x="96.7731%" y="831.50"></text></g><g><title>`0x7FFCAE16CE0D (1 samples, 0.08%)</title><rect x="96.5986%" y="805" width="0.0756%" height="15" fill="rgb(215,173,21)" fg:x="1278" fg:w="1"/><text x="96.8486%" y="815.50"></text></g><g><title>`0x7FFCAE16CCC5 (1 samples, 0.08%)</title><rect x="96.5986%" y="789" width="0.0756%" height="15" fill="rgb(210,6,40)" fg:x="1278" fg:w="1"/><text x="96.8486%" y="799.50"></text></g><g><title>`0x7FFCAE13E3E3 (1 samples, 0.08%)</title><rect x="96.5986%" y="773" width="0.0756%" height="15" fill="rgb(212,48,18)" fg:x="1278" fg:w="1"/><text x="96.8486%" y="783.50"></text></g><g><title>`0x7FFCAE131364 (1 samples, 0.08%)</title><rect x="96.5986%" y="757" width="0.0756%" height="15" fill="rgb(230,214,11)" fg:x="1278" fg:w="1"/><text x="96.8486%" y="767.50"></text></g><g><title>`0x7FFCAE16CFEA (1 samples, 0.08%)</title><rect x="96.6742%" y="805" width="0.0756%" height="15" fill="rgb(254,105,39)" fg:x="1279" fg:w="1"/><text x="96.9242%" y="815.50"></text></g><g><title>`0x7FFCAE13DD90 (1 samples, 0.08%)</title><rect x="96.6742%" y="789" width="0.0756%" height="15" fill="rgb(245,158,5)" fg:x="1279" fg:w="1"/><text x="96.9242%" y="799.50"></text></g><g><title>`0x7FFCAE12F7D4 (1 samples, 0.08%)</title><rect x="96.6742%" y="773" width="0.0756%" height="15" fill="rgb(249,208,11)" fg:x="1279" fg:w="1"/><text x="96.9242%" y="783.50"></text></g><g><title>`0x7FFCAE16D582 (1 samples, 0.08%)</title><rect x="96.7498%" y="805" width="0.0756%" height="15" fill="rgb(210,39,28)" fg:x="1280" fg:w="1"/><text x="96.9998%" y="815.50"></text></g><g><title>`0x7FFCAE13EC0A (1 samples, 0.08%)</title><rect x="96.7498%" y="789" width="0.0756%" height="15" fill="rgb(211,56,53)" fg:x="1280" fg:w="1"/><text x="96.9998%" y="799.50"></text></g><g><title>`0x7FFCAE13F65E (1 samples, 0.08%)</title><rect x="96.7498%" y="773" width="0.0756%" height="15" fill="rgb(226,201,30)" fg:x="1280" fg:w="1"/><text x="96.9998%" y="783.50"></text></g><g><title>`0x7FFCAE0D5076 (1 samples, 0.08%)</title><rect x="96.7498%" y="757" width="0.0756%" height="15" fill="rgb(239,101,34)" fg:x="1280" fg:w="1"/><text x="96.9998%" y="767.50"></text></g><g><title>`0x7FFCAE0D17C3 (1 samples, 0.08%)</title><rect x="96.7498%" y="741" width="0.0756%" height="15" fill="rgb(226,209,5)" fg:x="1280" fg:w="1"/><text x="96.9998%" y="751.50"></text></g><g><title>`0x7FFCAE16D719 (1 samples, 0.08%)</title><rect x="96.8254%" y="805" width="0.0756%" height="15" fill="rgb(250,105,47)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="815.50"></text></g><g><title>`0x7FFCAE10F5FA (1 samples, 0.08%)</title><rect x="96.8254%" y="789" width="0.0756%" height="15" fill="rgb(230,72,3)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="799.50"></text></g><g><title>`0x7FFCAE0C14E0 (1 samples, 0.08%)</title><rect x="96.8254%" y="773" width="0.0756%" height="15" fill="rgb(232,218,39)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="783.50"></text></g><g><title>`0x7FFCAE0C21CA (1 samples, 0.08%)</title><rect x="96.8254%" y="757" width="0.0756%" height="15" fill="rgb(248,166,6)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="767.50"></text></g><g><title>`0x7FFCAE0C2057 (1 samples, 0.08%)</title><rect x="96.8254%" y="741" width="0.0756%" height="15" fill="rgb(247,89,20)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="751.50"></text></g><g><title>`0x7FFCAE132DC4 (1 samples, 0.08%)</title><rect x="96.8254%" y="725" width="0.0756%" height="15" fill="rgb(248,130,54)" fg:x="1281" fg:w="1"/><text x="97.0754%" y="735.50"></text></g><g><title>`0x7FFCAE16D791 (1 samples, 0.08%)</title><rect x="96.9010%" y="805" width="0.0756%" height="15" fill="rgb(234,196,4)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="815.50"></text></g><g><title>`0x7FFCAE0E812A (1 samples, 0.08%)</title><rect x="96.9010%" y="789" width="0.0756%" height="15" fill="rgb(250,143,31)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="799.50"></text></g><g><title>`0x7FFCAE0E87EF (1 samples, 0.08%)</title><rect x="96.9010%" y="773" width="0.0756%" height="15" fill="rgb(211,110,34)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="783.50"></text></g><g><title>`0x7FFCAE0E8894 (1 samples, 0.08%)</title><rect x="96.9010%" y="757" width="0.0756%" height="15" fill="rgb(215,124,48)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="767.50"></text></g><g><title>`0x7FFCAE0AE888 (1 samples, 0.08%)</title><rect x="96.9010%" y="741" width="0.0756%" height="15" fill="rgb(216,46,13)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="751.50"></text></g><g><title>`0x7FFCAE0E8371 (1 samples, 0.08%)</title><rect x="96.9010%" y="725" width="0.0756%" height="15" fill="rgb(205,184,25)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="735.50"></text></g><g><title>`0x7FFCAE0E845F (1 samples, 0.08%)</title><rect x="96.9010%" y="709" width="0.0756%" height="15" fill="rgb(228,1,10)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="719.50"></text></g><g><title>`0x7FFCAE0CCD59 (1 samples, 0.08%)</title><rect x="96.9010%" y="693" width="0.0756%" height="15" fill="rgb(213,116,27)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="703.50"></text></g><g><title>`0x7FFCAE0CFA38 (1 samples, 0.08%)</title><rect x="96.9010%" y="677" width="0.0756%" height="15" fill="rgb(241,95,50)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="687.50"></text></g><g><title>`0x7FFCAE0D9FDB (1 samples, 0.08%)</title><rect x="96.9010%" y="661" width="0.0756%" height="15" fill="rgb(238,48,32)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="671.50"></text></g><g><title>`0x7FFCAE0D94F8 (1 samples, 0.08%)</title><rect x="96.9010%" y="645" width="0.0756%" height="15" fill="rgb(235,113,49)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="655.50"></text></g><g><title>`0x7FFCAE0DA15F (1 samples, 0.08%)</title><rect x="96.9010%" y="629" width="0.0756%" height="15" fill="rgb(205,127,43)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="639.50"></text></g><g><title>`0x7FFCAE0D73BF (1 samples, 0.08%)</title><rect x="96.9010%" y="613" width="0.0756%" height="15" fill="rgb(250,162,2)" fg:x="1282" fg:w="1"/><text x="97.1510%" y="623.50"></text></g><g><title>`0x7FFCAE16D7A7 (1 samples, 0.08%)</title><rect x="96.9766%" y="805" width="0.0756%" height="15" fill="rgb(220,13,41)" fg:x="1283" fg:w="1"/><text x="97.2266%" y="815.50"></text></g><g><title>`0x7FFCAE10FFED (1 samples, 0.08%)</title><rect x="96.9766%" y="789" width="0.0756%" height="15" fill="rgb(249,221,25)" fg:x="1283" fg:w="1"/><text x="97.2266%" y="799.50"></text></g><g><title>`0x7FFCAE12F734 (1 samples, 0.08%)</title><rect x="96.9766%" y="773" width="0.0756%" height="15" fill="rgb(215,208,19)" fg:x="1283" fg:w="1"/><text x="97.2266%" y="783.50"></text></g><g><title>`0x7FFCAE16E14A (1 samples, 0.08%)</title><rect x="97.0522%" y="805" width="0.0756%" height="15" fill="rgb(236,175,2)" fg:x="1284" fg:w="1"/><text x="97.3022%" y="815.50"></text></g><g><title>`0x7FFCAE10B868 (1 samples, 0.08%)</title><rect x="97.0522%" y="789" width="0.0756%" height="15" fill="rgb(241,52,2)" fg:x="1284" fg:w="1"/><text x="97.3022%" y="799.50"></text></g><g><title>`0x7FFCAE10B93C (1 samples, 0.08%)</title><rect x="97.0522%" y="773" width="0.0756%" height="15" fill="rgb(248,140,14)" fg:x="1284" fg:w="1"/><text x="97.3022%" y="783.50"></text></g><g><title>`0x7FFCAE12F9D4 (1 samples, 0.08%)</title><rect x="97.0522%" y="757" width="0.0756%" height="15" fill="rgb(253,22,42)" fg:x="1284" fg:w="1"/><text x="97.3022%" y="767.50"></text></g><g><title>`0x7FFCAE0BC254 (2 samples, 0.15%)</title><rect x="97.1277%" y="709" width="0.1512%" height="15" fill="rgb(234,61,47)" fg:x="1285" fg:w="2"/><text x="97.3777%" y="719.50"></text></g><g><title>`0x7FFCAE0BC0CA (2 samples, 0.15%)</title><rect x="97.1277%" y="693" width="0.1512%" height="15" fill="rgb(208,226,15)" fg:x="1285" fg:w="2"/><text x="97.3777%" y="703.50"></text></g><g><title>`0x7FFCAE0BC4CC (2 samples, 0.15%)</title><rect x="97.1277%" y="677" width="0.1512%" height="15" fill="rgb(217,221,4)" fg:x="1285" fg:w="2"/><text x="97.3777%" y="687.50"></text></g><g><title>`0x7FFCAE12F874 (2 samples, 0.15%)</title><rect x="97.1277%" y="661" width="0.1512%" height="15" fill="rgb(212,174,34)" fg:x="1285" fg:w="2"/><text x="97.3777%" y="671.50"></text></g><g><title>`0x7FFCAE0BC254 (1 samples, 0.08%)</title><rect x="97.2789%" y="629" width="0.0756%" height="15" fill="rgb(253,83,4)" fg:x="1287" fg:w="1"/><text x="97.5289%" y="639.50"></text></g><g><title>`0x7FFCAE0BC0CA (1 samples, 0.08%)</title><rect x="97.2789%" y="613" width="0.0756%" height="15" fill="rgb(250,195,49)" fg:x="1287" fg:w="1"/><text x="97.5289%" y="623.50"></text></g><g><title>`0x7FFCAE0BC4CC (1 samples, 0.08%)</title><rect x="97.2789%" y="597" width="0.0756%" height="15" fill="rgb(241,192,25)" fg:x="1287" fg:w="1"/><text x="97.5289%" y="607.50"></text></g><g><title>`0x7FFCAE12F874 (1 samples, 0.08%)</title><rect x="97.2789%" y="581" width="0.0756%" height="15" fill="rgb(208,124,10)" fg:x="1287" fg:w="1"/><text x="97.5289%" y="591.50"></text></g><g><title>`0x7FFCAE0B46BB (2 samples, 0.15%)</title><rect x="97.2789%" y="693" width="0.1512%" height="15" fill="rgb(222,33,0)" fg:x="1287" fg:w="2"/><text x="97.5289%" y="703.50"></text></g><g><title>`0x7FFCAE0B4906 (2 samples, 0.15%)</title><rect x="97.2789%" y="677" width="0.1512%" height="15" fill="rgb(234,209,28)" fg:x="1287" fg:w="2"/><text x="97.5289%" y="687.50"></text></g><g><title>`0x7FFCAE0B58C4 (2 samples, 0.15%)</title><rect x="97.2789%" y="661" width="0.1512%" height="15" fill="rgb(224,11,23)" fg:x="1287" fg:w="2"/><text x="97.5289%" y="671.50"></text></g><g><title>`0x7FFCAE0BCE29 (2 samples, 0.15%)</title><rect x="97.2789%" y="645" width="0.1512%" height="15" fill="rgb(232,99,1)" fg:x="1287" fg:w="2"/><text x="97.5289%" y="655.50"></text></g><g><title>`0x7FFCAE0BC3F8 (1 samples, 0.08%)</title><rect x="97.3545%" y="629" width="0.0756%" height="15" fill="rgb(237,95,45)" fg:x="1288" fg:w="1"/><text x="97.6045%" y="639.50"></text></g><g><title>`0x7FFCAE0B4541 (1 samples, 0.08%)</title><rect x="97.3545%" y="613" width="0.0756%" height="15" fill="rgb(208,109,11)" fg:x="1288" fg:w="1"/><text x="97.6045%" y="623.50"></text></g><g><title>`0x7FFCAE0BADAC (1 samples, 0.08%)</title><rect x="97.3545%" y="597" width="0.0756%" height="15" fill="rgb(216,190,48)" fg:x="1288" fg:w="1"/><text x="97.6045%" y="607.50"></text></g><g><title>`0x7FFCAE0B3C57 (1 samples, 0.08%)</title><rect x="97.4301%" y="677" width="0.0756%" height="15" fill="rgb(251,171,36)" fg:x="1289" fg:w="1"/><text x="97.6801%" y="687.50"></text></g><g><title>`0x7FFCAE0B88B6 (6 samples, 0.45%)</title><rect x="97.1277%" y="757" width="0.4535%" height="15" fill="rgb(230,62,22)" fg:x="1285" fg:w="6"/><text x="97.3777%" y="767.50"></text></g><g><title>`0x7FFCAE0BDDA9 (6 samples, 0.45%)</title><rect x="97.1277%" y="741" width="0.4535%" height="15" fill="rgb(225,114,35)" fg:x="1285" fg:w="6"/><text x="97.3777%" y="751.50"></text></g><g><title>`0x7FFCAE0BCE29 (6 samples, 0.45%)</title><rect x="97.1277%" y="725" width="0.4535%" height="15" fill="rgb(215,118,42)" fg:x="1285" fg:w="6"/><text x="97.3777%" y="735.50"></text></g><g><title>`0x7FFCAE0BC3F8 (4 samples, 0.30%)</title><rect x="97.2789%" y="709" width="0.3023%" height="15" fill="rgb(243,119,21)" fg:x="1287" fg:w="4"/><text x="97.5289%" y="719.50"></text></g><g><title>`0x7FFCAE0B4774 (2 samples, 0.15%)</title><rect x="97.4301%" y="693" width="0.1512%" height="15" fill="rgb(252,177,53)" fg:x="1289" fg:w="2"/><text x="97.6801%" y="703.50"></text></g><g><title>`0x7FFCAE0B3C6F (1 samples, 0.08%)</title><rect x="97.5057%" y="677" width="0.0756%" height="15" fill="rgb(237,209,29)" fg:x="1290" fg:w="1"/><text x="97.7557%" y="687.50"></text></g><g><title>`0x7FFCAE0B88E0 (1 samples, 0.08%)</title><rect x="97.5813%" y="757" width="0.0756%" height="15" fill="rgb(212,65,23)" fg:x="1291" fg:w="1"/><text x="97.8313%" y="767.50"></text></g><g><title>`0x7FFCAE0BA0A0 (1 samples, 0.08%)</title><rect x="97.5813%" y="741" width="0.0756%" height="15" fill="rgb(230,222,46)" fg:x="1291" fg:w="1"/><text x="97.8313%" y="751.50"></text></g><g><title>`0x7FFCAE0A0E8B (1 samples, 0.08%)</title><rect x="97.5813%" y="725" width="0.0756%" height="15" fill="rgb(215,135,32)" fg:x="1291" fg:w="1"/><text x="97.8313%" y="735.50"></text></g><g><title>`0x7FFCAE0B3BDF (1 samples, 0.08%)</title><rect x="97.5813%" y="709" width="0.0756%" height="15" fill="rgb(246,101,22)" fg:x="1291" fg:w="1"/><text x="97.8313%" y="719.50"></text></g><g><title>`0x7FFCAE0DAD9D (1 samples, 0.08%)</title><rect x="97.6568%" y="597" width="0.0756%" height="15" fill="rgb(206,107,13)" fg:x="1292" fg:w="1"/><text x="97.9068%" y="607.50"></text></g><g><title>`0x7FFCAE1307A4 (1 samples, 0.08%)</title><rect x="97.6568%" y="581" width="0.0756%" height="15" fill="rgb(250,100,44)" fg:x="1292" fg:w="1"/><text x="97.9068%" y="591.50"></text></g><g><title>`0x7FFCAB47CA03 (2 samples, 0.15%)</title><rect x="97.6568%" y="645" width="0.1512%" height="15" fill="rgb(231,147,38)" fg:x="1292" fg:w="2"/><text x="97.9068%" y="655.50"></text></g><g><title>`0x7FFCAB47C322 (2 samples, 0.15%)</title><rect x="97.6568%" y="629" width="0.1512%" height="15" fill="rgb(229,8,40)" fg:x="1292" fg:w="2"/><text x="97.9068%" y="639.50"></text></g><g><title>`0x7FFCAE0DAFE2 (2 samples, 0.15%)</title><rect x="97.6568%" y="613" width="0.1512%" height="15" fill="rgb(221,135,30)" fg:x="1292" fg:w="2"/><text x="97.9068%" y="623.50"></text></g><g><title>`0x7FFCAE0DAEC4 (1 samples, 0.08%)</title><rect x="97.7324%" y="597" width="0.0756%" height="15" fill="rgb(249,193,18)" fg:x="1293" fg:w="1"/><text x="97.9824%" y="607.50"></text></g><g><title>`0x7FFCAE0D8336 (1 samples, 0.08%)</title><rect x="97.7324%" y="581" width="0.0756%" height="15" fill="rgb(209,133,39)" fg:x="1293" fg:w="1"/><text x="97.9824%" y="591.50"></text></g><g><title>`0x7FFCAE0EC9C9 (1 samples, 0.08%)</title><rect x="97.7324%" y="565" width="0.0756%" height="15" fill="rgb(232,100,14)" fg:x="1293" fg:w="1"/><text x="97.9824%" y="575.50"></text></g><g><title>`0x7FFCAE0EC6FA (1 samples, 0.08%)</title><rect x="97.7324%" y="549" width="0.0756%" height="15" fill="rgb(224,185,1)" fg:x="1293" fg:w="1"/><text x="97.9824%" y="559.50"></text></g><g><title>`0x7FFCAB47CC1B (1 samples, 0.08%)</title><rect x="97.8080%" y="645" width="0.0756%" height="15" fill="rgb(223,139,8)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="655.50"></text></g><g><title>`0x7FFCAB47BF3C (1 samples, 0.08%)</title><rect x="97.8080%" y="629" width="0.0756%" height="15" fill="rgb(232,213,38)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="639.50"></text></g><g><title>`0x7FFCAB47B9E8 (1 samples, 0.08%)</title><rect x="97.8080%" y="613" width="0.0756%" height="15" fill="rgb(207,94,22)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="623.50"></text></g><g><title>`0x7FFCAB47BB72 (1 samples, 0.08%)</title><rect x="97.8080%" y="597" width="0.0756%" height="15" fill="rgb(219,183,54)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="607.50"></text></g><g><title>`0x7FFCAB47BC92 (1 samples, 0.08%)</title><rect x="97.8080%" y="581" width="0.0756%" height="15" fill="rgb(216,185,54)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="591.50"></text></g><g><title>`0x7FFCAE131364 (1 samples, 0.08%)</title><rect x="97.8080%" y="565" width="0.0756%" height="15" fill="rgb(254,217,39)" fg:x="1294" fg:w="1"/><text x="98.0580%" y="575.50"></text></g><g><title>`0x7FFCAB47C68D (4 samples, 0.30%)</title><rect x="97.6568%" y="661" width="0.3023%" height="15" fill="rgb(240,178,23)" fg:x="1292" fg:w="4"/><text x="97.9068%" y="671.50"></text></g><g><title>`0x7FFCAB47CC68 (1 samples, 0.08%)</title><rect x="97.8836%" y="645" width="0.0756%" height="15" fill="rgb(218,11,47)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="655.50"></text></g><g><title>`0x7FFCAB4BBC50 (1 samples, 0.08%)</title><rect x="97.8836%" y="629" width="0.0756%" height="15" fill="rgb(218,51,51)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="639.50"></text></g><g><title>`0x7FFCAE0C14E0 (1 samples, 0.08%)</title><rect x="97.8836%" y="613" width="0.0756%" height="15" fill="rgb(238,126,27)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="623.50"></text></g><g><title>`0x7FFCAE0C21CA (1 samples, 0.08%)</title><rect x="97.8836%" y="597" width="0.0756%" height="15" fill="rgb(249,202,22)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="607.50"></text></g><g><title>`0x7FFCAE0C2057 (1 samples, 0.08%)</title><rect x="97.8836%" y="581" width="0.0756%" height="15" fill="rgb(254,195,49)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="591.50"></text></g><g><title>`0x7FFCAE132DC4 (1 samples, 0.08%)</title><rect x="97.8836%" y="565" width="0.0756%" height="15" fill="rgb(208,123,14)" fg:x="1295" fg:w="1"/><text x="98.1336%" y="575.50"></text></g><g><title>`0x7FFCAB47C763 (1 samples, 0.08%)</title><rect x="97.9592%" y="661" width="0.0756%" height="15" fill="rgb(224,200,8)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="671.50"></text></g><g><title>`0x7FFCAB47D413 (1 samples, 0.08%)</title><rect x="97.9592%" y="645" width="0.0756%" height="15" fill="rgb(217,61,36)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="655.50"></text></g><g><title>`0x7FFCAB47C2CA (1 samples, 0.08%)</title><rect x="97.9592%" y="629" width="0.0756%" height="15" fill="rgb(206,35,45)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="639.50"></text></g><g><title>`0x7FFCAB450C66 (1 samples, 0.08%)</title><rect x="97.9592%" y="613" width="0.0756%" height="15" fill="rgb(217,65,33)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="623.50"></text></g><g><title>`0x7FFCAB450A7B (1 samples, 0.08%)</title><rect x="97.9592%" y="597" width="0.0756%" height="15" fill="rgb(222,158,48)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="607.50"></text></g><g><title>`0x7FFCAB47C492 (1 samples, 0.08%)</title><rect x="97.9592%" y="581" width="0.0756%" height="15" fill="rgb(254,2,54)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="591.50"></text></g><g><title>`0x7FFCAB47FAC7 (1 samples, 0.08%)</title><rect x="97.9592%" y="565" width="0.0756%" height="15" fill="rgb(250,143,38)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="575.50"></text></g><g><title>`0x7FFCAB47FDA2 (1 samples, 0.08%)</title><rect x="97.9592%" y="549" width="0.0756%" height="15" fill="rgb(248,25,0)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="559.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="97.9592%" y="533" width="0.0756%" height="15" fill="rgb(206,152,27)" fg:x="1296" fg:w="1"/><text x="98.2092%" y="543.50"></text></g><g><title>`0x7FFCAE16E5BF (13 samples, 0.98%)</title><rect x="97.1277%" y="805" width="0.9826%" height="15" fill="rgb(240,77,30)" fg:x="1285" fg:w="13"/><text x="97.3777%" y="815.50"></text></g><g><title>`0x7FFCAE0BA25A (13 samples, 0.98%)</title><rect x="97.1277%" y="789" width="0.9826%" height="15" fill="rgb(231,5,3)" fg:x="1285" fg:w="13"/><text x="97.3777%" y="799.50"></text></g><g><title>`0x7FFCAE0A8CAC (13 samples, 0.98%)</title><rect x="97.1277%" y="773" width="0.9826%" height="15" fill="rgb(207,226,32)" fg:x="1285" fg:w="13"/><text x="97.3777%" y="783.50"></text></g><g><title>`0x7FFCAE0B8940 (6 samples, 0.45%)</title><rect x="97.6568%" y="757" width="0.4535%" height="15" fill="rgb(222,207,47)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="767.50"></text></g><g><title>`0x7FFCAE0BD62D (6 samples, 0.45%)</title><rect x="97.6568%" y="741" width="0.4535%" height="15" fill="rgb(229,115,45)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="751.50"></text></g><g><title>`0x7FFCAE0FCE70 (6 samples, 0.45%)</title><rect x="97.6568%" y="725" width="0.4535%" height="15" fill="rgb(224,191,6)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="735.50"></text></g><g><title>`0x7FFCAE0FCDFE (6 samples, 0.45%)</title><rect x="97.6568%" y="709" width="0.4535%" height="15" fill="rgb(230,227,24)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="719.50"></text></g><g><title>`0x7FFCAE0FD04D (6 samples, 0.45%)</title><rect x="97.6568%" y="693" width="0.4535%" height="15" fill="rgb(228,80,19)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="703.50"></text></g><g><title>`0x7FFCAE0B869F (6 samples, 0.45%)</title><rect x="97.6568%" y="677" width="0.4535%" height="15" fill="rgb(247,229,0)" fg:x="1292" fg:w="6"/><text x="97.9068%" y="687.50"></text></g><g><title>`0x7FFCAB47C76D (1 samples, 0.08%)</title><rect x="98.0348%" y="661" width="0.0756%" height="15" fill="rgb(237,194,15)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="671.50"></text></g><g><title>`0x7FFCAB47CF08 (1 samples, 0.08%)</title><rect x="98.0348%" y="645" width="0.0756%" height="15" fill="rgb(219,203,20)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="655.50"></text></g><g><title>`0x7FFCAB47CFBF (1 samples, 0.08%)</title><rect x="98.0348%" y="629" width="0.0756%" height="15" fill="rgb(234,128,8)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="639.50"></text></g><g><title>`0x7FFCAB47D0DE (1 samples, 0.08%)</title><rect x="98.0348%" y="613" width="0.0756%" height="15" fill="rgb(248,202,8)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="623.50"></text></g><g><title>`0x7FFCAB47DB0E (1 samples, 0.08%)</title><rect x="98.0348%" y="597" width="0.0756%" height="15" fill="rgb(206,104,37)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="607.50"></text></g><g><title>`0x7FFCAB47EAD4 (1 samples, 0.08%)</title><rect x="98.0348%" y="581" width="0.0756%" height="15" fill="rgb(223,8,27)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="591.50"></text></g><g><title>`0x7FFCAB47E5B7 (1 samples, 0.08%)</title><rect x="98.0348%" y="565" width="0.0756%" height="15" fill="rgb(216,217,28)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="575.50"></text></g><g><title>`0x7FFCAE09B146 (1 samples, 0.08%)</title><rect x="98.0348%" y="549" width="0.0756%" height="15" fill="rgb(249,199,1)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="559.50"></text></g><g><title>`0x7FFCAE12F5B4 (1 samples, 0.08%)</title><rect x="98.0348%" y="533" width="0.0756%" height="15" fill="rgb(240,85,17)" fg:x="1297" fg:w="1"/><text x="98.2848%" y="543.50"></text></g><g><title>`0x7FFCAE16E669 (1 samples, 0.08%)</title><rect x="98.1104%" y="805" width="0.0756%" height="15" fill="rgb(206,108,45)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="815.50"></text></g><g><title>`0x7FFCAE0A85EC (1 samples, 0.08%)</title><rect x="98.1104%" y="789" width="0.0756%" height="15" fill="rgb(245,210,41)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="799.50"></text></g><g><title>`0x7FFCAE0BB8E1 (1 samples, 0.08%)</title><rect x="98.1104%" y="773" width="0.0756%" height="15" fill="rgb(206,13,37)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="783.50"></text></g><g><title>`0x7FFCAE0BB9F7 (1 samples, 0.08%)</title><rect x="98.1104%" y="757" width="0.0756%" height="15" fill="rgb(250,61,18)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="767.50"></text></g><g><title>`0x7FFCAE0B2C35 (1 samples, 0.08%)</title><rect x="98.1104%" y="741" width="0.0756%" height="15" fill="rgb(235,172,48)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="751.50"></text></g><g><title>`0x7FFCAE0A5C8E (1 samples, 0.08%)</title><rect x="98.1104%" y="725" width="0.0756%" height="15" fill="rgb(249,201,17)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="735.50"></text></g><g><title>`0x7FFCAE0A8A85 (1 samples, 0.08%)</title><rect x="98.1104%" y="709" width="0.0756%" height="15" fill="rgb(219,208,6)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="719.50"></text></g><g><title>`0x7FFCAE0A9291 (1 samples, 0.08%)</title><rect x="98.1104%" y="693" width="0.0756%" height="15" fill="rgb(248,31,23)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="703.50"></text></g><g><title>`0x7FFCAE0A94D9 (1 samples, 0.08%)</title><rect x="98.1104%" y="677" width="0.0756%" height="15" fill="rgb(245,15,42)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="687.50"></text></g><g><title>`0x7FFCAE0A97EA (1 samples, 0.08%)</title><rect x="98.1104%" y="661" width="0.0756%" height="15" fill="rgb(222,217,39)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="671.50"></text></g><g><title>`0x7FFCAE0A994B (1 samples, 0.08%)</title><rect x="98.1104%" y="645" width="0.0756%" height="15" fill="rgb(210,219,27)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="655.50"></text></g><g><title>`0x7FFCAE0A4526 (1 samples, 0.08%)</title><rect x="98.1104%" y="629" width="0.0756%" height="15" fill="rgb(252,166,36)" fg:x="1298" fg:w="1"/><text x="98.3604%" y="639.50"></text></g><g><title>`0x7FFCAE16E7BD (1 samples, 0.08%)</title><rect x="98.1859%" y="805" width="0.0756%" height="15" fill="rgb(245,132,34)" fg:x="1299" fg:w="1"/><text x="98.4359%" y="815.50"></text></g><g><title>`0x7FFCAB4BA055 (1 samples, 0.08%)</title><rect x="98.1859%" y="789" width="0.0756%" height="15" fill="rgb(236,54,3)" fg:x="1299" fg:w="1"/><text x="98.4359%" y="799.50"></text></g><g><title>`0x7FFCAB50BD99 (1 samples, 0.08%)</title><rect x="98.1859%" y="773" width="0.0756%" height="15" fill="rgb(241,173,43)" fg:x="1299" fg:w="1"/><text x="98.4359%" y="783.50"></text></g><g><title>`0x7FFCAE0A065C (1 samples, 0.08%)</title><rect x="98.2615%" y="709" width="0.0756%" height="15" fill="rgb(215,190,9)" fg:x="1300" fg:w="1"/><text x="98.5115%" y="719.50"></text></g><g><title>`0x7FFCAE12F9D4 (1 samples, 0.08%)</title><rect x="98.2615%" y="693" width="0.0756%" height="15" fill="rgb(242,101,16)" fg:x="1300" fg:w="1"/><text x="98.5115%" y="703.50"></text></g><g><title>`0x7FFCAE0A070F (1 samples, 0.08%)</title><rect x="98.3371%" y="709" width="0.0756%" height="15" fill="rgb(223,190,21)" fg:x="1301" fg:w="1"/><text x="98.5871%" y="719.50"></text></g><g><title>`0x7FFCAE0BC399 (1 samples, 0.08%)</title><rect x="98.3371%" y="693" width="0.0756%" height="15" fill="rgb(215,228,25)" fg:x="1301" fg:w="1"/><text x="98.5871%" y="703.50"></text></g><g><title>`0x7FFCAE0BAF85 (1 samples, 0.08%)</title><rect x="98.3371%" y="677" width="0.0756%" height="15" fill="rgb(225,36,22)" fg:x="1301" fg:w="1"/><text x="98.5871%" y="687.50"></text></g><g><title>`0x7FFCAE0BB4D7 (1 samples, 0.08%)</title><rect x="98.3371%" y="661" width="0.0756%" height="15" fill="rgb(251,106,46)" fg:x="1301" fg:w="1"/><text x="98.5871%" y="671.50"></text></g><g><title>`0x7FFCAE12FD74 (1 samples, 0.08%)</title><rect x="98.3371%" y="645" width="0.0756%" height="15" fill="rgb(208,90,1)" fg:x="1301" fg:w="1"/><text x="98.5871%" y="655.50"></text></g><g><title>`0x7FFCAE0B88D4 (3 samples, 0.23%)</title><rect x="98.2615%" y="757" width="0.2268%" height="15" fill="rgb(243,10,4)" fg:x="1300" fg:w="3"/><text x="98.5115%" y="767.50"></text></g><g><title>`0x7FFCAE0A0EBF (3 samples, 0.23%)</title><rect x="98.2615%" y="741" width="0.2268%" height="15" fill="rgb(212,137,27)" fg:x="1300" fg:w="3"/><text x="98.5115%" y="751.50"></text></g><g><title>`0x7FFCAE0A10F0 (3 samples, 0.23%)</title><rect x="98.2615%" y="725" width="0.2268%" height="15" fill="rgb(231,220,49)" fg:x="1300" fg:w="3"/><text x="98.5115%" y="735.50"></text></g><g><title>`0x7FFCAE0A072D (1 samples, 0.08%)</title><rect x="98.4127%" y="709" width="0.0756%" height="15" fill="rgb(237,96,20)" fg:x="1302" fg:w="1"/><text x="98.6627%" y="719.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="98.4127%" y="693" width="0.0756%" height="15" fill="rgb(239,229,30)" fg:x="1302" fg:w="1"/><text x="98.6627%" y="703.50"></text></g><g><title>`0x7FFCAE109179 (4 samples, 0.30%)</title><rect x="98.2615%" y="789" width="0.3023%" height="15" fill="rgb(219,65,33)" fg:x="1300" fg:w="4"/><text x="98.5115%" y="799.50"></text></g><g><title>`0x7FFCAE0A8CAC (4 samples, 0.30%)</title><rect x="98.2615%" y="773" width="0.3023%" height="15" fill="rgb(243,134,7)" fg:x="1300" fg:w="4"/><text x="98.5115%" y="783.50"></text></g><g><title>`0x7FFCAE0B8940 (1 samples, 0.08%)</title><rect x="98.4883%" y="757" width="0.0756%" height="15" fill="rgb(216,177,54)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="767.50"></text></g><g><title>`0x7FFCAE0BD62D (1 samples, 0.08%)</title><rect x="98.4883%" y="741" width="0.0756%" height="15" fill="rgb(211,160,20)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="751.50"></text></g><g><title>`0x7FFCAE0FCDFE (1 samples, 0.08%)</title><rect x="98.4883%" y="725" width="0.0756%" height="15" fill="rgb(239,85,39)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="735.50"></text></g><g><title>`0x7FFCAE0FD04D (1 samples, 0.08%)</title><rect x="98.4883%" y="709" width="0.0756%" height="15" fill="rgb(232,125,22)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="719.50"></text></g><g><title>`0x7FFCAE0B869F (1 samples, 0.08%)</title><rect x="98.4883%" y="693" width="0.0756%" height="15" fill="rgb(244,57,34)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="703.50"></text></g><g><title>`0x7FFCA82749B0 (1 samples, 0.08%)</title><rect x="98.4883%" y="677" width="0.0756%" height="15" fill="rgb(214,203,32)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="687.50"></text></g><g><title>`0x7FFCA826F2AD (1 samples, 0.08%)</title><rect x="98.4883%" y="661" width="0.0756%" height="15" fill="rgb(207,58,43)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="671.50"></text></g><g><title>`0x7FFCA826F462 (1 samples, 0.08%)</title><rect x="98.4883%" y="645" width="0.0756%" height="15" fill="rgb(215,193,15)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="655.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="98.4883%" y="629" width="0.0756%" height="15" fill="rgb(232,15,44)" fg:x="1303" fg:w="1"/><text x="98.7383%" y="639.50"></text></g><g><title>`0x7FFCA826D6DE (2 samples, 0.15%)</title><rect x="98.5639%" y="677" width="0.1512%" height="15" fill="rgb(212,3,48)" fg:x="1304" fg:w="2"/><text x="98.8139%" y="687.50"></text></g><g><title>`0x7FFCAE12F9D4 (2 samples, 0.15%)</title><rect x="98.5639%" y="661" width="0.1512%" height="15" fill="rgb(218,128,7)" fg:x="1304" fg:w="2"/><text x="98.8139%" y="671.50"></text></g><g><title>`0x7FFCA82676C5 (3 samples, 0.23%)</title><rect x="98.5639%" y="773" width="0.2268%" height="15" fill="rgb(226,216,39)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="783.50"></text></g><g><title>`0x7FFCA8266EFB (3 samples, 0.23%)</title><rect x="98.5639%" y="757" width="0.2268%" height="15" fill="rgb(243,47,51)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="767.50"></text></g><g><title>`0x7FFCA8267296 (3 samples, 0.23%)</title><rect x="98.5639%" y="741" width="0.2268%" height="15" fill="rgb(241,183,40)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="751.50"></text></g><g><title>`0x7FFCAE0E168C (3 samples, 0.23%)</title><rect x="98.5639%" y="725" width="0.2268%" height="15" fill="rgb(231,217,32)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="735.50"></text></g><g><title>`0x7FFCA826C677 (3 samples, 0.23%)</title><rect x="98.5639%" y="709" width="0.2268%" height="15" fill="rgb(229,61,38)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="719.50"></text></g><g><title>`0x7FFCA826CE04 (3 samples, 0.23%)</title><rect x="98.5639%" y="693" width="0.2268%" height="15" fill="rgb(225,210,5)" fg:x="1304" fg:w="3"/><text x="98.8139%" y="703.50"></text></g><g><title>`0x7FFCA826D7D4 (1 samples, 0.08%)</title><rect x="98.7150%" y="677" width="0.0756%" height="15" fill="rgb(231,79,45)" fg:x="1306" fg:w="1"/><text x="98.9650%" y="687.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="98.7150%" y="661" width="0.0756%" height="15" fill="rgb(224,100,7)" fg:x="1306" fg:w="1"/><text x="98.9650%" y="671.50"></text></g><g><title>`0x7FFCA82676D8 (1 samples, 0.08%)</title><rect x="98.7906%" y="773" width="0.0756%" height="15" fill="rgb(241,198,18)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="783.50"></text></g><g><title>`0x7FFCA826A004 (1 samples, 0.08%)</title><rect x="98.7906%" y="757" width="0.0756%" height="15" fill="rgb(252,97,53)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="767.50"></text></g><g><title>`0x7FFCA826F832 (1 samples, 0.08%)</title><rect x="98.7906%" y="741" width="0.0756%" height="15" fill="rgb(220,88,7)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="751.50"></text></g><g><title>`0x7FFCA82689B3 (1 samples, 0.08%)</title><rect x="98.7906%" y="725" width="0.0756%" height="15" fill="rgb(213,176,14)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="735.50"></text></g><g><title>`0x7FFCA826D5BB (1 samples, 0.08%)</title><rect x="98.7906%" y="709" width="0.0756%" height="15" fill="rgb(246,73,7)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="719.50"></text></g><g><title>`0x7FFCAE12F5B4 (1 samples, 0.08%)</title><rect x="98.7906%" y="693" width="0.0756%" height="15" fill="rgb(245,64,36)" fg:x="1307" fg:w="1"/><text x="99.0406%" y="703.50"></text></g><g><title>`0x7FFCA826772D (1 samples, 0.08%)</title><rect x="98.8662%" y="773" width="0.0756%" height="15" fill="rgb(245,80,10)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="783.50"></text></g><g><title>`0x7FFCA827877F (1 samples, 0.08%)</title><rect x="98.8662%" y="757" width="0.0756%" height="15" fill="rgb(232,107,50)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="767.50"></text></g><g><title>`0x7FFCA8266307 (1 samples, 0.08%)</title><rect x="98.8662%" y="741" width="0.0756%" height="15" fill="rgb(253,3,0)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="751.50"></text></g><g><title>`0x7FFCAE0E88FC (1 samples, 0.08%)</title><rect x="98.8662%" y="725" width="0.0756%" height="15" fill="rgb(212,99,53)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="735.50"></text></g><g><title>`0x7FFCAE0A4D50 (1 samples, 0.08%)</title><rect x="98.8662%" y="709" width="0.0756%" height="15" fill="rgb(249,111,54)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="719.50"></text></g><g><title>`0x7FFCAE0FBC6F (1 samples, 0.08%)</title><rect x="98.8662%" y="693" width="0.0756%" height="15" fill="rgb(249,55,30)" fg:x="1308" fg:w="1"/><text x="99.1162%" y="703.50"></text></g><g><title>`0x7FFCA826775C (2 samples, 0.15%)</title><rect x="98.9418%" y="773" width="0.1512%" height="15" fill="rgb(237,47,42)" fg:x="1309" fg:w="2"/><text x="99.1918%" y="783.50"></text></g><g><title>`0x7FFCA8267516 (2 samples, 0.15%)</title><rect x="98.9418%" y="757" width="0.1512%" height="15" fill="rgb(211,20,18)" fg:x="1309" fg:w="2"/><text x="99.1918%" y="767.50"></text></g><g><title>`0x7FFCA8269245 (2 samples, 0.15%)</title><rect x="98.9418%" y="741" width="0.1512%" height="15" fill="rgb(231,203,46)" fg:x="1309" fg:w="2"/><text x="99.1918%" y="751.50"></text></g><g><title>`0x7FFCA82714B9 (2 samples, 0.15%)</title><rect x="98.9418%" y="725" width="0.1512%" height="15" fill="rgb(237,142,3)" fg:x="1309" fg:w="2"/><text x="99.1918%" y="735.50"></text></g><g><title>`0x7FFCAE12FCF4 (2 samples, 0.15%)</title><rect x="98.9418%" y="709" width="0.1512%" height="15" fill="rgb(241,107,1)" fg:x="1309" fg:w="2"/><text x="99.1918%" y="719.50"></text></g><g><title>`0x7FFCA82677C2 (1 samples, 0.08%)</title><rect x="99.0930%" y="773" width="0.0756%" height="15" fill="rgb(229,83,13)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="783.50"></text></g><g><title>`0x7FFCA826B02D (1 samples, 0.08%)</title><rect x="99.0930%" y="757" width="0.0756%" height="15" fill="rgb(241,91,40)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="767.50"></text></g><g><title>`0x7FFCA8261C3D (1 samples, 0.08%)</title><rect x="99.0930%" y="741" width="0.0756%" height="15" fill="rgb(225,3,45)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="751.50"></text></g><g><title>`0x7FFCA8261FE5 (1 samples, 0.08%)</title><rect x="99.0930%" y="725" width="0.0756%" height="15" fill="rgb(244,223,14)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="735.50"></text></g><g><title>`0x7FFCA8262991 (1 samples, 0.08%)</title><rect x="99.0930%" y="709" width="0.0756%" height="15" fill="rgb(224,124,37)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="719.50"></text></g><g><title>`0x7FFCA827F00D (1 samples, 0.08%)</title><rect x="99.0930%" y="693" width="0.0756%" height="15" fill="rgb(251,171,30)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="703.50"></text></g><g><title>`0x7FFCA826A423 (1 samples, 0.08%)</title><rect x="99.0930%" y="677" width="0.0756%" height="15" fill="rgb(236,46,54)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="687.50"></text></g><g><title>`0x7FFCA826B968 (1 samples, 0.08%)</title><rect x="99.0930%" y="661" width="0.0756%" height="15" fill="rgb(245,213,5)" fg:x="1311" fg:w="1"/><text x="99.3430%" y="671.50"></text></g><g><title>`0x7FFCAE109223 (9 samples, 0.68%)</title><rect x="98.5639%" y="789" width="0.6803%" height="15" fill="rgb(230,144,27)" fg:x="1304" fg:w="9"/><text x="98.8139%" y="799.50"></text></g><g><title>`0x7FFCA826783F (1 samples, 0.08%)</title><rect x="99.1686%" y="773" width="0.0756%" height="15" fill="rgb(220,86,6)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="783.50"></text></g><g><title>`0x7FFCA826F901 (1 samples, 0.08%)</title><rect x="99.1686%" y="757" width="0.0756%" height="15" fill="rgb(240,20,13)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="767.50"></text></g><g><title>`0x7FFCA826F9EB (1 samples, 0.08%)</title><rect x="99.1686%" y="741" width="0.0756%" height="15" fill="rgb(217,89,34)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="751.50"></text></g><g><title>`0x7FFCA826FA2A (1 samples, 0.08%)</title><rect x="99.1686%" y="725" width="0.0756%" height="15" fill="rgb(229,13,5)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="735.50"></text></g><g><title>`0x7FFCA826FAAE (1 samples, 0.08%)</title><rect x="99.1686%" y="709" width="0.0756%" height="15" fill="rgb(244,67,35)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="719.50"></text></g><g><title>`0x7FFCAE12F554 (1 samples, 0.08%)</title><rect x="99.1686%" y="693" width="0.0756%" height="15" fill="rgb(221,40,2)" fg:x="1312" fg:w="1"/><text x="99.4186%" y="703.50"></text></g><g><title>`0x7FFCA8261917 (1 samples, 0.08%)</title><rect x="99.2441%" y="709" width="0.0756%" height="15" fill="rgb(237,157,21)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="719.50"></text></g><g><title>`0x7FFCA82611EB (1 samples, 0.08%)</title><rect x="99.2441%" y="693" width="0.0756%" height="15" fill="rgb(222,94,11)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="703.50"></text></g><g><title>`0x7FFCAB492437 (1 samples, 0.08%)</title><rect x="99.2441%" y="677" width="0.0756%" height="15" fill="rgb(249,113,6)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="687.50"></text></g><g><title>`0x7FFCAE0B93DE (1 samples, 0.08%)</title><rect x="99.2441%" y="661" width="0.0756%" height="15" fill="rgb(238,137,36)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="671.50"></text></g><g><title>`0x7FFCAE0B79E3 (1 samples, 0.08%)</title><rect x="99.2441%" y="645" width="0.0756%" height="15" fill="rgb(210,102,26)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="655.50"></text></g><g><title>`0x7FFCAE0AECB0 (1 samples, 0.08%)</title><rect x="99.2441%" y="629" width="0.0756%" height="15" fill="rgb(218,30,30)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="639.50"></text></g><g><title>`0x7FFCAE0A17B3 (1 samples, 0.08%)</title><rect x="99.2441%" y="613" width="0.0756%" height="15" fill="rgb(214,67,26)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="623.50"></text></g><g><title>`0x7FFCAE0AED59 (1 samples, 0.08%)</title><rect x="99.2441%" y="597" width="0.0756%" height="15" fill="rgb(251,9,53)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="607.50"></text></g><g><title>`0x7FFCAE09A20C (1 samples, 0.08%)</title><rect x="99.2441%" y="581" width="0.0756%" height="15" fill="rgb(228,204,25)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="591.50"></text></g><g><title>`0x7FFCAE099E75 (1 samples, 0.08%)</title><rect x="99.2441%" y="565" width="0.0756%" height="15" fill="rgb(207,153,8)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="575.50"></text></g><g><title>`0x7FFCAE0A2500 (1 samples, 0.08%)</title><rect x="99.2441%" y="549" width="0.0756%" height="15" fill="rgb(242,9,16)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="559.50"></text></g><g><title>`0x7FFCAE09B2AB (1 samples, 0.08%)</title><rect x="99.2441%" y="533" width="0.0756%" height="15" fill="rgb(217,211,10)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="543.50"></text></g><g><title>`0x7FFCAE12F5B4 (1 samples, 0.08%)</title><rect x="99.2441%" y="517" width="0.0756%" height="15" fill="rgb(219,228,52)" fg:x="1313" fg:w="1"/><text x="99.4941%" y="527.50"></text></g><g><title>`0x7FFCAE16E831 (15 samples, 1.13%)</title><rect x="98.2615%" y="805" width="1.1338%" height="15" fill="rgb(231,92,29)" fg:x="1300" fg:w="15"/><text x="98.5115%" y="815.50"></text></g><g><title>`0x7FFCAE109231 (2 samples, 0.15%)</title><rect x="99.2441%" y="789" width="0.1512%" height="15" fill="rgb(232,8,23)" fg:x="1313" fg:w="2"/><text x="99.4941%" y="799.50"></text></g><g><title>`0x7FFCAE10988C (2 samples, 0.15%)</title><rect x="99.2441%" y="773" width="0.1512%" height="15" fill="rgb(216,211,34)" fg:x="1313" fg:w="2"/><text x="99.4941%" y="783.50"></text></g><g><title>`0x7FFCAE109957 (2 samples, 0.15%)</title><rect x="99.2441%" y="757" width="0.1512%" height="15" fill="rgb(236,151,0)" fg:x="1313" fg:w="2"/><text x="99.4941%" y="767.50"></text></g><g><title>`0x7FFCA826DA0A (2 samples, 0.15%)</title><rect x="99.2441%" y="741" width="0.1512%" height="15" fill="rgb(209,168,3)" fg:x="1313" fg:w="2"/><text x="99.4941%" y="751.50"></text></g><g><title>`0x7FFCA8261632 (2 samples, 0.15%)</title><rect x="99.2441%" y="725" width="0.1512%" height="15" fill="rgb(208,129,28)" fg:x="1313" fg:w="2"/><text x="99.4941%" y="735.50"></text></g><g><title>`0x7FFCA826198A (1 samples, 0.08%)</title><rect x="99.3197%" y="709" width="0.0756%" height="15" fill="rgb(229,78,22)" fg:x="1314" fg:w="1"/><text x="99.5697%" y="719.50"></text></g><g><title>`0x7FFCAE12009A (1 samples, 0.08%)</title><rect x="99.3197%" y="693" width="0.0756%" height="15" fill="rgb(228,187,13)" fg:x="1314" fg:w="1"/><text x="99.5697%" y="703.50"></text></g><g><title>`0x7FFCAE0B4541 (1 samples, 0.08%)</title><rect x="99.3953%" y="789" width="0.0756%" height="15" fill="rgb(240,119,24)" fg:x="1315" fg:w="1"/><text x="99.6453%" y="799.50"></text></g><g><title>`0x7FFCAE0BAE0E (1 samples, 0.08%)</title><rect x="99.3953%" y="773" width="0.0756%" height="15" fill="rgb(209,194,42)" fg:x="1315" fg:w="1"/><text x="99.6453%" y="783.50"></text></g><g><title>`0x7FFCAE0B58C4 (1 samples, 0.08%)</title><rect x="99.4709%" y="757" width="0.0756%" height="15" fill="rgb(247,200,46)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="767.50"></text></g><g><title>`0x7FFCAE0BCE29 (1 samples, 0.08%)</title><rect x="99.4709%" y="741" width="0.0756%" height="15" fill="rgb(218,76,16)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="751.50"></text></g><g><title>`0x7FFCAE0BC3F8 (1 samples, 0.08%)</title><rect x="99.4709%" y="725" width="0.0756%" height="15" fill="rgb(225,21,48)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="735.50"></text></g><g><title>`0x7FFCAE0B4749 (1 samples, 0.08%)</title><rect x="99.4709%" y="709" width="0.0756%" height="15" fill="rgb(239,223,50)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="719.50"></text></g><g><title>`0x7FFCAE102EEF (1 samples, 0.08%)</title><rect x="99.4709%" y="693" width="0.0756%" height="15" fill="rgb(244,45,21)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="703.50"></text></g><g><title>`0x7FFCAE0C4D44 (1 samples, 0.08%)</title><rect x="99.4709%" y="677" width="0.0756%" height="15" fill="rgb(232,33,43)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="687.50"></text></g><g><title>`0x7FFCAE0C4EE6 (1 samples, 0.08%)</title><rect x="99.4709%" y="661" width="0.0756%" height="15" fill="rgb(209,8,3)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="671.50"></text></g><g><title>`0x7FFCAE1322E4 (1 samples, 0.08%)</title><rect x="99.4709%" y="645" width="0.0756%" height="15" fill="rgb(214,25,53)" fg:x="1316" fg:w="1"/><text x="99.7209%" y="655.50"></text></g><g><title>`0x7FFCAE16E8EF (3 samples, 0.23%)</title><rect x="99.3953%" y="805" width="0.2268%" height="15" fill="rgb(254,186,54)" fg:x="1315" fg:w="3"/><text x="99.6453%" y="815.50"></text></g><g><title>`0x7FFCAE0B46BB (2 samples, 0.15%)</title><rect x="99.4709%" y="789" width="0.1512%" height="15" fill="rgb(208,174,49)" fg:x="1316" fg:w="2"/><text x="99.7209%" y="799.50"></text></g><g><title>`0x7FFCAE0B4906 (2 samples, 0.15%)</title><rect x="99.4709%" y="773" width="0.1512%" height="15" fill="rgb(233,191,51)" fg:x="1316" fg:w="2"/><text x="99.7209%" y="783.50"></text></g><g><title>`0x7FFCAE0B58EB (1 samples, 0.08%)</title><rect x="99.5465%" y="757" width="0.0756%" height="15" fill="rgb(222,134,10)" fg:x="1317" fg:w="1"/><text x="99.7965%" y="767.50"></text></g><g><title>`0x7FFCAE102EEF (1 samples, 0.08%)</title><rect x="99.5465%" y="741" width="0.0756%" height="15" fill="rgb(230,226,20)" fg:x="1317" fg:w="1"/><text x="99.7965%" y="751.50"></text></g><g><title>`0x7FFCAE0C4D44 (1 samples, 0.08%)</title><rect x="99.5465%" y="725" width="0.0756%" height="15" fill="rgb(251,111,25)" fg:x="1317" fg:w="1"/><text x="99.7965%" y="735.50"></text></g><g><title>`0x7FFCAE0C4EE6 (1 samples, 0.08%)</title><rect x="99.5465%" y="709" width="0.0756%" height="15" fill="rgb(224,40,46)" fg:x="1317" fg:w="1"/><text x="99.7965%" y="719.50"></text></g><g><title>`0x7FFCAE1322E4 (1 samples, 0.08%)</title><rect x="99.5465%" y="693" width="0.0756%" height="15" fill="rgb(236,108,47)" fg:x="1317" fg:w="1"/><text x="99.7965%" y="703.50"></text></g><g><title>`0x7FFCAE0BE7EF (1 samples, 0.08%)</title><rect x="99.6221%" y="757" width="0.0756%" height="15" fill="rgb(234,93,0)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="767.50"></text></g><g><title>`0x7FFCAE0BE94C (1 samples, 0.08%)</title><rect x="99.6221%" y="741" width="0.0756%" height="15" fill="rgb(224,213,32)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="751.50"></text></g><g><title>`0x7FFCA826DA3D (1 samples, 0.08%)</title><rect x="99.6221%" y="725" width="0.0756%" height="15" fill="rgb(251,11,48)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="735.50"></text></g><g><title>`0x7FFCA826DC15 (1 samples, 0.08%)</title><rect x="99.6221%" y="709" width="0.0756%" height="15" fill="rgb(236,173,5)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="719.50"></text></g><g><title>`0x7FFCA826D6DE (1 samples, 0.08%)</title><rect x="99.6221%" y="693" width="0.0756%" height="15" fill="rgb(230,95,12)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="703.50"></text></g><g><title>`0x7FFCAE12F9D4 (1 samples, 0.08%)</title><rect x="99.6221%" y="677" width="0.0756%" height="15" fill="rgb(232,209,1)" fg:x="1318" fg:w="1"/><text x="99.8721%" y="687.50"></text></g><g><title>`0x7FFCAE16E938 (2 samples, 0.15%)</title><rect x="99.6221%" y="805" width="0.1512%" height="15" fill="rgb(232,6,1)" fg:x="1318" fg:w="2"/><text x="99.8721%" y="815.50"></text></g><g><title>`0x7FFCAE0BD5E1 (2 samples, 0.15%)</title><rect x="99.6221%" y="789" width="0.1512%" height="15" fill="rgb(210,224,50)" fg:x="1318" fg:w="2"/><text x="99.8721%" y="799.50"></text></g><g><title>`0x7FFCAE0BE809 (2 samples, 0.15%)</title><rect x="99.6221%" y="773" width="0.1512%" height="15" fill="rgb(228,127,35)" fg:x="1318" fg:w="2"/><text x="99.8721%" y="783.50"></text></g><g><title>`0x7FFCAE0BE809 (1 samples, 0.08%)</title><rect x="99.6977%" y="757" width="0.0756%" height="15" fill="rgb(245,102,45)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="767.50"></text></g><g><title>`0x7FFCAE0BE7EF (1 samples, 0.08%)</title><rect x="99.6977%" y="741" width="0.0756%" height="15" fill="rgb(214,1,49)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="751.50"></text></g><g><title>`0x7FFCAE0BE94C (1 samples, 0.08%)</title><rect x="99.6977%" y="725" width="0.0756%" height="15" fill="rgb(226,163,40)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="735.50"></text></g><g><title>`0x7FFCA826DA3D (1 samples, 0.08%)</title><rect x="99.6977%" y="709" width="0.0756%" height="15" fill="rgb(239,212,28)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="719.50"></text></g><g><title>`0x7FFCA826DC15 (1 samples, 0.08%)</title><rect x="99.6977%" y="693" width="0.0756%" height="15" fill="rgb(220,20,13)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="703.50"></text></g><g><title>`0x7FFCA826D769 (1 samples, 0.08%)</title><rect x="99.6977%" y="677" width="0.0756%" height="15" fill="rgb(210,164,35)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="687.50"></text></g><g><title>`0x7FFCAE132024 (1 samples, 0.08%)</title><rect x="99.6977%" y="661" width="0.0756%" height="15" fill="rgb(248,109,41)" fg:x="1319" fg:w="1"/><text x="99.9477%" y="671.50"></text></g><g><title>`0x7FFCAB9D8138 (1 samples, 0.08%)</title><rect x="99.7732%" y="693" width="0.0756%" height="15" fill="rgb(238,23,50)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="703.50"></text></g><g><title>`0x7FFCABA11FC6 (1 samples, 0.08%)</title><rect x="99.7732%" y="677" width="0.0756%" height="15" fill="rgb(211,48,49)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="687.50"></text></g><g><title>`0x7FFCABA125E8 (1 samples, 0.08%)</title><rect x="99.7732%" y="661" width="0.0756%" height="15" fill="rgb(223,36,21)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="671.50"></text></g><g><title>`0x7FFCABA12992 (1 samples, 0.08%)</title><rect x="99.7732%" y="645" width="0.0756%" height="15" fill="rgb(207,123,46)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="655.50"></text></g><g><title>`0x7FFCABA127AD (1 samples, 0.08%)</title><rect x="99.7732%" y="629" width="0.0756%" height="15" fill="rgb(240,218,32)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="639.50"></text></g><g><title>`0x7FFCAB491FBD (1 samples, 0.08%)</title><rect x="99.7732%" y="613" width="0.0756%" height="15" fill="rgb(252,5,43)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="623.50"></text></g><g><title>`0x7FFCAE0B1E35 (1 samples, 0.08%)</title><rect x="99.7732%" y="597" width="0.0756%" height="15" fill="rgb(252,84,19)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="607.50"></text></g><g><title>`0x7FFCA826EB51 (1 samples, 0.08%)</title><rect x="99.7732%" y="581" width="0.0756%" height="15" fill="rgb(243,152,39)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="591.50"></text></g><g><title>`0x7FFCAE1207CE (1 samples, 0.08%)</title><rect x="99.7732%" y="565" width="0.0756%" height="15" fill="rgb(234,160,15)" fg:x="1320" fg:w="1"/><text x="100.0232%" y="575.50"></text></g><g><title>`0x7FFCAE103EB3 (44 samples, 3.33%)</title><rect x="96.5986%" y="837" width="3.3258%" height="15" fill="rgb(237,34,20)" fg:x="1278" fg:w="44"/><text x="96.8486%" y="847.50">`0x..</text></g><g><title>`0x7FFCAE15A184 (44 samples, 3.33%)</title><rect x="96.5986%" y="821" width="3.3258%" height="15" fill="rgb(229,97,13)" fg:x="1278" fg:w="44"/><text x="96.8486%" y="831.50">`0x..</text></g><g><title>`0x7FFCAE16EA75 (2 samples, 0.15%)</title><rect x="99.7732%" y="805" width="0.1512%" height="15" fill="rgb(234,71,50)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="815.50"></text></g><g><title>`0x7FFCAE0FCE70 (2 samples, 0.15%)</title><rect x="99.7732%" y="789" width="0.1512%" height="15" fill="rgb(253,155,4)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="799.50"></text></g><g><title>`0x7FFCAE0FCE70 (2 samples, 0.15%)</title><rect x="99.7732%" y="773" width="0.1512%" height="15" fill="rgb(222,185,37)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="783.50"></text></g><g><title>`0x7FFCAE0FCDFE (2 samples, 0.15%)</title><rect x="99.7732%" y="757" width="0.1512%" height="15" fill="rgb(251,177,13)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="767.50"></text></g><g><title>`0x7FFCAE0FD04D (2 samples, 0.15%)</title><rect x="99.7732%" y="741" width="0.1512%" height="15" fill="rgb(250,179,40)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="751.50"></text></g><g><title>`0x7FFCAE0B869F (2 samples, 0.15%)</title><rect x="99.7732%" y="725" width="0.1512%" height="15" fill="rgb(242,44,2)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="735.50"></text></g><g><title>`0x7FFCAB9D7853 (2 samples, 0.15%)</title><rect x="99.7732%" y="709" width="0.1512%" height="15" fill="rgb(216,177,13)" fg:x="1320" fg:w="2"/><text x="100.0232%" y="719.50"></text></g><g><title>`0x7FFCAB9D816A (1 samples, 0.08%)</title><rect x="99.8488%" y="693" width="0.0756%" height="15" fill="rgb(216,106,43)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="703.50"></text></g><g><title>`0x7FFCAB9E7869 (1 samples, 0.08%)</title><rect x="99.8488%" y="677" width="0.0756%" height="15" fill="rgb(216,183,2)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="687.50"></text></g><g><title>`0x7FFCAB9E78B8 (1 samples, 0.08%)</title><rect x="99.8488%" y="661" width="0.0756%" height="15" fill="rgb(249,75,3)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="671.50"></text></g><g><title>`0x7FFCAB9C6A5B (1 samples, 0.08%)</title><rect x="99.8488%" y="645" width="0.0756%" height="15" fill="rgb(219,67,39)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="655.50"></text></g><g><title>`0x7FFCAB4A5EBA (1 samples, 0.08%)</title><rect x="99.8488%" y="629" width="0.0756%" height="15" fill="rgb(253,228,2)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="639.50"></text></g><g><title>`0x7FFCAE0CCD59 (1 samples, 0.08%)</title><rect x="99.8488%" y="613" width="0.0756%" height="15" fill="rgb(235,138,27)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="623.50"></text></g><g><title>`0x7FFCAE0CF738 (1 samples, 0.08%)</title><rect x="99.8488%" y="597" width="0.0756%" height="15" fill="rgb(236,97,51)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="607.50"></text></g><g><title>`0x7FFCAE0D57DB (1 samples, 0.08%)</title><rect x="99.8488%" y="581" width="0.0756%" height="15" fill="rgb(240,80,30)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="591.50"></text></g><g><title>`0x7FFCAE0D5C25 (1 samples, 0.08%)</title><rect x="99.8488%" y="565" width="0.0756%" height="15" fill="rgb(230,178,19)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="575.50"></text></g><g><title>`0x7FFCAE0D5D75 (1 samples, 0.08%)</title><rect x="99.8488%" y="549" width="0.0756%" height="15" fill="rgb(210,190,27)" fg:x="1321" fg:w="1"/><text x="100.0988%" y="559.50"></text></g><g><title>all (1,323 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(222,107,31)" fg:x="0" fg:w="1323"/><text x="0.2500%" y="879.50"></text></g><g><title>`0x7FFCAE103DDE (46 samples, 3.48%)</title><rect x="96.5231%" y="853" width="3.4769%" height="15" fill="rgb(216,127,34)" fg:x="1277" fg:w="46"/><text x="96.7731%" y="863.50">`0x..</text></g><g><title>`0x7FFCAE13D3F3 (1 samples, 0.08%)</title><rect x="99.9244%" y="837" width="0.0756%" height="15" fill="rgb(234,116,52)" fg:x="1322" fg:w="1"/><text x="100.1744%" y="847.50"></text></g><g><title>`0x7FFCAE13DB6D (1 samples, 0.08%)</title><rect x="99.9244%" y="821" width="0.0756%" height="15" fill="rgb(222,124,15)" fg:x="1322" fg:w="1"/><text x="100.1744%" y="831.50"></text></g><g><title>`0x7FFCAE0BB0B2 (1 samples, 0.08%)</title><rect x="99.9244%" y="805" width="0.0756%" height="15" fill="rgb(231,179,28)" fg:x="1322" fg:w="1"/><text x="100.1744%" y="815.50"></text></g><g><title>`0x7FFCAE0BBBC7 (1 samples, 0.08%)</title><rect x="99.9244%" y="789" width="0.0756%" height="15" fill="rgb(226,93,45)" fg:x="1322" fg:w="1"/><text x="100.1744%" y="799.50"></text></g></svg></svg>